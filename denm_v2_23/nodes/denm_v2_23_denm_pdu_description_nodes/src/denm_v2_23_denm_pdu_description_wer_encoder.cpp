/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:denm_v2_23:1.0
 * 
 * Module: DENM_PDU_Description {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) denmPduRelease2(103831) major-version-2(2) minor-version-2(2)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <denm_v2_23_denm_pdu_description_wer_encoder.h>

namespace wind
{
    namespace encoder_denm_v2_23_denm_pdu_description
    {
        WerEncoder::WerEncoder(ScreenLogger* logger, bool debug) 
            : logger(logger), debug(debug) {
        }

        WerEncoder::~WerEncoder() {            
        }
        

        #if WIND_ROS_VERSION == 1
          int WerEncoder::encode(const denm_v2_23_denm_pdu_description_msgs::DENM::ConstPtr& ros, const uint8_t *buffer)
		#else
		  int WerEncoder::encode(const std::shared_ptr<denm_v2_23_denm_pdu_description_msgs::msg::DENM>& ros, const uint8_t *buffer)
          //int WerEncoder::encode(const denm_v2_23_denm_pdu_description_msgs::msg::DENM* ros, const uint8_t *buffer)
		#endif
		{
            const uint8_t *start = buffer;
            int64_t __aux64__;

    // DENM  SEQUENCE
        //  header     ItsPduHeader     
        //  denm       DenmPayload      
    // Optional fields bytemap
    
    // Field:  type(ItsPduHeader) name(hheader) extGroup(0)
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        // Optional fields bytemap
        
        // Field:  type(OrdinalNumber1B) name(protocol_version) extGroup(0)
        // Integer
        
        // UINT8  min(0) max(255) span(256) dataType(UInt8)
        if(debug) {
            logger->print() << "|\033[38;5;94m000000\033[0m| " << tools::getTypeName(ros->hheader.protocol_version.value) << 
                         " hheader.protocol_version.value: " << static_cast<int>(ros->hheader.protocol_version.value);
        }
        
        uint8_t* _tmp_1 = (uint8_t*) buffer++;
        *_tmp_1 = ros->hheader.protocol_version.value; 
        __aux64__ = ros->hheader.protocol_version.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.protocol_version.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'hheader.protocol_version.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
            return -1;
        }
        
        // Field:  type(MessageId) name(message_id) extGroup(0)
        // Integer
        
        // UINT8  min(0) max(255) span(256) dataType(UInt8)
        if(debug) {
            logger->print() << "|\033[38;5;94m000001\033[0m| " << tools::getTypeName(ros->hheader.message_id.value) << 
                         " hheader.message_id.value: " << static_cast<int>(ros->hheader.message_id.value);
        }
        
        uint8_t* _tmp_2 = (uint8_t*) buffer++;
        *_tmp_2 = ros->hheader.message_id.value; 
        __aux64__ = ros->hheader.message_id.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.message_id.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'hheader.message_id.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
            return -1;
        }
        
        // Field:  type(StationId) name(station_id) extGroup(0)
        // Integer
        
        // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
        if(debug) {
            logger->print() << "|\033[38;5;94m000002\033[0m| " << tools::getTypeName(ros->hheader.station_id.value) << 
                         " hheader.station_id.value: " << ros->hheader.station_id.value;
        }
        
        uint32_t* _tmp_3 = (uint32_t*) buffer; buffer += 4;
        *_tmp_3 = ros->hheader.station_id.value; 
        __aux64__ = ros->hheader.station_id.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'hheader.station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
            return -1;
        }
    
    // Field:  type(DenmPayload) name(denm) extGroup(0)
        // DenmPayload  SEQUENCE
            //  management ManagementContainer     
            //  situation  SituationContainer    OPTIONAL  
            //  location   LocationContainer     OPTIONAL  
            //  alacarte   AlacarteContainer     OPTIONAL  
        // Optional fields bytemap
        char* _tmp_4 = (char*) buffer++;
        *_tmp_4 = (ros->denm.situation.size() != 0 ? 1 : 0);
        if(debug)
            logger->print() << "|\033[38;5;94m000003\033[0m| Optional field situation = " << *_tmp_4;
        char* _tmp_5 = (char*) buffer++;
        *_tmp_5 = (ros->denm.location.size() != 0 ? 1 : 0);
        if(debug)
            logger->print() << "|\033[38;5;94m000004\033[0m| Optional field location = " << *_tmp_5;
        char* _tmp_6 = (char*) buffer++;
        *_tmp_6 = (ros->denm.alacarte.size() != 0 ? 1 : 0);
        if(debug)
            logger->print() << "|\033[38;5;94m000005\033[0m| Optional field alacarte = " << *_tmp_6;
        
        // Field:  type(ManagementContainer) name(management) extGroup(0)
            // ManagementContainer  SEQUENCE
                //  actionId             ActionId                         
                //  detectionTime        TimestampIts                     
                //  referenceTime        TimestampIts                     
                //  termination          Termination                    OPTIONAL  
                //  eventPosition        ReferencePosition                
                //  awarenessDistance    StandardLength3b               OPTIONAL  
                //  trafficDirection     TrafficDirection               OPTIONAL  
                //  validityDuration     DeltaTimeSecond                  
                //  transmissionInterval DeltaTimeMilliSecondPositive   OPTIONAL  
                //  stationType          StationType                      
                //  ...
            uint8_t* _ext_flag_4 = (uint8_t*) buffer++;  // Write extension flag for ManagementContainer
            *_ext_flag_4 = 0;  
            
            // Optional fields bytemap
            char* _tmp_7 = (char*) buffer++;
            *_tmp_7 = (ros->denm.management.termination.size() != 0 ? 1 : 0);
            if(debug)
                logger->print() << "|\033[38;5;94m000006\033[0m| Optional field termination = " << *_tmp_7;
            char* _tmp_8 = (char*) buffer++;
            *_tmp_8 = (ros->denm.management.awareness_distance.size() != 0 ? 1 : 0);
            if(debug)
                logger->print() << "|\033[38;5;94m000007\033[0m| Optional field awareness_distance = " << *_tmp_8;
            char* _tmp_9 = (char*) buffer++;
            *_tmp_9 = (ros->denm.management.traffic_direction.size() != 0 ? 1 : 0);
            if(debug)
                logger->print() << "|\033[38;5;94m000008\033[0m| Optional field traffic_direction = " << *_tmp_9;
            char* _tmp_10 = (char*) buffer++;
            *_tmp_10 = (ros->denm.management.transmission_interval.size() != 0 ? 1 : 0);
            if(debug)
                logger->print() << "|\033[38;5;94m000009\033[0m| Optional field transmission_interval = " << *_tmp_10;
            
            // Field:  type(ActionId) name(action_id) extGroup(0)
                // ActionId  SEQUENCE
                    //  originatingStationId StationId          
                    //  sequenceNumber       SequenceNumber     
                // Optional fields bytemap
                
                // Field:  type(StationId) name(originating_station_id) extGroup(0)
                // Integer
                
                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000010\033[0m| " << tools::getTypeName(ros->denm.management.action_id.originating_station_id.value) << 
                                 " denm.management.action_id.originating_station_id.value: " << ros->denm.management.action_id.originating_station_id.value;
                }
                
                uint32_t* _tmp_11 = (uint32_t*) buffer; buffer += 4;
                *_tmp_11 = ros->denm.management.action_id.originating_station_id.value; 
                __aux64__ = ros->denm.management.action_id.originating_station_id.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                    return -1;
                }
                
                // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                // Integer
                
                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000011\033[0m| " << tools::getTypeName(ros->denm.management.action_id.sequence_number.value) << 
                                 " denm.management.action_id.sequence_number.value: " << ros->denm.management.action_id.sequence_number.value;
                }
                
                uint16_t* _tmp_12 = (uint16_t*) buffer; buffer += 2;
                *_tmp_12 = ros->denm.management.action_id.sequence_number.value; 
                __aux64__ = ros->denm.management.action_id.sequence_number.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                    return -1;
                }
            
            // Field:  type(TimestampIts) name(detection_time) extGroup(0)
            // Real
            
            // DOUBLE  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Double)
            if(debug) {
                logger->print() << "|\033[38;5;94m000012\033[0m| " << tools::getTypeName(ros->denm.management.detection_time.value) << 
                             " denm.management.detection_time.value: " << ros->denm.management.detection_time.value;
            }
            
            double _tmp_14 = ros->denm.management.detection_time.value;
            _tmp_14 *= 1000.0;
            __aux64__ = static_cast<uint64_t>(_tmp_14);
            uint64_t* _tmp_13 = (uint64_t*) buffer; buffer += 8;
            *_tmp_13 = static_cast<uint64_t>(_tmp_14);
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.detection_time.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'denm.management.detection_time.value' (" << __aux64__ << ") exceeds max allowable (4398046511103); message dropped.";
                return -1;
            }
            
            // Field:  type(TimestampIts) name(reference_time) extGroup(0)
            // Real
            
            // DOUBLE  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Double)
            if(debug) {
                logger->print() << "|\033[38;5;94m000013\033[0m| " << tools::getTypeName(ros->denm.management.reference_time.value) << 
                             " denm.management.reference_time.value: " << ros->denm.management.reference_time.value;
            }
            
            double _tmp_16 = ros->denm.management.reference_time.value;
            _tmp_16 *= 1000.0;
            __aux64__ = static_cast<uint64_t>(_tmp_16);
            uint64_t* _tmp_15 = (uint64_t*) buffer; buffer += 8;
            *_tmp_15 = static_cast<uint64_t>(_tmp_16);
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.reference_time.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'denm.management.reference_time.value' (" << __aux64__ << ") exceeds max allowable (4398046511103); message dropped.";
                return -1;
            }
            
            if(ros->denm.management.termination.size() != 0) {
                // Field:  type(Termination) name(termination) extGroup(0)
                // Enumerated
                // INT32  min(0) max(1) span(2) dataType(Int32)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000014\033[0m| " << tools::getTypeName(ros->denm.management.termination[0].value) << 
                                 " denm.management.termination[0].value: " << static_cast<int>(ros->denm.management.termination[0].value);
                }
                
                uint8_t* _tmp_17 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_17 = ros->denm.management.termination[0].value; 
                __aux64__ = ros->denm.management.termination[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.termination[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 1) {
                    logger->warning() << "Error: Value in 'denm.management.termination[0].value' (" << __aux64__ << ") exceeds max allowable (1); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(ReferencePosition) name(event_position) extGroup(0)
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                // Optional fields bytemap
                
                // Field:  type(Latitude) name(latitude) extGroup(0)
                // Real
                
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000015\033[0m| " << tools::getTypeName(ros->denm.management.event_position.latitude.value) << 
                                 " denm.management.event_position.latitude.value: " << ros->denm.management.event_position.latitude.value;
                }
                
                double _tmp_19 = ros->denm.management.event_position.latitude.value;
                _tmp_19 *= 1.0E7;
                __aux64__ = static_cast<uint64_t>(_tmp_19);
                _tmp_19 -= -900000000;
                uint32_t* _tmp_18 = (uint32_t*) buffer; buffer += 4;
                *_tmp_18 = static_cast<uint32_t>(_tmp_19);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                    return -1;
                }
                
                // Field:  type(Longitude) name(longitude) extGroup(0)
                // Real
                
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000016\033[0m| " << tools::getTypeName(ros->denm.management.event_position.longitude.value) << 
                                 " denm.management.event_position.longitude.value: " << ros->denm.management.event_position.longitude.value;
                }
                
                double _tmp_21 = ros->denm.management.event_position.longitude.value;
                _tmp_21 *= 1.0E7;
                __aux64__ = static_cast<uint64_t>(_tmp_21);
                _tmp_21 -= -1800000000;
                uint32_t* _tmp_20 = (uint32_t*) buffer; buffer += 4;
                *_tmp_20 = static_cast<uint32_t>(_tmp_21);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                    return -1;
                }
                
                // Field:  type(PosConfidenceEllipse) name(position_confidence_ellipse) extGroup(0)
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    // Optional fields bytemap
                    
                    // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000017\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    }
                    
                    float _tmp_23 = ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    _tmp_23 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_23);
                    uint16_t* _tmp_22 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_22 = static_cast<uint16_t>(_tmp_23);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000018\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    }
                    
                    float _tmp_25 = ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    _tmp_25 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_25);
                    uint16_t* _tmp_24 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_24 = static_cast<uint16_t>(_tmp_25);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000019\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    float _tmp_27 = ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    _tmp_27 *= 10.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_27);
                    uint16_t* _tmp_26 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_26 = static_cast<uint16_t>(_tmp_27);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                        return -1;
                    }
                
                // Field:  type(Altitude) name(altitude) extGroup(0)
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    // Optional fields bytemap
                    
                    // Field:  type(AltitudeValue) name(altitude_value) extGroup(0)
                    // Real
                    
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000020\033[0m| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_value.value) << 
                                     " denm.management.event_position.altitude.altitude_value.value: " << ros->denm.management.event_position.altitude.altitude_value.value;
                    }
                    
                    float _tmp_29 = ros->denm.management.event_position.altitude.altitude_value.value;
                    _tmp_29 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_29);
                    _tmp_29 -= -100000;
                    uint32_t* _tmp_28 = (uint32_t*) buffer; buffer += 4;
                    *_tmp_28 = static_cast<uint32_t>(_tmp_29);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(15) span(16) dataType(Int32)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000021\033[0m| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_confidence.value) << 
                                     " denm.management.event_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.management.event_position.altitude.altitude_confidence.value);
                    }
                    
                    uint8_t* _tmp_30 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_30 = ros->denm.management.event_position.altitude.altitude_confidence.value; 
                    __aux64__ = ros->denm.management.event_position.altitude.altitude_confidence.value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                        return -1;
                    }
            
            if(ros->denm.management.awareness_distance.size() != 0) {
                // Field:  type(StandardLength3b) name(awareness_distance) extGroup(0)
                // Enumerated
                // INT32  min(0) max(7) span(8) dataType(Int32)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000022\033[0m| " << tools::getTypeName(ros->denm.management.awareness_distance[0].value) << 
                                 " denm.management.awareness_distance[0].value: " << static_cast<int>(ros->denm.management.awareness_distance[0].value);
                }
                
                uint8_t* _tmp_31 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_31 = ros->denm.management.awareness_distance[0].value; 
                __aux64__ = ros->denm.management.awareness_distance[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.awareness_distance[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->warning() << "Error: Value in 'denm.management.awareness_distance[0].value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                    return -1;
                }
            }
            
            if(ros->denm.management.traffic_direction.size() != 0) {
                // Field:  type(TrafficDirection) name(traffic_direction) extGroup(0)
                // Enumerated
                // INT32  min(0) max(3) span(4) dataType(Int32)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000023\033[0m| " << tools::getTypeName(ros->denm.management.traffic_direction[0].value) << 
                                 " denm.management.traffic_direction[0].value: " << static_cast<int>(ros->denm.management.traffic_direction[0].value);
                }
                
                uint8_t* _tmp_32 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_32 = ros->denm.management.traffic_direction[0].value; 
                __aux64__ = ros->denm.management.traffic_direction[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.traffic_direction[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 3) {
                    logger->warning() << "Error: Value in 'denm.management.traffic_direction[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(DeltaTimeSecond) name(validity_duration) extGroup(0)
            // Integer
            
            // UINT32  min(0) max(86400) span(86401) dataType(UInt32)
            if(debug) {
                logger->print() << "|\033[38;5;94m000024\033[0m| " << tools::getTypeName(ros->denm.management.validity_duration.value) << 
                             " denm.management.validity_duration.value: " << ros->denm.management.validity_duration.value;
            }
            
            uint32_t* _tmp_33 = (uint32_t*) buffer; buffer += 4;
            *_tmp_33 = ros->denm.management.validity_duration.value; 
            __aux64__ = ros->denm.management.validity_duration.value;
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.validity_duration.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 86400) {
                logger->warning() << "Error: Value in 'denm.management.validity_duration.value' (" << __aux64__ << ") exceeds max allowable (86400); message dropped.";
                return -1;
            }
            
            if(ros->denm.management.transmission_interval.size() != 0) {
                // Field:  type(DeltaTimeMilliSecondPositive) name(transmission_interval) extGroup(0)
                // Real
                
                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000025\033[0m| " << tools::getTypeName(ros->denm.management.transmission_interval[0].value) << 
                                 " denm.management.transmission_interval[0].value: " << ros->denm.management.transmission_interval[0].value;
                }
                
                float _tmp_35 = ros->denm.management.transmission_interval[0].value;
                _tmp_35 *= 1000.0;
                __aux64__ = static_cast<uint64_t>(_tmp_35);
                _tmp_35 -= 1;
                uint16_t* _tmp_34 = (uint16_t*) buffer; buffer += 2;
                *_tmp_34 = static_cast<uint16_t>(_tmp_35);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'denm.management.transmission_interval[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 10000) {
                    logger->warning() << "Error: Value in 'denm.management.transmission_interval[0].value' (" << __aux64__ << ") exceeds max allowable (10000); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(StationType) name(station_type) extGroup(0)
            // Integer
            
            // UINT8  min(0) max(255) span(256) dataType(UInt8)
            if(debug) {
                logger->print() << "|\033[38;5;94m000026\033[0m| " << tools::getTypeName(ros->denm.management.station_type.value) << 
                             " denm.management.station_type.value: " << static_cast<int>(ros->denm.management.station_type.value);
            }
            
            uint8_t* _tmp_36 = (uint8_t*) buffer++;
            *_tmp_36 = ros->denm.management.station_type.value; 
            __aux64__ = ros->denm.management.station_type.value;
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.station_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                logger->warning() << "Error: Value in 'denm.management.station_type.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                return -1;
            }
            
            if(*_ext_flag_4) {
            }
        
        if(ros->denm.situation.size() != 0) {
            // Field:  type(SituationContainer) name(situation) extGroup(0)
                // SituationContainer  SEQUENCE
                    //  informationQuality InformationQuality     
                    //  eventType          CauseCodeV2            
                    //  linkedCause        CauseCodeV2          OPTIONAL  
                    //  eventZone          EventZone            OPTIONAL  
                    //  linkedDenms        ActionIdList         OPTIONAL  Extension group #1
                    //  eventEnd           Position1d           OPTIONAL  Extension group #1
                uint8_t* _ext_flag_22 = (uint8_t*) buffer++;  // Write extension flag for SituationContainer
                *_ext_flag_22 = (ros->denm.situation[0].linked_denms.size() != 0 || ros->denm.situation[0].event_end.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_38 = (char*) buffer++;
                *_tmp_38 = (ros->denm.situation[0].linked_cause.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000027\033[0m| Optional field linked_cause = " << *_tmp_38;
                char* _tmp_39 = (char*) buffer++;
                *_tmp_39 = (ros->denm.situation[0].event_zone.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000028\033[0m| Optional field event_zone = " << *_tmp_39;
                
                // Field:  type(InformationQuality) name(information_quality) extGroup(0)
                // Integer
                
                // UINT8  min(0) max(7) span(8) dataType(UInt8)
                if(debug) {
                    logger->print() << "|\033[38;5;94m000029\033[0m| " << tools::getTypeName(ros->denm.situation[0].information_quality.value) << 
                                 " denm.situation[0].information_quality.value: " << static_cast<int>(ros->denm.situation[0].information_quality.value);
                }
                
                uint8_t* _tmp_40 = (uint8_t*) buffer++;
                *_tmp_40 = ros->denm.situation[0].information_quality.value; 
                __aux64__ = ros->denm.situation[0].information_quality.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.situation[0].information_quality.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->warning() << "Error: Value in 'denm.situation[0].information_quality.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                    return -1;
                }
                
                // Field:  type(CauseCodeV2) name(event_type) extGroup(0)
                    // CauseCodeV2  SEQUENCE
                        //  ccAndScc   CauseCodeChoice     
                        //  ...
                    uint8_t* _ext_flag_24 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                    *_ext_flag_24 = 0;  
                    
                    // Optional fields bytemap
                    
                    // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                    // Choice
                       // #0  reserved0   SubCauseCodeType
                       // #1  trafficCondition1   TrafficConditionSubCauseCode
                       // #2  accident2   AccidentSubCauseCode
                       // #3  roadworks3   RoadworksSubCauseCode
                       // #4  reserved4   SubCauseCodeType
                       // #5  impassability5   ImpassabilitySubCauseCode
                       // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                       // #7  aquaplaning7   SubCauseCodeType
                       // #8  reserved8   SubCauseCodeType
                       // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                       // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                       // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                       // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                       // #13  reserved13   SubCauseCodeType
                       // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                       // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                       // #16  reserved16   SubCauseCodeType
                       // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                       // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                       // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                       // #20  violence20   SubCauseCodeType
                       // #21  reserved21   SubCauseCodeType
                       // #22  reserved22   SubCauseCodeType
                       // #23  reserved23   SubCauseCodeType
                       // #24  reserved24   SubCauseCodeType
                       // #25  reserved25   SubCauseCodeType
                       // #26  slowVehicle26   SlowVehicleSubCauseCode
                       // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                       // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                       // #29  reserved29   SubCauseCodeType
                       // #30  reserved30   SubCauseCodeType
                       // #31  reserved31   SubCauseCodeType
                       // #32  reserved32   SubCauseCodeType
                       // #33  reserved33   SubCauseCodeType
                       // #34  reserved34   SubCauseCodeType
                       // #35  reserved35   SubCauseCodeType
                       // #36  reserved36   SubCauseCodeType
                       // #37  reserved37   SubCauseCodeType
                       // #38  reserved38   SubCauseCodeType
                       // #39  reserved39   SubCauseCodeType
                       // #40  reserved40   SubCauseCodeType
                       // #41  reserved41   SubCauseCodeType
                       // #42  reserved42   SubCauseCodeType
                       // #43  reserved43   SubCauseCodeType
                       // #44  reserved44   SubCauseCodeType
                       // #45  reserved45   SubCauseCodeType
                       // #46  reserved46   SubCauseCodeType
                       // #47  reserved47   SubCauseCodeType
                       // #48  reserved48   SubCauseCodeType
                       // #49  reserved49   SubCauseCodeType
                       // #50  reserved50   SubCauseCodeType
                       // #51  reserved51   SubCauseCodeType
                       // #52  reserved52   SubCauseCodeType
                       // #53  reserved53   SubCauseCodeType
                       // #54  reserved54   SubCauseCodeType
                       // #55  reserved55   SubCauseCodeType
                       // #56  reserved56   SubCauseCodeType
                       // #57  reserved57   SubCauseCodeType
                       // #58  reserved58   SubCauseCodeType
                       // #59  reserved59   SubCauseCodeType
                       // #60  reserved60   SubCauseCodeType
                       // #61  reserved61   SubCauseCodeType
                       // #62  reserved62   SubCauseCodeType
                       // #63  reserved63   SubCauseCodeType
                       // #64  reserved64   SubCauseCodeType
                       // #65  reserved65   SubCauseCodeType
                       // #66  reserved66   SubCauseCodeType
                       // #67  reserved67   SubCauseCodeType
                       // #68  reserved68   SubCauseCodeType
                       // #69  reserved69   SubCauseCodeType
                       // #70  reserved70   SubCauseCodeType
                       // #71  reserved71   SubCauseCodeType
                       // #72  reserved72   SubCauseCodeType
                       // #73  reserved73   SubCauseCodeType
                       // #74  reserved74   SubCauseCodeType
                       // #75  reserved75   SubCauseCodeType
                       // #76  reserved76   SubCauseCodeType
                       // #77  reserved77   SubCauseCodeType
                       // #78  reserved78   SubCauseCodeType
                       // #79  reserved79   SubCauseCodeType
                       // #80  reserved80   SubCauseCodeType
                       // #81  reserved81   SubCauseCodeType
                       // #82  reserved82   SubCauseCodeType
                       // #83  reserved83   SubCauseCodeType
                       // #84  reserved84   SubCauseCodeType
                       // #85  reserved85   SubCauseCodeType
                       // #86  reserved86   SubCauseCodeType
                       // #87  reserved87   SubCauseCodeType
                       // #88  reserved88   SubCauseCodeType
                       // #89  reserved89   SubCauseCodeType
                       // #90  reserved90   SubCauseCodeType
                       // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                       // #92  postCrash92   PostCrashSubCauseCode
                       // #93  humanProblem93   HumanProblemSubCauseCode
                       // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                       // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                       // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                       // #97  collisionRisk97   CollisionRiskSubCauseCode
                       // #98  signalViolation98   SignalViolationSubCauseCode
                       // #99  dangerousSituation99   DangerousSituationSubCauseCode
                       // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                       // #101  reserved101   SubCauseCodeType
                       // #102  reserved102   SubCauseCodeType
                       // #103  reserved103   SubCauseCodeType
                       // #104  reserved104   SubCauseCodeType
                       // #105  reserved105   SubCauseCodeType
                       // #106  reserved106   SubCauseCodeType
                       // #107  reserved107   SubCauseCodeType
                       // #108  reserved108   SubCauseCodeType
                       // #109  reserved109   SubCauseCodeType
                       // #110  reserved110   SubCauseCodeType
                       // #111  reserved111   SubCauseCodeType
                       // #112  reserved112   SubCauseCodeType
                       // #113  reserved113   SubCauseCodeType
                       // #114  reserved114   SubCauseCodeType
                       // #115  reserved115   SubCauseCodeType
                       // #116  reserved116   SubCauseCodeType
                       // #117  reserved117   SubCauseCodeType
                       // #118  reserved118   SubCauseCodeType
                       // #119  reserved119   SubCauseCodeType
                       // #120  reserved120   SubCauseCodeType
                       // #121  reserved121   SubCauseCodeType
                       // #122  reserved122   SubCauseCodeType
                       // #123  reserved123   SubCauseCodeType
                       // #124  reserved124   SubCauseCodeType
                       // #125  reserved125   SubCauseCodeType
                       // #126  reserved126   SubCauseCodeType
                       // #127  reserved127   SubCauseCodeType
                       // #128  reserved128   SubCauseCodeType
                    uint8_t* _choice_1 = (uint8_t*) buffer;
                    buffer++;
                    
                    if(ros->denm.situation[0].event_type.cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                        *_choice_1 = 0;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000030\033[0m| Choice selection: 0";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000031\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value);
                        }
                        
                        uint8_t* _tmp_41 = (uint8_t*) buffer++;
                        *_tmp_41 = ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 1;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000032\033[0m| Choice selection: 1";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000033\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value);
                        }
                        
                        uint8_t* _tmp_42 = (uint8_t*) buffer++;
                        *_tmp_42 = ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 2;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000034\033[0m| Choice selection: 2";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000035\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value);
                        }
                        
                        uint8_t* _tmp_43 = (uint8_t*) buffer++;
                        *_tmp_43 = ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 3;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000036\033[0m| Choice selection: 3";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000037\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value);
                        }
                        
                        uint8_t* _tmp_44 = (uint8_t*) buffer++;
                        *_tmp_44 = ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 4;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000038\033[0m| Choice selection: 4";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000039\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value);
                        }
                        
                        uint8_t* _tmp_45 = (uint8_t*) buffer++;
                        *_tmp_45 = ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 5;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000040\033[0m| Choice selection: 5";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000041\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value);
                        }
                        
                        uint8_t* _tmp_46 = (uint8_t*) buffer++;
                        *_tmp_46 = ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 6;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000042\033[0m| Choice selection: 6";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000043\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                        }
                        
                        uint8_t* _tmp_47 = (uint8_t*) buffer++;
                        *_tmp_47 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 7;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000044\033[0m| Choice selection: 7";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000045\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value);
                        }
                        
                        uint8_t* _tmp_48 = (uint8_t*) buffer++;
                        *_tmp_48 = ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 8;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000046\033[0m| Choice selection: 8";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000047\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value);
                        }
                        
                        uint8_t* _tmp_49 = (uint8_t*) buffer++;
                        *_tmp_49 = ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 9;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000048\033[0m| Choice selection: 9";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000049\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value);
                        }
                        
                        uint8_t* _tmp_50 = (uint8_t*) buffer++;
                        *_tmp_50 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 10;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000050\033[0m| Choice selection: 10";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000051\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                        }
                        
                        uint8_t* _tmp_51 = (uint8_t*) buffer++;
                        *_tmp_51 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 11;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000052\033[0m| Choice selection: 11";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000053\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                        }
                        
                        uint8_t* _tmp_52 = (uint8_t*) buffer++;
                        *_tmp_52 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 12;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000054\033[0m| Choice selection: 12";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000055\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value);
                        }
                        
                        uint8_t* _tmp_53 = (uint8_t*) buffer++;
                        *_tmp_53 = ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 13;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000056\033[0m| Choice selection: 13";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000057\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value);
                        }
                        
                        uint8_t* _tmp_54 = (uint8_t*) buffer++;
                        *_tmp_54 = ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 14;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000058\033[0m| Choice selection: 14";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000059\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value);
                        }
                        
                        uint8_t* _tmp_55 = (uint8_t*) buffer++;
                        *_tmp_55 = ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 15;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000060\033[0m| Choice selection: 15";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000061\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                        }
                        
                        uint8_t* _tmp_56 = (uint8_t*) buffer++;
                        *_tmp_56 = ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 16;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000062\033[0m| Choice selection: 16";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000063\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value);
                        }
                        
                        uint8_t* _tmp_57 = (uint8_t*) buffer++;
                        *_tmp_57 = ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 17;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000064\033[0m| Choice selection: 17";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000065\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                        }
                        
                        uint8_t* _tmp_58 = (uint8_t*) buffer++;
                        *_tmp_58 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 18;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000066\033[0m| Choice selection: 18";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000067\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value);
                        }
                        
                        uint8_t* _tmp_59 = (uint8_t*) buffer++;
                        *_tmp_59 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 19;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000068\033[0m| Choice selection: 19";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000069\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                        }
                        
                        uint8_t* _tmp_60 = (uint8_t*) buffer++;
                        *_tmp_60 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 20;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000070\033[0m| Choice selection: 20";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000071\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value);
                        }
                        
                        uint8_t* _tmp_61 = (uint8_t*) buffer++;
                        *_tmp_61 = ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 21;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000072\033[0m| Choice selection: 21";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000073\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value);
                        }
                        
                        uint8_t* _tmp_62 = (uint8_t*) buffer++;
                        *_tmp_62 = ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 22;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000074\033[0m| Choice selection: 22";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000075\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value);
                        }
                        
                        uint8_t* _tmp_63 = (uint8_t*) buffer++;
                        *_tmp_63 = ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 23;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000076\033[0m| Choice selection: 23";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000077\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value);
                        }
                        
                        uint8_t* _tmp_64 = (uint8_t*) buffer++;
                        *_tmp_64 = ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 24;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000078\033[0m| Choice selection: 24";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000079\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value);
                        }
                        
                        uint8_t* _tmp_65 = (uint8_t*) buffer++;
                        *_tmp_65 = ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 25;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000080\033[0m| Choice selection: 25";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000081\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value);
                        }
                        
                        uint8_t* _tmp_66 = (uint8_t*) buffer++;
                        *_tmp_66 = ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 26;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000082\033[0m| Choice selection: 26";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000083\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value);
                        }
                        
                        uint8_t* _tmp_67 = (uint8_t*) buffer++;
                        *_tmp_67 = ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 27;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000084\033[0m| Choice selection: 27";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000085\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value);
                        }
                        
                        uint8_t* _tmp_68 = (uint8_t*) buffer++;
                        *_tmp_68 = ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 28;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000086\033[0m| Choice selection: 28";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000087\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value);
                        }
                        
                        uint8_t* _tmp_69 = (uint8_t*) buffer++;
                        *_tmp_69 = ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 29;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000088\033[0m| Choice selection: 29";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000089\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value);
                        }
                        
                        uint8_t* _tmp_70 = (uint8_t*) buffer++;
                        *_tmp_70 = ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 30;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000090\033[0m| Choice selection: 30";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000091\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value);
                        }
                        
                        uint8_t* _tmp_71 = (uint8_t*) buffer++;
                        *_tmp_71 = ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 31;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000092\033[0m| Choice selection: 31";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000093\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value);
                        }
                        
                        uint8_t* _tmp_72 = (uint8_t*) buffer++;
                        *_tmp_72 = ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 32;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000094\033[0m| Choice selection: 32";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000095\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value);
                        }
                        
                        uint8_t* _tmp_73 = (uint8_t*) buffer++;
                        *_tmp_73 = ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 33;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000096\033[0m| Choice selection: 33";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000097\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value);
                        }
                        
                        uint8_t* _tmp_74 = (uint8_t*) buffer++;
                        *_tmp_74 = ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 34;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000098\033[0m| Choice selection: 34";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000099\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value);
                        }
                        
                        uint8_t* _tmp_75 = (uint8_t*) buffer++;
                        *_tmp_75 = ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 35;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000100\033[0m| Choice selection: 35";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000101\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value);
                        }
                        
                        uint8_t* _tmp_76 = (uint8_t*) buffer++;
                        *_tmp_76 = ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 36;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000102\033[0m| Choice selection: 36";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000103\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value);
                        }
                        
                        uint8_t* _tmp_77 = (uint8_t*) buffer++;
                        *_tmp_77 = ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 37;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000104\033[0m| Choice selection: 37";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000105\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value);
                        }
                        
                        uint8_t* _tmp_78 = (uint8_t*) buffer++;
                        *_tmp_78 = ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 38;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000106\033[0m| Choice selection: 38";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000107\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value);
                        }
                        
                        uint8_t* _tmp_79 = (uint8_t*) buffer++;
                        *_tmp_79 = ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 39;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000108\033[0m| Choice selection: 39";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000109\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value);
                        }
                        
                        uint8_t* _tmp_80 = (uint8_t*) buffer++;
                        *_tmp_80 = ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 40;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000110\033[0m| Choice selection: 40";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000111\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value);
                        }
                        
                        uint8_t* _tmp_81 = (uint8_t*) buffer++;
                        *_tmp_81 = ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 41;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000112\033[0m| Choice selection: 41";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000113\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value);
                        }
                        
                        uint8_t* _tmp_82 = (uint8_t*) buffer++;
                        *_tmp_82 = ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 42;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000114\033[0m| Choice selection: 42";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000115\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value);
                        }
                        
                        uint8_t* _tmp_83 = (uint8_t*) buffer++;
                        *_tmp_83 = ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 43;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000116\033[0m| Choice selection: 43";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000117\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value);
                        }
                        
                        uint8_t* _tmp_84 = (uint8_t*) buffer++;
                        *_tmp_84 = ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 44;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000118\033[0m| Choice selection: 44";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000119\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value);
                        }
                        
                        uint8_t* _tmp_85 = (uint8_t*) buffer++;
                        *_tmp_85 = ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 45;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000120\033[0m| Choice selection: 45";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000121\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value);
                        }
                        
                        uint8_t* _tmp_86 = (uint8_t*) buffer++;
                        *_tmp_86 = ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 46;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000122\033[0m| Choice selection: 46";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000123\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value);
                        }
                        
                        uint8_t* _tmp_87 = (uint8_t*) buffer++;
                        *_tmp_87 = ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 47;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000124\033[0m| Choice selection: 47";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000125\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value);
                        }
                        
                        uint8_t* _tmp_88 = (uint8_t*) buffer++;
                        *_tmp_88 = ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 48;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000126\033[0m| Choice selection: 48";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000127\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value);
                        }
                        
                        uint8_t* _tmp_89 = (uint8_t*) buffer++;
                        *_tmp_89 = ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 49;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000128\033[0m| Choice selection: 49";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000129\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value);
                        }
                        
                        uint8_t* _tmp_90 = (uint8_t*) buffer++;
                        *_tmp_90 = ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 50;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000130\033[0m| Choice selection: 50";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000131\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value);
                        }
                        
                        uint8_t* _tmp_91 = (uint8_t*) buffer++;
                        *_tmp_91 = ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 51;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000132\033[0m| Choice selection: 51";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000133\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value);
                        }
                        
                        uint8_t* _tmp_92 = (uint8_t*) buffer++;
                        *_tmp_92 = ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 52;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000134\033[0m| Choice selection: 52";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000135\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value);
                        }
                        
                        uint8_t* _tmp_93 = (uint8_t*) buffer++;
                        *_tmp_93 = ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 53;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000136\033[0m| Choice selection: 53";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000137\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value);
                        }
                        
                        uint8_t* _tmp_94 = (uint8_t*) buffer++;
                        *_tmp_94 = ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 54;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000138\033[0m| Choice selection: 54";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000139\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value);
                        }
                        
                        uint8_t* _tmp_95 = (uint8_t*) buffer++;
                        *_tmp_95 = ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 55;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000140\033[0m| Choice selection: 55";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000141\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value);
                        }
                        
                        uint8_t* _tmp_96 = (uint8_t*) buffer++;
                        *_tmp_96 = ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 56;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000142\033[0m| Choice selection: 56";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000143\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value);
                        }
                        
                        uint8_t* _tmp_97 = (uint8_t*) buffer++;
                        *_tmp_97 = ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 57;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000144\033[0m| Choice selection: 57";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000145\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value);
                        }
                        
                        uint8_t* _tmp_98 = (uint8_t*) buffer++;
                        *_tmp_98 = ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 58;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000146\033[0m| Choice selection: 58";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000147\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value);
                        }
                        
                        uint8_t* _tmp_99 = (uint8_t*) buffer++;
                        *_tmp_99 = ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 59;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000148\033[0m| Choice selection: 59";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000149\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value);
                        }
                        
                        uint8_t* _tmp_100 = (uint8_t*) buffer++;
                        *_tmp_100 = ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 60;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000150\033[0m| Choice selection: 60";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000151\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value);
                        }
                        
                        uint8_t* _tmp_101 = (uint8_t*) buffer++;
                        *_tmp_101 = ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 61;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000152\033[0m| Choice selection: 61";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000153\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value);
                        }
                        
                        uint8_t* _tmp_102 = (uint8_t*) buffer++;
                        *_tmp_102 = ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 62;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000154\033[0m| Choice selection: 62";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000155\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value);
                        }
                        
                        uint8_t* _tmp_103 = (uint8_t*) buffer++;
                        *_tmp_103 = ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 63;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000156\033[0m| Choice selection: 63";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000157\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value);
                        }
                        
                        uint8_t* _tmp_104 = (uint8_t*) buffer++;
                        *_tmp_104 = ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 64;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000158\033[0m| Choice selection: 64";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000159\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value);
                        }
                        
                        uint8_t* _tmp_105 = (uint8_t*) buffer++;
                        *_tmp_105 = ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 65;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000160\033[0m| Choice selection: 65";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000161\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value);
                        }
                        
                        uint8_t* _tmp_106 = (uint8_t*) buffer++;
                        *_tmp_106 = ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 66;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000162\033[0m| Choice selection: 66";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000163\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value);
                        }
                        
                        uint8_t* _tmp_107 = (uint8_t*) buffer++;
                        *_tmp_107 = ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 67;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000164\033[0m| Choice selection: 67";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000165\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value);
                        }
                        
                        uint8_t* _tmp_108 = (uint8_t*) buffer++;
                        *_tmp_108 = ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 68;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000166\033[0m| Choice selection: 68";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000167\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value);
                        }
                        
                        uint8_t* _tmp_109 = (uint8_t*) buffer++;
                        *_tmp_109 = ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 69;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000168\033[0m| Choice selection: 69";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000169\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value);
                        }
                        
                        uint8_t* _tmp_110 = (uint8_t*) buffer++;
                        *_tmp_110 = ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 70;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000170\033[0m| Choice selection: 70";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000171\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value);
                        }
                        
                        uint8_t* _tmp_111 = (uint8_t*) buffer++;
                        *_tmp_111 = ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 71;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000172\033[0m| Choice selection: 71";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000173\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value);
                        }
                        
                        uint8_t* _tmp_112 = (uint8_t*) buffer++;
                        *_tmp_112 = ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 72;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000174\033[0m| Choice selection: 72";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000175\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value);
                        }
                        
                        uint8_t* _tmp_113 = (uint8_t*) buffer++;
                        *_tmp_113 = ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 73;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000176\033[0m| Choice selection: 73";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000177\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value);
                        }
                        
                        uint8_t* _tmp_114 = (uint8_t*) buffer++;
                        *_tmp_114 = ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 74;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000178\033[0m| Choice selection: 74";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000179\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value);
                        }
                        
                        uint8_t* _tmp_115 = (uint8_t*) buffer++;
                        *_tmp_115 = ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 75;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000180\033[0m| Choice selection: 75";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000181\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value);
                        }
                        
                        uint8_t* _tmp_116 = (uint8_t*) buffer++;
                        *_tmp_116 = ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 76;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000182\033[0m| Choice selection: 76";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000183\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value);
                        }
                        
                        uint8_t* _tmp_117 = (uint8_t*) buffer++;
                        *_tmp_117 = ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 77;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000184\033[0m| Choice selection: 77";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000185\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value);
                        }
                        
                        uint8_t* _tmp_118 = (uint8_t*) buffer++;
                        *_tmp_118 = ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 78;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000186\033[0m| Choice selection: 78";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000187\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value);
                        }
                        
                        uint8_t* _tmp_119 = (uint8_t*) buffer++;
                        *_tmp_119 = ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 79;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000188\033[0m| Choice selection: 79";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000189\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value);
                        }
                        
                        uint8_t* _tmp_120 = (uint8_t*) buffer++;
                        *_tmp_120 = ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 80;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000190\033[0m| Choice selection: 80";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000191\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value);
                        }
                        
                        uint8_t* _tmp_121 = (uint8_t*) buffer++;
                        *_tmp_121 = ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 81;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000192\033[0m| Choice selection: 81";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000193\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value);
                        }
                        
                        uint8_t* _tmp_122 = (uint8_t*) buffer++;
                        *_tmp_122 = ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 82;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000194\033[0m| Choice selection: 82";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000195\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value);
                        }
                        
                        uint8_t* _tmp_123 = (uint8_t*) buffer++;
                        *_tmp_123 = ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 83;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000196\033[0m| Choice selection: 83";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000197\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value);
                        }
                        
                        uint8_t* _tmp_124 = (uint8_t*) buffer++;
                        *_tmp_124 = ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 84;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000198\033[0m| Choice selection: 84";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000199\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value);
                        }
                        
                        uint8_t* _tmp_125 = (uint8_t*) buffer++;
                        *_tmp_125 = ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 85;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000200\033[0m| Choice selection: 85";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000201\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value);
                        }
                        
                        uint8_t* _tmp_126 = (uint8_t*) buffer++;
                        *_tmp_126 = ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 86;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000202\033[0m| Choice selection: 86";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000203\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value);
                        }
                        
                        uint8_t* _tmp_127 = (uint8_t*) buffer++;
                        *_tmp_127 = ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 87;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000204\033[0m| Choice selection: 87";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000205\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value);
                        }
                        
                        uint8_t* _tmp_128 = (uint8_t*) buffer++;
                        *_tmp_128 = ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 88;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000206\033[0m| Choice selection: 88";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000207\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value);
                        }
                        
                        uint8_t* _tmp_129 = (uint8_t*) buffer++;
                        *_tmp_129 = ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 89;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000208\033[0m| Choice selection: 89";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000209\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value);
                        }
                        
                        uint8_t* _tmp_130 = (uint8_t*) buffer++;
                        *_tmp_130 = ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 90;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000210\033[0m| Choice selection: 90";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000211\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value);
                        }
                        
                        uint8_t* _tmp_131 = (uint8_t*) buffer++;
                        *_tmp_131 = ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 91;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000212\033[0m| Choice selection: 91";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000213\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value);
                        }
                        
                        uint8_t* _tmp_132 = (uint8_t*) buffer++;
                        *_tmp_132 = ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 92;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000214\033[0m| Choice selection: 92";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000215\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value);
                        }
                        
                        uint8_t* _tmp_133 = (uint8_t*) buffer++;
                        *_tmp_133 = ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 93;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000216\033[0m| Choice selection: 93";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000217\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value);
                        }
                        
                        uint8_t* _tmp_134 = (uint8_t*) buffer++;
                        *_tmp_134 = ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 94;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000218\033[0m| Choice selection: 94";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000219\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value);
                        }
                        
                        uint8_t* _tmp_135 = (uint8_t*) buffer++;
                        *_tmp_135 = ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 95;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000220\033[0m| Choice selection: 95";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000221\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value);
                        }
                        
                        uint8_t* _tmp_136 = (uint8_t*) buffer++;
                        *_tmp_136 = ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 96;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000222\033[0m| Choice selection: 96";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000223\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                        }
                        
                        uint8_t* _tmp_137 = (uint8_t*) buffer++;
                        *_tmp_137 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 97;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000224\033[0m| Choice selection: 97";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000225\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value);
                        }
                        
                        uint8_t* _tmp_138 = (uint8_t*) buffer++;
                        *_tmp_138 = ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 98;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000226\033[0m| Choice selection: 98";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000227\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value);
                        }
                        
                        uint8_t* _tmp_139 = (uint8_t*) buffer++;
                        *_tmp_139 = ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 99;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000228\033[0m| Choice selection: 99";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000229\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value);
                        }
                        
                        uint8_t* _tmp_140 = (uint8_t*) buffer++;
                        *_tmp_140 = ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 100;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000230\033[0m| Choice selection: 100";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000231\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value);
                        }
                        
                        uint8_t* _tmp_141 = (uint8_t*) buffer++;
                        *_tmp_141 = ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 101;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000232\033[0m| Choice selection: 101";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000233\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value);
                        }
                        
                        uint8_t* _tmp_142 = (uint8_t*) buffer++;
                        *_tmp_142 = ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 102;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000234\033[0m| Choice selection: 102";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000235\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value);
                        }
                        
                        uint8_t* _tmp_143 = (uint8_t*) buffer++;
                        *_tmp_143 = ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 103;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000236\033[0m| Choice selection: 103";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000237\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value);
                        }
                        
                        uint8_t* _tmp_144 = (uint8_t*) buffer++;
                        *_tmp_144 = ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 104;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000238\033[0m| Choice selection: 104";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000239\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value);
                        }
                        
                        uint8_t* _tmp_145 = (uint8_t*) buffer++;
                        *_tmp_145 = ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 105;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000240\033[0m| Choice selection: 105";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000241\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value);
                        }
                        
                        uint8_t* _tmp_146 = (uint8_t*) buffer++;
                        *_tmp_146 = ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 106;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000242\033[0m| Choice selection: 106";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000243\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value);
                        }
                        
                        uint8_t* _tmp_147 = (uint8_t*) buffer++;
                        *_tmp_147 = ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 107;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000244\033[0m| Choice selection: 107";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000245\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value);
                        }
                        
                        uint8_t* _tmp_148 = (uint8_t*) buffer++;
                        *_tmp_148 = ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 108;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000246\033[0m| Choice selection: 108";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000247\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value);
                        }
                        
                        uint8_t* _tmp_149 = (uint8_t*) buffer++;
                        *_tmp_149 = ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 109;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000248\033[0m| Choice selection: 109";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000249\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value);
                        }
                        
                        uint8_t* _tmp_150 = (uint8_t*) buffer++;
                        *_tmp_150 = ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 110;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000250\033[0m| Choice selection: 110";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000251\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value);
                        }
                        
                        uint8_t* _tmp_151 = (uint8_t*) buffer++;
                        *_tmp_151 = ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 111;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000252\033[0m| Choice selection: 111";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000253\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value);
                        }
                        
                        uint8_t* _tmp_152 = (uint8_t*) buffer++;
                        *_tmp_152 = ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 112;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000254\033[0m| Choice selection: 112";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000255\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value);
                        }
                        
                        uint8_t* _tmp_153 = (uint8_t*) buffer++;
                        *_tmp_153 = ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 113;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000256\033[0m| Choice selection: 113";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000257\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value);
                        }
                        
                        uint8_t* _tmp_154 = (uint8_t*) buffer++;
                        *_tmp_154 = ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 114;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000258\033[0m| Choice selection: 114";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000259\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value);
                        }
                        
                        uint8_t* _tmp_155 = (uint8_t*) buffer++;
                        *_tmp_155 = ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 115;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000260\033[0m| Choice selection: 115";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000261\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value);
                        }
                        
                        uint8_t* _tmp_156 = (uint8_t*) buffer++;
                        *_tmp_156 = ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 116;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000262\033[0m| Choice selection: 116";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000263\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value);
                        }
                        
                        uint8_t* _tmp_157 = (uint8_t*) buffer++;
                        *_tmp_157 = ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 117;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000264\033[0m| Choice selection: 117";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000265\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value);
                        }
                        
                        uint8_t* _tmp_158 = (uint8_t*) buffer++;
                        *_tmp_158 = ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 118;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000266\033[0m| Choice selection: 118";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000267\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value);
                        }
                        
                        uint8_t* _tmp_159 = (uint8_t*) buffer++;
                        *_tmp_159 = ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 119;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000268\033[0m| Choice selection: 119";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000269\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value);
                        }
                        
                        uint8_t* _tmp_160 = (uint8_t*) buffer++;
                        *_tmp_160 = ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 120;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000270\033[0m| Choice selection: 120";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000271\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value);
                        }
                        
                        uint8_t* _tmp_161 = (uint8_t*) buffer++;
                        *_tmp_161 = ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 121;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000272\033[0m| Choice selection: 121";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000273\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value);
                        }
                        
                        uint8_t* _tmp_162 = (uint8_t*) buffer++;
                        *_tmp_162 = ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 122;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000274\033[0m| Choice selection: 122";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000275\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value);
                        }
                        
                        uint8_t* _tmp_163 = (uint8_t*) buffer++;
                        *_tmp_163 = ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 123;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000276\033[0m| Choice selection: 123";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000277\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value);
                        }
                        
                        uint8_t* _tmp_164 = (uint8_t*) buffer++;
                        *_tmp_164 = ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 124;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000278\033[0m| Choice selection: 124";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000279\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value);
                        }
                        
                        uint8_t* _tmp_165 = (uint8_t*) buffer++;
                        *_tmp_165 = ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 125;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000280\033[0m| Choice selection: 125";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000281\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value);
                        }
                        
                        uint8_t* _tmp_166 = (uint8_t*) buffer++;
                        *_tmp_166 = ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 126;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000282\033[0m| Choice selection: 126";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000283\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value);
                        }
                        
                        uint8_t* _tmp_167 = (uint8_t*) buffer++;
                        *_tmp_167 = ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 127;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000284\033[0m| Choice selection: 127";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000285\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value);
                        }
                        
                        uint8_t* _tmp_168 = (uint8_t*) buffer++;
                        *_tmp_168 = ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                    {
                        *_choice_1 = 128;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m000286\033[0m| Choice selection: 128";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000287\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value);
                        }
                        
                        uint8_t* _tmp_169 = (uint8_t*) buffer++;
                        *_tmp_169 = ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else
                    {
                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_1) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].event_type.cc_and_scc'; message dropped.";
                        return -1;
                    }
                    
                    if(*_ext_flag_24) {
                    }
                
                if(ros->denm.situation[0].linked_cause.size() != 0) {
                    // Field:  type(CauseCodeV2) name(linked_cause) extGroup(0)
                        // CauseCodeV2  SEQUENCE
                            //  ccAndScc   CauseCodeChoice     
                            //  ...
                        uint8_t* _ext_flag_155 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                        *_ext_flag_155 = 0;  
                        
                        // Optional fields bytemap
                        
                        // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                        // Choice
                           // #0  reserved0   SubCauseCodeType
                           // #1  trafficCondition1   TrafficConditionSubCauseCode
                           // #2  accident2   AccidentSubCauseCode
                           // #3  roadworks3   RoadworksSubCauseCode
                           // #4  reserved4   SubCauseCodeType
                           // #5  impassability5   ImpassabilitySubCauseCode
                           // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                           // #7  aquaplaning7   SubCauseCodeType
                           // #8  reserved8   SubCauseCodeType
                           // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                           // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                           // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                           // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                           // #13  reserved13   SubCauseCodeType
                           // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                           // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                           // #16  reserved16   SubCauseCodeType
                           // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                           // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                           // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                           // #20  violence20   SubCauseCodeType
                           // #21  reserved21   SubCauseCodeType
                           // #22  reserved22   SubCauseCodeType
                           // #23  reserved23   SubCauseCodeType
                           // #24  reserved24   SubCauseCodeType
                           // #25  reserved25   SubCauseCodeType
                           // #26  slowVehicle26   SlowVehicleSubCauseCode
                           // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                           // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                           // #29  reserved29   SubCauseCodeType
                           // #30  reserved30   SubCauseCodeType
                           // #31  reserved31   SubCauseCodeType
                           // #32  reserved32   SubCauseCodeType
                           // #33  reserved33   SubCauseCodeType
                           // #34  reserved34   SubCauseCodeType
                           // #35  reserved35   SubCauseCodeType
                           // #36  reserved36   SubCauseCodeType
                           // #37  reserved37   SubCauseCodeType
                           // #38  reserved38   SubCauseCodeType
                           // #39  reserved39   SubCauseCodeType
                           // #40  reserved40   SubCauseCodeType
                           // #41  reserved41   SubCauseCodeType
                           // #42  reserved42   SubCauseCodeType
                           // #43  reserved43   SubCauseCodeType
                           // #44  reserved44   SubCauseCodeType
                           // #45  reserved45   SubCauseCodeType
                           // #46  reserved46   SubCauseCodeType
                           // #47  reserved47   SubCauseCodeType
                           // #48  reserved48   SubCauseCodeType
                           // #49  reserved49   SubCauseCodeType
                           // #50  reserved50   SubCauseCodeType
                           // #51  reserved51   SubCauseCodeType
                           // #52  reserved52   SubCauseCodeType
                           // #53  reserved53   SubCauseCodeType
                           // #54  reserved54   SubCauseCodeType
                           // #55  reserved55   SubCauseCodeType
                           // #56  reserved56   SubCauseCodeType
                           // #57  reserved57   SubCauseCodeType
                           // #58  reserved58   SubCauseCodeType
                           // #59  reserved59   SubCauseCodeType
                           // #60  reserved60   SubCauseCodeType
                           // #61  reserved61   SubCauseCodeType
                           // #62  reserved62   SubCauseCodeType
                           // #63  reserved63   SubCauseCodeType
                           // #64  reserved64   SubCauseCodeType
                           // #65  reserved65   SubCauseCodeType
                           // #66  reserved66   SubCauseCodeType
                           // #67  reserved67   SubCauseCodeType
                           // #68  reserved68   SubCauseCodeType
                           // #69  reserved69   SubCauseCodeType
                           // #70  reserved70   SubCauseCodeType
                           // #71  reserved71   SubCauseCodeType
                           // #72  reserved72   SubCauseCodeType
                           // #73  reserved73   SubCauseCodeType
                           // #74  reserved74   SubCauseCodeType
                           // #75  reserved75   SubCauseCodeType
                           // #76  reserved76   SubCauseCodeType
                           // #77  reserved77   SubCauseCodeType
                           // #78  reserved78   SubCauseCodeType
                           // #79  reserved79   SubCauseCodeType
                           // #80  reserved80   SubCauseCodeType
                           // #81  reserved81   SubCauseCodeType
                           // #82  reserved82   SubCauseCodeType
                           // #83  reserved83   SubCauseCodeType
                           // #84  reserved84   SubCauseCodeType
                           // #85  reserved85   SubCauseCodeType
                           // #86  reserved86   SubCauseCodeType
                           // #87  reserved87   SubCauseCodeType
                           // #88  reserved88   SubCauseCodeType
                           // #89  reserved89   SubCauseCodeType
                           // #90  reserved90   SubCauseCodeType
                           // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                           // #92  postCrash92   PostCrashSubCauseCode
                           // #93  humanProblem93   HumanProblemSubCauseCode
                           // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                           // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                           // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                           // #97  collisionRisk97   CollisionRiskSubCauseCode
                           // #98  signalViolation98   SignalViolationSubCauseCode
                           // #99  dangerousSituation99   DangerousSituationSubCauseCode
                           // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                           // #101  reserved101   SubCauseCodeType
                           // #102  reserved102   SubCauseCodeType
                           // #103  reserved103   SubCauseCodeType
                           // #104  reserved104   SubCauseCodeType
                           // #105  reserved105   SubCauseCodeType
                           // #106  reserved106   SubCauseCodeType
                           // #107  reserved107   SubCauseCodeType
                           // #108  reserved108   SubCauseCodeType
                           // #109  reserved109   SubCauseCodeType
                           // #110  reserved110   SubCauseCodeType
                           // #111  reserved111   SubCauseCodeType
                           // #112  reserved112   SubCauseCodeType
                           // #113  reserved113   SubCauseCodeType
                           // #114  reserved114   SubCauseCodeType
                           // #115  reserved115   SubCauseCodeType
                           // #116  reserved116   SubCauseCodeType
                           // #117  reserved117   SubCauseCodeType
                           // #118  reserved118   SubCauseCodeType
                           // #119  reserved119   SubCauseCodeType
                           // #120  reserved120   SubCauseCodeType
                           // #121  reserved121   SubCauseCodeType
                           // #122  reserved122   SubCauseCodeType
                           // #123  reserved123   SubCauseCodeType
                           // #124  reserved124   SubCauseCodeType
                           // #125  reserved125   SubCauseCodeType
                           // #126  reserved126   SubCauseCodeType
                           // #127  reserved127   SubCauseCodeType
                           // #128  reserved128   SubCauseCodeType
                        uint8_t* _choice_2 = (uint8_t*) buffer;
                        buffer++;
                        
                        if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                            *_choice_2 = 0;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000288\033[0m| Choice selection: 0";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000289\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value);
                            }
                            
                            uint8_t* _tmp_171 = (uint8_t*) buffer++;
                            *_tmp_171 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 1;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000290\033[0m| Choice selection: 1";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000291\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value);
                            }
                            
                            uint8_t* _tmp_172 = (uint8_t*) buffer++;
                            *_tmp_172 = ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 2;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000292\033[0m| Choice selection: 2";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000293\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value);
                            }
                            
                            uint8_t* _tmp_173 = (uint8_t*) buffer++;
                            *_tmp_173 = ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 3;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000294\033[0m| Choice selection: 3";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000295\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value);
                            }
                            
                            uint8_t* _tmp_174 = (uint8_t*) buffer++;
                            *_tmp_174 = ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 4;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000296\033[0m| Choice selection: 4";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000297\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value);
                            }
                            
                            uint8_t* _tmp_175 = (uint8_t*) buffer++;
                            *_tmp_175 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 5;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000298\033[0m| Choice selection: 5";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000299\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value);
                            }
                            
                            uint8_t* _tmp_176 = (uint8_t*) buffer++;
                            *_tmp_176 = ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 6;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000300\033[0m| Choice selection: 6";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000301\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                            }
                            
                            uint8_t* _tmp_177 = (uint8_t*) buffer++;
                            *_tmp_177 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 7;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000302\033[0m| Choice selection: 7";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000303\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value);
                            }
                            
                            uint8_t* _tmp_178 = (uint8_t*) buffer++;
                            *_tmp_178 = ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 8;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000304\033[0m| Choice selection: 8";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000305\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value);
                            }
                            
                            uint8_t* _tmp_179 = (uint8_t*) buffer++;
                            *_tmp_179 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 9;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000306\033[0m| Choice selection: 9";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000307\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                            }
                            
                            uint8_t* _tmp_180 = (uint8_t*) buffer++;
                            *_tmp_180 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 10;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000308\033[0m| Choice selection: 10";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000309\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                            }
                            
                            uint8_t* _tmp_181 = (uint8_t*) buffer++;
                            *_tmp_181 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 11;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000310\033[0m| Choice selection: 11";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000311\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                            }
                            
                            uint8_t* _tmp_182 = (uint8_t*) buffer++;
                            *_tmp_182 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 12;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000312\033[0m| Choice selection: 12";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000313\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                            }
                            
                            uint8_t* _tmp_183 = (uint8_t*) buffer++;
                            *_tmp_183 = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 13;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000314\033[0m| Choice selection: 13";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000315\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value);
                            }
                            
                            uint8_t* _tmp_184 = (uint8_t*) buffer++;
                            *_tmp_184 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 14;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000316\033[0m| Choice selection: 14";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000317\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                            }
                            
                            uint8_t* _tmp_185 = (uint8_t*) buffer++;
                            *_tmp_185 = ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 15;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000318\033[0m| Choice selection: 15";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000319\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                            }
                            
                            uint8_t* _tmp_186 = (uint8_t*) buffer++;
                            *_tmp_186 = ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 16;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000320\033[0m| Choice selection: 16";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000321\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value);
                            }
                            
                            uint8_t* _tmp_187 = (uint8_t*) buffer++;
                            *_tmp_187 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 17;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000322\033[0m| Choice selection: 17";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000323\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                            }
                            
                            uint8_t* _tmp_188 = (uint8_t*) buffer++;
                            *_tmp_188 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 18;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000324\033[0m| Choice selection: 18";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000325\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                            }
                            
                            uint8_t* _tmp_189 = (uint8_t*) buffer++;
                            *_tmp_189 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 19;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000326\033[0m| Choice selection: 19";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000327\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                            }
                            
                            uint8_t* _tmp_190 = (uint8_t*) buffer++;
                            *_tmp_190 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 20;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000328\033[0m| Choice selection: 20";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000329\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value);
                            }
                            
                            uint8_t* _tmp_191 = (uint8_t*) buffer++;
                            *_tmp_191 = ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 21;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000330\033[0m| Choice selection: 21";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000331\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value);
                            }
                            
                            uint8_t* _tmp_192 = (uint8_t*) buffer++;
                            *_tmp_192 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 22;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000332\033[0m| Choice selection: 22";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000333\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value);
                            }
                            
                            uint8_t* _tmp_193 = (uint8_t*) buffer++;
                            *_tmp_193 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 23;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000334\033[0m| Choice selection: 23";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000335\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value);
                            }
                            
                            uint8_t* _tmp_194 = (uint8_t*) buffer++;
                            *_tmp_194 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 24;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000336\033[0m| Choice selection: 24";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000337\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value);
                            }
                            
                            uint8_t* _tmp_195 = (uint8_t*) buffer++;
                            *_tmp_195 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 25;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000338\033[0m| Choice selection: 25";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000339\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value);
                            }
                            
                            uint8_t* _tmp_196 = (uint8_t*) buffer++;
                            *_tmp_196 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 26;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000340\033[0m| Choice selection: 26";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000341\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value);
                            }
                            
                            uint8_t* _tmp_197 = (uint8_t*) buffer++;
                            *_tmp_197 = ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 27;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000342\033[0m| Choice selection: 27";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000343\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                            }
                            
                            uint8_t* _tmp_198 = (uint8_t*) buffer++;
                            *_tmp_198 = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 28;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000344\033[0m| Choice selection: 28";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000345\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                            }
                            
                            uint8_t* _tmp_199 = (uint8_t*) buffer++;
                            *_tmp_199 = ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 29;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000346\033[0m| Choice selection: 29";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000347\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value);
                            }
                            
                            uint8_t* _tmp_200 = (uint8_t*) buffer++;
                            *_tmp_200 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 30;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000348\033[0m| Choice selection: 30";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000349\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value);
                            }
                            
                            uint8_t* _tmp_201 = (uint8_t*) buffer++;
                            *_tmp_201 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 31;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000350\033[0m| Choice selection: 31";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000351\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value);
                            }
                            
                            uint8_t* _tmp_202 = (uint8_t*) buffer++;
                            *_tmp_202 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 32;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000352\033[0m| Choice selection: 32";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000353\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value);
                            }
                            
                            uint8_t* _tmp_203 = (uint8_t*) buffer++;
                            *_tmp_203 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 33;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000354\033[0m| Choice selection: 33";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000355\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value);
                            }
                            
                            uint8_t* _tmp_204 = (uint8_t*) buffer++;
                            *_tmp_204 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 34;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000356\033[0m| Choice selection: 34";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000357\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value);
                            }
                            
                            uint8_t* _tmp_205 = (uint8_t*) buffer++;
                            *_tmp_205 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 35;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000358\033[0m| Choice selection: 35";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000359\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value);
                            }
                            
                            uint8_t* _tmp_206 = (uint8_t*) buffer++;
                            *_tmp_206 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 36;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000360\033[0m| Choice selection: 36";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000361\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value);
                            }
                            
                            uint8_t* _tmp_207 = (uint8_t*) buffer++;
                            *_tmp_207 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 37;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000362\033[0m| Choice selection: 37";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000363\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value);
                            }
                            
                            uint8_t* _tmp_208 = (uint8_t*) buffer++;
                            *_tmp_208 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 38;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000364\033[0m| Choice selection: 38";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000365\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value);
                            }
                            
                            uint8_t* _tmp_209 = (uint8_t*) buffer++;
                            *_tmp_209 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 39;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000366\033[0m| Choice selection: 39";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000367\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value);
                            }
                            
                            uint8_t* _tmp_210 = (uint8_t*) buffer++;
                            *_tmp_210 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 40;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000368\033[0m| Choice selection: 40";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000369\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value);
                            }
                            
                            uint8_t* _tmp_211 = (uint8_t*) buffer++;
                            *_tmp_211 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 41;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000370\033[0m| Choice selection: 41";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000371\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value);
                            }
                            
                            uint8_t* _tmp_212 = (uint8_t*) buffer++;
                            *_tmp_212 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 42;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000372\033[0m| Choice selection: 42";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000373\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value);
                            }
                            
                            uint8_t* _tmp_213 = (uint8_t*) buffer++;
                            *_tmp_213 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 43;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000374\033[0m| Choice selection: 43";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000375\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value);
                            }
                            
                            uint8_t* _tmp_214 = (uint8_t*) buffer++;
                            *_tmp_214 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 44;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000376\033[0m| Choice selection: 44";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000377\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value);
                            }
                            
                            uint8_t* _tmp_215 = (uint8_t*) buffer++;
                            *_tmp_215 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 45;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000378\033[0m| Choice selection: 45";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000379\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value);
                            }
                            
                            uint8_t* _tmp_216 = (uint8_t*) buffer++;
                            *_tmp_216 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 46;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000380\033[0m| Choice selection: 46";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000381\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value);
                            }
                            
                            uint8_t* _tmp_217 = (uint8_t*) buffer++;
                            *_tmp_217 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 47;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000382\033[0m| Choice selection: 47";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000383\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value);
                            }
                            
                            uint8_t* _tmp_218 = (uint8_t*) buffer++;
                            *_tmp_218 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 48;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000384\033[0m| Choice selection: 48";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000385\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value);
                            }
                            
                            uint8_t* _tmp_219 = (uint8_t*) buffer++;
                            *_tmp_219 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 49;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000386\033[0m| Choice selection: 49";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000387\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value);
                            }
                            
                            uint8_t* _tmp_220 = (uint8_t*) buffer++;
                            *_tmp_220 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 50;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000388\033[0m| Choice selection: 50";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000389\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value);
                            }
                            
                            uint8_t* _tmp_221 = (uint8_t*) buffer++;
                            *_tmp_221 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 51;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000390\033[0m| Choice selection: 51";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000391\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value);
                            }
                            
                            uint8_t* _tmp_222 = (uint8_t*) buffer++;
                            *_tmp_222 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 52;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000392\033[0m| Choice selection: 52";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000393\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value);
                            }
                            
                            uint8_t* _tmp_223 = (uint8_t*) buffer++;
                            *_tmp_223 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 53;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000394\033[0m| Choice selection: 53";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000395\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value);
                            }
                            
                            uint8_t* _tmp_224 = (uint8_t*) buffer++;
                            *_tmp_224 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 54;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000396\033[0m| Choice selection: 54";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000397\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value);
                            }
                            
                            uint8_t* _tmp_225 = (uint8_t*) buffer++;
                            *_tmp_225 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 55;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000398\033[0m| Choice selection: 55";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000399\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value);
                            }
                            
                            uint8_t* _tmp_226 = (uint8_t*) buffer++;
                            *_tmp_226 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 56;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000400\033[0m| Choice selection: 56";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000401\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value);
                            }
                            
                            uint8_t* _tmp_227 = (uint8_t*) buffer++;
                            *_tmp_227 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 57;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000402\033[0m| Choice selection: 57";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000403\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value);
                            }
                            
                            uint8_t* _tmp_228 = (uint8_t*) buffer++;
                            *_tmp_228 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 58;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000404\033[0m| Choice selection: 58";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000405\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value);
                            }
                            
                            uint8_t* _tmp_229 = (uint8_t*) buffer++;
                            *_tmp_229 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 59;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000406\033[0m| Choice selection: 59";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000407\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value);
                            }
                            
                            uint8_t* _tmp_230 = (uint8_t*) buffer++;
                            *_tmp_230 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 60;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000408\033[0m| Choice selection: 60";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000409\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value);
                            }
                            
                            uint8_t* _tmp_231 = (uint8_t*) buffer++;
                            *_tmp_231 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 61;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000410\033[0m| Choice selection: 61";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000411\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value);
                            }
                            
                            uint8_t* _tmp_232 = (uint8_t*) buffer++;
                            *_tmp_232 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 62;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000412\033[0m| Choice selection: 62";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000413\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value);
                            }
                            
                            uint8_t* _tmp_233 = (uint8_t*) buffer++;
                            *_tmp_233 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 63;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000414\033[0m| Choice selection: 63";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000415\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value);
                            }
                            
                            uint8_t* _tmp_234 = (uint8_t*) buffer++;
                            *_tmp_234 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 64;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000416\033[0m| Choice selection: 64";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000417\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value);
                            }
                            
                            uint8_t* _tmp_235 = (uint8_t*) buffer++;
                            *_tmp_235 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 65;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000418\033[0m| Choice selection: 65";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000419\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value);
                            }
                            
                            uint8_t* _tmp_236 = (uint8_t*) buffer++;
                            *_tmp_236 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 66;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000420\033[0m| Choice selection: 66";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000421\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value);
                            }
                            
                            uint8_t* _tmp_237 = (uint8_t*) buffer++;
                            *_tmp_237 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 67;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000422\033[0m| Choice selection: 67";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000423\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value);
                            }
                            
                            uint8_t* _tmp_238 = (uint8_t*) buffer++;
                            *_tmp_238 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 68;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000424\033[0m| Choice selection: 68";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000425\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value);
                            }
                            
                            uint8_t* _tmp_239 = (uint8_t*) buffer++;
                            *_tmp_239 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 69;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000426\033[0m| Choice selection: 69";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000427\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value);
                            }
                            
                            uint8_t* _tmp_240 = (uint8_t*) buffer++;
                            *_tmp_240 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 70;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000428\033[0m| Choice selection: 70";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000429\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value);
                            }
                            
                            uint8_t* _tmp_241 = (uint8_t*) buffer++;
                            *_tmp_241 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 71;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000430\033[0m| Choice selection: 71";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000431\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value);
                            }
                            
                            uint8_t* _tmp_242 = (uint8_t*) buffer++;
                            *_tmp_242 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 72;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000432\033[0m| Choice selection: 72";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000433\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value);
                            }
                            
                            uint8_t* _tmp_243 = (uint8_t*) buffer++;
                            *_tmp_243 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 73;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000434\033[0m| Choice selection: 73";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000435\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value);
                            }
                            
                            uint8_t* _tmp_244 = (uint8_t*) buffer++;
                            *_tmp_244 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 74;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000436\033[0m| Choice selection: 74";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000437\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value);
                            }
                            
                            uint8_t* _tmp_245 = (uint8_t*) buffer++;
                            *_tmp_245 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 75;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000438\033[0m| Choice selection: 75";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000439\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value);
                            }
                            
                            uint8_t* _tmp_246 = (uint8_t*) buffer++;
                            *_tmp_246 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 76;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000440\033[0m| Choice selection: 76";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000441\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value);
                            }
                            
                            uint8_t* _tmp_247 = (uint8_t*) buffer++;
                            *_tmp_247 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 77;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000442\033[0m| Choice selection: 77";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000443\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value);
                            }
                            
                            uint8_t* _tmp_248 = (uint8_t*) buffer++;
                            *_tmp_248 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 78;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000444\033[0m| Choice selection: 78";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000445\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value);
                            }
                            
                            uint8_t* _tmp_249 = (uint8_t*) buffer++;
                            *_tmp_249 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 79;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000446\033[0m| Choice selection: 79";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000447\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value);
                            }
                            
                            uint8_t* _tmp_250 = (uint8_t*) buffer++;
                            *_tmp_250 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 80;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000448\033[0m| Choice selection: 80";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000449\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value);
                            }
                            
                            uint8_t* _tmp_251 = (uint8_t*) buffer++;
                            *_tmp_251 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 81;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000450\033[0m| Choice selection: 81";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000451\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value);
                            }
                            
                            uint8_t* _tmp_252 = (uint8_t*) buffer++;
                            *_tmp_252 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 82;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000452\033[0m| Choice selection: 82";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000453\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value);
                            }
                            
                            uint8_t* _tmp_253 = (uint8_t*) buffer++;
                            *_tmp_253 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 83;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000454\033[0m| Choice selection: 83";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000455\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value);
                            }
                            
                            uint8_t* _tmp_254 = (uint8_t*) buffer++;
                            *_tmp_254 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 84;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000456\033[0m| Choice selection: 84";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000457\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value);
                            }
                            
                            uint8_t* _tmp_255 = (uint8_t*) buffer++;
                            *_tmp_255 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 85;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000458\033[0m| Choice selection: 85";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000459\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value);
                            }
                            
                            uint8_t* _tmp_256 = (uint8_t*) buffer++;
                            *_tmp_256 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 86;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000460\033[0m| Choice selection: 86";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000461\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value);
                            }
                            
                            uint8_t* _tmp_257 = (uint8_t*) buffer++;
                            *_tmp_257 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 87;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000462\033[0m| Choice selection: 87";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000463\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value);
                            }
                            
                            uint8_t* _tmp_258 = (uint8_t*) buffer++;
                            *_tmp_258 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 88;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000464\033[0m| Choice selection: 88";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000465\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value);
                            }
                            
                            uint8_t* _tmp_259 = (uint8_t*) buffer++;
                            *_tmp_259 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 89;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000466\033[0m| Choice selection: 89";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000467\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value);
                            }
                            
                            uint8_t* _tmp_260 = (uint8_t*) buffer++;
                            *_tmp_260 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 90;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000468\033[0m| Choice selection: 90";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000469\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value);
                            }
                            
                            uint8_t* _tmp_261 = (uint8_t*) buffer++;
                            *_tmp_261 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 91;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000470\033[0m| Choice selection: 91";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000471\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                            }
                            
                            uint8_t* _tmp_262 = (uint8_t*) buffer++;
                            *_tmp_262 = ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 92;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000472\033[0m| Choice selection: 92";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000473\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value);
                            }
                            
                            uint8_t* _tmp_263 = (uint8_t*) buffer++;
                            *_tmp_263 = ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 93;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000474\033[0m| Choice selection: 93";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000475\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value);
                            }
                            
                            uint8_t* _tmp_264 = (uint8_t*) buffer++;
                            *_tmp_264 = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 94;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000476\033[0m| Choice selection: 94";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000477\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                            }
                            
                            uint8_t* _tmp_265 = (uint8_t*) buffer++;
                            *_tmp_265 = ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 95;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000478\033[0m| Choice selection: 95";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000479\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                            }
                            
                            uint8_t* _tmp_266 = (uint8_t*) buffer++;
                            *_tmp_266 = ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 96;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000480\033[0m| Choice selection: 96";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000481\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                            }
                            
                            uint8_t* _tmp_267 = (uint8_t*) buffer++;
                            *_tmp_267 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 97;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000482\033[0m| Choice selection: 97";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000483\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value);
                            }
                            
                            uint8_t* _tmp_268 = (uint8_t*) buffer++;
                            *_tmp_268 = ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 98;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000484\033[0m| Choice selection: 98";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000485\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value);
                            }
                            
                            uint8_t* _tmp_269 = (uint8_t*) buffer++;
                            *_tmp_269 = ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 99;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000486\033[0m| Choice selection: 99";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000487\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value);
                            }
                            
                            uint8_t* _tmp_270 = (uint8_t*) buffer++;
                            *_tmp_270 = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 100;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000488\033[0m| Choice selection: 100";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000489\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                            }
                            
                            uint8_t* _tmp_271 = (uint8_t*) buffer++;
                            *_tmp_271 = ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 101;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000490\033[0m| Choice selection: 101";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000491\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value);
                            }
                            
                            uint8_t* _tmp_272 = (uint8_t*) buffer++;
                            *_tmp_272 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 102;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000492\033[0m| Choice selection: 102";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000493\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value);
                            }
                            
                            uint8_t* _tmp_273 = (uint8_t*) buffer++;
                            *_tmp_273 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 103;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000494\033[0m| Choice selection: 103";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000495\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value);
                            }
                            
                            uint8_t* _tmp_274 = (uint8_t*) buffer++;
                            *_tmp_274 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 104;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000496\033[0m| Choice selection: 104";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000497\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value);
                            }
                            
                            uint8_t* _tmp_275 = (uint8_t*) buffer++;
                            *_tmp_275 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 105;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000498\033[0m| Choice selection: 105";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000499\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value);
                            }
                            
                            uint8_t* _tmp_276 = (uint8_t*) buffer++;
                            *_tmp_276 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 106;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000500\033[0m| Choice selection: 106";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000501\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value);
                            }
                            
                            uint8_t* _tmp_277 = (uint8_t*) buffer++;
                            *_tmp_277 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 107;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000502\033[0m| Choice selection: 107";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000503\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value);
                            }
                            
                            uint8_t* _tmp_278 = (uint8_t*) buffer++;
                            *_tmp_278 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 108;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000504\033[0m| Choice selection: 108";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000505\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value);
                            }
                            
                            uint8_t* _tmp_279 = (uint8_t*) buffer++;
                            *_tmp_279 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 109;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000506\033[0m| Choice selection: 109";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000507\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value);
                            }
                            
                            uint8_t* _tmp_280 = (uint8_t*) buffer++;
                            *_tmp_280 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 110;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000508\033[0m| Choice selection: 110";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000509\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value);
                            }
                            
                            uint8_t* _tmp_281 = (uint8_t*) buffer++;
                            *_tmp_281 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 111;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000510\033[0m| Choice selection: 111";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000511\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value);
                            }
                            
                            uint8_t* _tmp_282 = (uint8_t*) buffer++;
                            *_tmp_282 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 112;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000512\033[0m| Choice selection: 112";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000513\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value);
                            }
                            
                            uint8_t* _tmp_283 = (uint8_t*) buffer++;
                            *_tmp_283 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 113;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000514\033[0m| Choice selection: 113";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000515\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value);
                            }
                            
                            uint8_t* _tmp_284 = (uint8_t*) buffer++;
                            *_tmp_284 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 114;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000516\033[0m| Choice selection: 114";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000517\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value);
                            }
                            
                            uint8_t* _tmp_285 = (uint8_t*) buffer++;
                            *_tmp_285 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 115;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000518\033[0m| Choice selection: 115";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000519\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value);
                            }
                            
                            uint8_t* _tmp_286 = (uint8_t*) buffer++;
                            *_tmp_286 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 116;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000520\033[0m| Choice selection: 116";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000521\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value);
                            }
                            
                            uint8_t* _tmp_287 = (uint8_t*) buffer++;
                            *_tmp_287 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 117;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000522\033[0m| Choice selection: 117";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000523\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value);
                            }
                            
                            uint8_t* _tmp_288 = (uint8_t*) buffer++;
                            *_tmp_288 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 118;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000524\033[0m| Choice selection: 118";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000525\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value);
                            }
                            
                            uint8_t* _tmp_289 = (uint8_t*) buffer++;
                            *_tmp_289 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 119;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000526\033[0m| Choice selection: 119";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000527\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value);
                            }
                            
                            uint8_t* _tmp_290 = (uint8_t*) buffer++;
                            *_tmp_290 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 120;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000528\033[0m| Choice selection: 120";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000529\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value);
                            }
                            
                            uint8_t* _tmp_291 = (uint8_t*) buffer++;
                            *_tmp_291 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 121;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000530\033[0m| Choice selection: 121";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000531\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value);
                            }
                            
                            uint8_t* _tmp_292 = (uint8_t*) buffer++;
                            *_tmp_292 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 122;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000532\033[0m| Choice selection: 122";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000533\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value);
                            }
                            
                            uint8_t* _tmp_293 = (uint8_t*) buffer++;
                            *_tmp_293 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 123;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000534\033[0m| Choice selection: 123";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000535\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value);
                            }
                            
                            uint8_t* _tmp_294 = (uint8_t*) buffer++;
                            *_tmp_294 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 124;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000536\033[0m| Choice selection: 124";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000537\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value);
                            }
                            
                            uint8_t* _tmp_295 = (uint8_t*) buffer++;
                            *_tmp_295 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 125;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000538\033[0m| Choice selection: 125";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000539\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value);
                            }
                            
                            uint8_t* _tmp_296 = (uint8_t*) buffer++;
                            *_tmp_296 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 126;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000540\033[0m| Choice selection: 126";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000541\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value);
                            }
                            
                            uint8_t* _tmp_297 = (uint8_t*) buffer++;
                            *_tmp_297 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 127;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000542\033[0m| Choice selection: 127";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000543\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value);
                            }
                            
                            uint8_t* _tmp_298 = (uint8_t*) buffer++;
                            *_tmp_298 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                        {
                            *_choice_2 = 128;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m000544\033[0m| Choice selection: 128";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000545\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value);
                            }
                            
                            uint8_t* _tmp_299 = (uint8_t*) buffer++;
                            *_tmp_299 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_2) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].linked_cause[0].cc_and_scc'; message dropped.";
                            return -1;
                        }
                        
                        if(*_ext_flag_155) {
                        }
                }
                
                if(ros->denm.situation[0].event_zone.size() != 0) {
                    // Field:  type(EventZone) name(event_zone) extGroup(0)
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(1) max(23) span(23) ext(false)
                    __aux64__ = ros->denm.situation[0].event_zone[0].elements.size();
                    if(__aux64__ > 23) __aux64__ = 23;
                    uint16_t* _tmp_301 = (uint16_t*)buffer;
                    buffer += 2;
                    *_tmp_301 = __aux64__ - 1;
                    
                    int __ifa = __aux64__;
                    for(int a = 0; a < __ifa; a++) { 
                        
                            // EventPoint  SEQUENCE
                                //  eventPosition      DeltaReferencePosition     
                                //  eventDeltaTime     PathDeltaTime            OPTIONAL  
                                //  informationQuality InformationQuality         
                            // Optional fields bytemap
                            char* _tmp_302 = (char*) buffer++;
                            *_tmp_302 = (ros->denm.situation[0].event_zone[0].elements[a].event_delta_time.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m000547\033[0m| Optional field event_delta_time = " << *_tmp_302;
                            
                            // Field:  type(DeltaReferencePosition) name(event_position) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000548\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value: " << ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value;
                                }
                                
                                double _tmp_304 = ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value;
                                _tmp_304 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_304);
                                _tmp_304 -= -131071;
                                uint32_t* _tmp_303 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_303 = static_cast<uint32_t>(_tmp_304);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000549\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value: " << ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value;
                                }
                                
                                double _tmp_306 = ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value;
                                _tmp_306 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_306);
                                _tmp_306 -= -131071;
                                uint32_t* _tmp_305 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_305 = static_cast<uint32_t>(_tmp_306);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000550\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value: " << ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value;
                                }
                                
                                float _tmp_308 = ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value;
                                _tmp_308 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_308);
                                _tmp_308 -= -12700;
                                uint16_t* _tmp_307 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_307 = static_cast<uint16_t>(_tmp_308);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                            
                            if(ros->denm.situation[0].event_zone[0].elements[a].event_delta_time.size() != 0) {
                                // Field:  type(PathDeltaTime) name(event_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000551\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value) << 
                                                 " denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value: " << ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                }
                                
                                uint8_t* _ext_flag_289 = (uint8_t*) buffer++; // Extension flag for ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].
                                float _tmp_309 = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                _tmp_309 *= 100.0;
                                __aux64__ = static_cast<int64_t>(_tmp_309);
                                *_ext_flag_289 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                
                                if(*_ext_flag_289) {
                                    uint8_t* _tmp_310 = (uint8_t*) buffer++; 
                                
                                    if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                        *_tmp_310 = 0;
                                
                                        float _tmp_312 = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                        _tmp_312 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_312);
                                        _tmp_312 -= INT32_MIN;
                                        uint32_t* _tmp_311 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_311 = static_cast<uint32_t>(_tmp_312);
                                    }
                                    else
                                    {
                                        *_tmp_310 = 1;
                                
                                        float _tmp_314 = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                        _tmp_314 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_314);
                                        _tmp_314 -= INT64_MIN;
                                        uint32_t* _tmp_313 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_313 = static_cast<uint32_t>(_tmp_314);
                                    }
                                }
                                else
                                {
                                    float _tmp_316 = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                    _tmp_316 *= 100.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_316);
                                    _tmp_316 -= 1;
                                    uint16_t* _tmp_315 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_315 = static_cast<uint16_t>(_tmp_316);
                                }
                            }
                            
                            // Field:  type(InformationQuality) name(information_quality) extGroup(0)
                            // Integer
                            
                            // UINT8  min(0) max(7) span(8) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000552\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].information_quality.value) << 
                                             " denm.situation[0].event_zone[0].elements[a].information_quality.value: " << static_cast<int>(ros->denm.situation[0].event_zone[0].elements[a].information_quality.value);
                            }
                            
                            uint8_t* _tmp_317 = (uint8_t*) buffer++;
                            *_tmp_317 = ros->denm.situation[0].event_zone[0].elements[a].information_quality.value; 
                            __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].information_quality.value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].information_quality.value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 7) {
                                logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].information_quality.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                                return -1;
                            }
                            
                    }
                }
                
                if(*_ext_flag_22) {
                    // Write number of extensions 
                    uint8_t* _tmp_318 = (uint8_t*) buffer++;
                    *_tmp_318 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_319 = (uint8_t*) buffer++;
                    *_tmp_319 = (ros->denm.situation[0].linked_denms.size() != 0 || ros->denm.situation[0].event_end.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_320_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_321_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_322 = (uint8_t*)buffer++;
                    *_tmp_322 = (ros->denm.situation[0].linked_denms.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_323 = (uint8_t*)buffer++;
                    *_tmp_323 = (ros->denm.situation[0].event_end.size() != 0 ? 1: 0);
                    
                    if(ros->denm.situation[0].linked_denms.size() != 0) {
                        // Field:  type(ActionIdList) name(linked_denms) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_291 = (uint8_t*) buffer++; // Write extension flag for ros->denm.situation[0].linked_denms[0].
                        *_ext_flag_291 = 0; 
                        
                        __aux64__ = ros->denm.situation[0].linked_denms[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_324 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_324 = __aux64__ - 1;
                        
                        int __ifb = __aux64__;
                        for(int b = 0; b < __ifb; b++) { 
                            
                                // ActionId  SEQUENCE
                                    //  originatingStationId StationId          
                                    //  sequenceNumber       SequenceNumber     
                                // Optional fields bytemap
                                
                                // Field:  type(StationId) name(originating_station_id) extGroup(0)
                                // Integer
                                
                                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000554\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value) << 
                                                 " denm.situation[0].linked_denms[0].elements[b].originating_station_id.value: " << ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value;
                                }
                                
                                uint32_t* _tmp_325 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_325 = ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value; 
                                __aux64__ = ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000555\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value) << 
                                                 " denm.situation[0].linked_denms[0].elements[b].sequence_number.value: " << ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value;
                                }
                                
                                uint16_t* _tmp_326 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_326 = ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value; 
                                __aux64__ = ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                    return -1;
                                }
                                
                        }
                    }
                    
                    if(ros->denm.situation[0].event_end.size() != 0) {
                        // Field:  type(Position1d) name(event_end) extGroup(1)
                        // Integer
                        
                        // INT16  min(-8190) max(8191) span(16382) dataType(Int16)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000556\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_end[0].value) << 
                                         " denm.situation[0].event_end[0].value: " << ros->denm.situation[0].event_end[0].value;
                        }
                        
                        uint16_t* _tmp_327 = (uint16_t*) buffer; buffer += 2;
                        __aux64__ = ros->denm.situation[0].event_end[0].value - -8190;
                        *_tmp_327 = __aux64__;
                        __aux64__ = ros->denm.situation[0].event_end[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < -8190) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_end[0].value' (" << __aux64__ << ") less than (-8190); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 8191) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_end[0].value' (" << __aux64__ << ") exceeds max allowable (8191); message dropped.";
                            return -1;
                        }
                    }
                    
                    *_tmp_320_openType = buffer - _tmp_321_start;  // OpenType length
                }
        }
        
        if(ros->denm.location.size() != 0) {
            // Field:  type(LocationContainer) name(location) extGroup(0)
                // LocationContainer  SEQUENCE
                    //  eventSpeed                          Speed                         OPTIONAL  
                    //  eventPositionHeading                Wgs84Angle                    OPTIONAL  
                    //  detectionZonesToEventPosition       Traces                          
                    //  roadType                            RoadType                      OPTIONAL  
                    //  lanePositions                       GeneralizedLanePositions      OPTIONAL  Extension group #1
                    //  occupiedLanes                       OccupiedLanesWithConfidence   OPTIONAL  Extension group #1
                    //  linkedIvims                         IvimReferences                OPTIONAL  Extension group #1
                    //  linkedMapems                        MapReferences                 OPTIONAL  Extension group #1
                    //  detectionZonesToSpecifiedEventPoint TracesExtended                OPTIONAL  Extension group #1
                    //  predictedPaths                      PathPredictedList             OPTIONAL  Extension group #1
                uint8_t* _ext_flag_295 = (uint8_t*) buffer++;  // Write extension flag for LocationContainer
                *_ext_flag_295 = (ros->denm.location[0].lane_positions.size() != 0 || ros->denm.location[0].occupied_lanes.size() != 0 || ros->denm.location[0].linked_ivims.size() != 0 || ros->denm.location[0].linked_mapems.size() != 0 || ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 || ros->denm.location[0].predicted_paths.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_328 = (char*) buffer++;
                *_tmp_328 = (ros->denm.location[0].event_speed.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000557\033[0m| Optional field event_speed = " << *_tmp_328;
                char* _tmp_329 = (char*) buffer++;
                *_tmp_329 = (ros->denm.location[0].event_position_heading.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000558\033[0m| Optional field event_position_heading = " << *_tmp_329;
                char* _tmp_330 = (char*) buffer++;
                *_tmp_330 = (ros->denm.location[0].road_type.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000559\033[0m| Optional field road_type = " << *_tmp_330;
                
                if(ros->denm.location[0].event_speed.size() != 0) {
                    // Field:  type(Speed) name(event_speed) extGroup(0)
                        // Speed  SEQUENCE
                            //  speedValue      SpeedValue          
                            //  speedConfidence SpeedConfidence     
                        // Optional fields bytemap
                        
                        // Field:  type(SpeedValue) name(speed_value) extGroup(0)
                        // Real
                        
                        // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000560\033[0m| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_value.value) << 
                                         " denm.location[0].event_speed[0].speed_value.value: " << ros->denm.location[0].event_speed[0].speed_value.value;
                        }
                        
                        float _tmp_332 = ros->denm.location[0].event_speed[0].speed_value.value;
                        _tmp_332 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_332);
                        uint16_t* _tmp_331 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_331 = static_cast<uint16_t>(_tmp_332);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(SpeedConfidence) name(speed_confidence) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000561\033[0m| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_confidence.value) << 
                                         " denm.location[0].event_speed[0].speed_confidence.value: " << static_cast<int>(ros->denm.location[0].event_speed[0].speed_confidence.value);
                        }
                        
                        float _tmp_334 = ros->denm.location[0].event_speed[0].speed_confidence.value;
                        _tmp_334 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_334);
                        _tmp_334 -= 1;
                        uint8_t* _tmp_333 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_333 = static_cast<uint8_t>(_tmp_334);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                }
                
                if(ros->denm.location[0].event_position_heading.size() != 0) {
                    // Field:  type(Wgs84Angle) name(event_position_heading) extGroup(0)
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        // Optional fields bytemap
                        
                        // Field:  type(Wgs84AngleValue) name(value) extGroup(0)
                        // Real
                        
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000562\033[0m| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].value.value) << 
                                         " denm.location[0].event_position_heading[0].value.value: " << ros->denm.location[0].event_position_heading[0].value.value;
                        }
                        
                        float _tmp_336 = ros->denm.location[0].event_position_heading[0].value.value;
                        _tmp_336 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_336);
                        uint16_t* _tmp_335 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_335 = static_cast<uint16_t>(_tmp_336);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(Wgs84AngleConfidence) name(confidence) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000563\033[0m| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].confidence.value) << 
                                         " denm.location[0].event_position_heading[0].confidence.value: " << static_cast<int>(ros->denm.location[0].event_position_heading[0].confidence.value);
                        }
                        
                        float _tmp_338 = ros->denm.location[0].event_position_heading[0].confidence.value;
                        _tmp_338 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_338);
                        _tmp_338 -= 1;
                        uint8_t* _tmp_337 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_337 = static_cast<uint8_t>(_tmp_338);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                }
                
                // Field:  type(Traces) name(detection_zones_to_event_position) extGroup(0)
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(7) span(7) ext(false)
                __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements.size();
                if(__aux64__ > 7) __aux64__ = 7;
                uint16_t* _tmp_339 = (uint16_t*)buffer;
                buffer += 2;
                *_tmp_339 = __aux64__ - 1;
                
                int __ifc = __aux64__;
                for(int c = 0; c < __ifc; c++) { 
                    
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(40) span(41) ext(false)
                    __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements.size();
                    if(__aux64__ > 40) __aux64__ = 40;
                    uint16_t* _tmp_340 = (uint16_t*)buffer;
                    buffer += 2;
                    *_tmp_340 = __aux64__;
                    
                    int __ifd = __aux64__;
                    for(int d = 0; d < __ifd; d++) { 
                        
                            // PathPoint  SEQUENCE
                                //  pathPosition  DeltaReferencePosition     
                                //  pathDeltaTime PathDeltaTime            OPTIONAL  
                            // Optional fields bytemap
                            char* _tmp_341 = (char*) buffer++;
                            *_tmp_341 = (ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m000566\033[0m| Optional field path_delta_time = " << *_tmp_341;
                            
                            // Field:  type(DeltaReferencePosition) name(path_position) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000567\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value;
                                }
                                
                                double _tmp_343 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value;
                                _tmp_343 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_343);
                                _tmp_343 -= -131071;
                                uint32_t* _tmp_342 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_342 = static_cast<uint32_t>(_tmp_343);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000568\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value;
                                }
                                
                                double _tmp_345 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value;
                                _tmp_345 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_345);
                                _tmp_345 -= -131071;
                                uint32_t* _tmp_344 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_344 = static_cast<uint32_t>(_tmp_345);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000569\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value;
                                }
                                
                                float _tmp_347 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value;
                                _tmp_347 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_347);
                                _tmp_347 -= -12700;
                                uint16_t* _tmp_346 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_346 = static_cast<uint16_t>(_tmp_347);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                            
                            if(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time.size() != 0) {
                                // Field:  type(PathDeltaTime) name(path_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000570\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value: " << ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                }
                                
                                uint8_t* _ext_flag_303 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].
                                float _tmp_348 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                _tmp_348 *= 100.0;
                                __aux64__ = static_cast<int64_t>(_tmp_348);
                                *_ext_flag_303 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                
                                if(*_ext_flag_303) {
                                    uint8_t* _tmp_349 = (uint8_t*) buffer++; 
                                
                                    if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                        *_tmp_349 = 0;
                                
                                        float _tmp_351 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                        _tmp_351 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_351);
                                        _tmp_351 -= INT32_MIN;
                                        uint32_t* _tmp_350 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_350 = static_cast<uint32_t>(_tmp_351);
                                    }
                                    else
                                    {
                                        *_tmp_349 = 1;
                                
                                        float _tmp_353 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                        _tmp_353 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_353);
                                        _tmp_353 -= INT64_MIN;
                                        uint32_t* _tmp_352 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_352 = static_cast<uint32_t>(_tmp_353);
                                    }
                                }
                                else
                                {
                                    float _tmp_355 = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                    _tmp_355 *= 100.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_355);
                                    _tmp_355 -= 1;
                                    uint16_t* _tmp_354 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_354 = static_cast<uint16_t>(_tmp_355);
                                }
                            }
                            
                    }
                    
                }
                
                if(ros->denm.location[0].road_type.size() != 0) {
                    // Field:  type(RoadType) name(road_type) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(3) span(4) dataType(Int32)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000571\033[0m| " << tools::getTypeName(ros->denm.location[0].road_type[0].value) << 
                                     " denm.location[0].road_type[0].value: " << static_cast<int>(ros->denm.location[0].road_type[0].value);
                    }
                    
                    uint8_t* _tmp_356 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_356 = ros->denm.location[0].road_type[0].value; 
                    __aux64__ = ros->denm.location[0].road_type[0].value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.location[0].road_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 3) {
                        logger->warning() << "Error: Value in 'denm.location[0].road_type[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                        return -1;
                    }
                }
                
                if(*_ext_flag_295) {
                    // Write number of extensions 
                    uint8_t* _tmp_357 = (uint8_t*) buffer++;
                    *_tmp_357 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_358 = (uint8_t*) buffer++;
                    *_tmp_358 = (ros->denm.location[0].lane_positions.size() != 0 || ros->denm.location[0].occupied_lanes.size() != 0 || ros->denm.location[0].linked_ivims.size() != 0 || ros->denm.location[0].linked_mapems.size() != 0 || ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 || ros->denm.location[0].predicted_paths.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_359_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_360_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_361 = (uint8_t*)buffer++;
                    *_tmp_361 = (ros->denm.location[0].lane_positions.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_362 = (uint8_t*)buffer++;
                    *_tmp_362 = (ros->denm.location[0].occupied_lanes.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_363 = (uint8_t*)buffer++;
                    *_tmp_363 = (ros->denm.location[0].linked_ivims.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_364 = (uint8_t*)buffer++;
                    *_tmp_364 = (ros->denm.location[0].linked_mapems.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_365 = (uint8_t*)buffer++;
                    *_tmp_365 = (ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_366 = (uint8_t*)buffer++;
                    *_tmp_366 = (ros->denm.location[0].predicted_paths.size() != 0 ? 1: 0);
                    
                    if(ros->denm.location[0].lane_positions.size() != 0) {
                        // Field:  type(GeneralizedLanePositions) name(lane_positions) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                        __aux64__ = ros->denm.location[0].lane_positions[0].elements.size();
                        if(__aux64__ > 4) __aux64__ = 4;
                        uint16_t* _tmp_367 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_367 = __aux64__ - 1;
                        
                        int __ife = __aux64__;
                        for(int e = 0; e < __ife; e++) { 
                            
                                // GeneralizedLanePosition  SEQUENCE
                                    //  lanePositionBased LanePositionOptions     
                                    //  mapBased          MapPosition           OPTIONAL  
                                    //  confidence        MetaInformation         
                                    //  ...
                                uint8_t* _ext_flag_305 = (uint8_t*) buffer++;  // Write extension flag for GeneralizedLanePosition
                                *_ext_flag_305 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_368 = (char*) buffer++;
                                *_tmp_368 = (ros->denm.location[0].lane_positions[0].elements[e].map_based.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000573\033[0m| Optional field map_based = " << *_tmp_368;
                                
                                // Field:  type(LanePositionOptions) name(lane_position_based) extGroup(0)
                                // Choice
                                   // #0  simplelanePosition   LanePosition
                                   // #1  simpleLaneType   LaneType
                                   // #2  detailedlanePosition   LanePositionAndType
                                   // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails
                                   // #4  trafficIslandPosition   TrafficIslandPosition
                                uint8_t* _ext_flag_306 = (uint8_t*) buffer; 
                                buffer++;
                                *_ext_flag_306 = 0; 
                                
                                uint8_t* _choice_3 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position.size() != 0) {  // CHOICE 0  fieldType(LanePositionOptions) 
                                    *_choice_3 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000574\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000575\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value) << 
                                                     " denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value);
                                    }
                                    
                                    uint8_t* _tmp_369 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value - -1;
                                    *_tmp_369 = __aux64__;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type.size() != 0)  // CHOICE 1  fieldType(LanePositionOptions) 
                                {
                                    *_choice_3 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000576\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000577\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value) << 
                                                     " denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value);
                                    }
                                    
                                    uint8_t* _tmp_370 = (uint8_t*) buffer++;
                                    *_tmp_370 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value; 
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position.size() != 0)  // CHOICE 2  fieldType(LanePositionOptions) 
                                {
                                    *_choice_3 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000578\033[0m| Choice selection: 2";
                                
                                        // LanePositionAndType  SEQUENCE
                                            //  transversalPosition LanePosition     
                                            //  laneType            LaneType         
                                            //  direction           Direction        
                                            //  ...
                                        uint8_t* _ext_flag_309 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                        *_ext_flag_309 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000579\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_371 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value - -1;
                                        *_tmp_371 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000580\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_372 = (uint8_t*) buffer++;
                                        *_tmp_372 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000581\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_373 = (uint8_t*) buffer++;
                                        *_tmp_373 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_309) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details.size() != 0)  // CHOICE 3  fieldType(LanePositionOptions) 
                                {
                                    *_choice_3 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000582\033[0m| Choice selection: 3";
                                
                                        // LanePositionWithLateralDetails  SEQUENCE
                                            //  transversalPosition   LanePosition         
                                            //  laneType              LaneType             
                                            //  direction             Direction            
                                            //  distanceToLeftBorder  StandardLength9b     
                                            //  distanceToRightBorder StandardLength9b     
                                            //  ...
                                        uint8_t* _ext_flag_313 = (uint8_t*) buffer++;  // Write extension flag for LanePositionWithLateralDetails
                                        *_ext_flag_313 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000583\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_375 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value - -1;
                                        *_tmp_375 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000584\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_376 = (uint8_t*) buffer++;
                                        *_tmp_376 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000585\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_377 = (uint8_t*) buffer++;
                                        *_tmp_377 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_left_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000586\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value: " << ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        }
                                        
                                        float _tmp_379 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        _tmp_379 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_379);
                                        uint16_t* _tmp_378 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_378 = static_cast<uint16_t>(_tmp_379);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_right_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000587\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value: " << ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        }
                                        
                                        float _tmp_381 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        _tmp_381 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_381);
                                        uint16_t* _tmp_380 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_380 = static_cast<uint16_t>(_tmp_381);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_313) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position.size() != 0)  // CHOICE 4  fieldType(LanePositionOptions) 
                                {
                                    *_choice_3 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000588\033[0m| Choice selection: 4";
                                
                                        // TrafficIslandPosition  SEQUENCE
                                            //  oneSide    LanePositionAndType     
                                            //  otherSide  LanePositionAndType     
                                            //  ...
                                        uint8_t* _ext_flag_319 = (uint8_t*) buffer++;  // Write extension flag for TrafficIslandPosition
                                        *_ext_flag_319 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePositionAndType) name(one_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_320 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_320 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000589\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_383 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value - -1;
                                            *_tmp_383 = __aux64__;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000590\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_384 = (uint8_t*) buffer++;
                                            *_tmp_384 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000591\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_385 = (uint8_t*) buffer++;
                                            *_tmp_385 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_320) {
                                            }
                                        
                                        // Field:  type(LanePositionAndType) name(other_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_324 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_324 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000592\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_387 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value - -1;
                                            *_tmp_387 = __aux64__;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000593\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_388 = (uint8_t*) buffer++;
                                            *_tmp_388 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000594\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_389 = (uint8_t*) buffer++;
                                            *_tmp_389 = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_324) {
                                            }
                                        
                                        if(*_ext_flag_319) {
                                        }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_3) << ") selected in CHOICE LanePositionOptions in 'denm.location[0].lane_positions[0].elements[e].lane_position_based'; message dropped.";
                                    return -1;
                                }
                                
                                if(ros->denm.location[0].lane_positions[0].elements[e].map_based.size() != 0) {
                                    // Field:  type(MapPosition) name(map_based) extGroup(0)
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_328 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_328 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_392 = (char*) buffer++;
                                        *_tmp_392 = (ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000595\033[0m| Optional field map_reference = " << *_tmp_392;
                                        char* _tmp_393 = (char*) buffer++;
                                        *_tmp_393 = (ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000596\033[0m| Optional field lane_id = " << *_tmp_393;
                                        char* _tmp_394 = (char*) buffer++;
                                        *_tmp_394 = (ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000597\033[0m| Optional field connection_id = " << *_tmp_394;
                                        char* _tmp_395 = (char*) buffer++;
                                        *_tmp_395 = (ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000598\033[0m| Optional field longitudinal_lane_position = " << *_tmp_395;
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_4 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_4 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000599\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_396 = (char*) buffer++;
                                                    *_tmp_396 = (ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m000600\033[0m| Optional field region = " << *_tmp_396;
                                                    
                                                    if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m000601\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_397 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_397 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m000602\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_398 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_398 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_4 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000603\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_399 = (char*) buffer++;
                                                    *_tmp_399 = (ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m000604\033[0m| Optional field region = " << *_tmp_399;
                                                    
                                                    if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m000605\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_400 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_400 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m000606\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_401 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_401 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_4) << ") selected in CHOICE MapReference in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000607\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_402 = (uint8_t*) buffer++;
                                            *_tmp_402 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000608\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_403 = (uint8_t*) buffer++;
                                            *_tmp_403 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000609\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_405 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_405 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_405);
                                                uint16_t* _tmp_404 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_404 = static_cast<uint16_t>(_tmp_405);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000610\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_407 = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_407 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_407);
                                                uint16_t* _tmp_406 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_406 = static_cast<uint16_t>(_tmp_407);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_328) {
                                        }
                                }
                                
                                // Field:  type(MetaInformation) name(confidence) extGroup(0)
                                    // MetaInformation  SEQUENCE
                                        //  usedDetectionInformation SensorTypes               
                                        //  usedStoredInformation    StoredInformationType     
                                        //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_338 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                    *_ext_flag_338 = 0;  
                                    
                                    // Optional fields bytemap
                                    char* _tmp_409 = (char*) buffer++;
                                    *_tmp_409 = (ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000611\033[0m| Optional field confidence_value = " << *_tmp_409;
                                    
                                    // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(16) max(16) span(1)
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000612\033[0m| denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.size());
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.size() < 16) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.value' " << (ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.size() > 16) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.value' " << (ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _ext_flag_339 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.
                                    *_ext_flag_339 = 0; 
                                    
                                    uint8_t* _tmp_410 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.size();
                                    if(__aux64__ > 16) __aux64__ = 16;
                                    *_tmp_410 = __aux64__ - 16;
                                    buffer += 1;
                                    
                                    int __iff = __aux64__;
                                    for(int f = 0; f < __iff; f++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values[f]? 1: 0);
                                    }
                                    
                                    // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(1) max(168) span(168)
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000613\033[0m| denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.size());
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.size() < 1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.value' " << (ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.size() > 168) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.value' " << (ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _ext_flag_340 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.
                                    *_ext_flag_340 = 0; 
                                    
                                    uint8_t* _tmp_411 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.size();
                                    if(__aux64__ > 168) __aux64__ = 168;
                                    *_tmp_411 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifg = __aux64__;
                                    for(int g = 0; g < __ifg; g++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values[g]? 1: 0);
                                    }
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value.size() != 0) {
                                        // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000614\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value);
                                        }
                                        
                                        uint8_t* _tmp_412 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value - 1;
                                        *_tmp_412 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    if(*_ext_flag_338) {
                                    }
                                
                                if(*_ext_flag_305) {
                                }
                        }
                    }
                    
                    if(ros->denm.location[0].occupied_lanes.size() != 0) {
                        // Field:  type(OccupiedLanesWithConfidence) name(occupied_lanes) extGroup(1)
                            // OccupiedLanesWithConfidence  SEQUENCE
                                //  lanePositionBased OccupiedLanesWithConfidence_lanePositionBased     
                                //  mapBased          OccupiedLanesWithConfidence_mapBased            OPTIONAL  
                                //  confidence        MetaInformation                                   
                                //  ...
                            uint8_t* _ext_flag_342 = (uint8_t*) buffer++;  // Write extension flag for OccupiedLanesWithConfidence
                            *_ext_flag_342 = 0;  
                            
                            // Optional fields bytemap
                            char* _tmp_415 = (char*) buffer++;
                            *_tmp_415 = (ros->denm.location[0].occupied_lanes[0].map_based.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m000615\033[0m| Optional field map_based = " << *_tmp_415;
                            
                            // Field:  type(OccupiedLanesWithConfidence_lanePositionBased) name(lane_position_based) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements.size();
                            if(__aux64__ > 4) __aux64__ = 4;
                            uint16_t* _tmp_416 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_416 = __aux64__ - 1;
                            
                            int __ifh = __aux64__;
                            for(int h = 0; h < __ifh; h++) { 
                                
                                // Choice
                                   // #0  simplelanePosition   LanePosition
                                   // #1  simpleLaneType   LaneType
                                   // #2  detailedlanePosition   LanePositionAndType
                                   // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails
                                   // #4  trafficIslandPosition   TrafficIslandPosition
                                uint8_t* _ext_flag_343 = (uint8_t*) buffer; 
                                buffer++;
                                *_ext_flag_343 = 0; 
                                
                                uint8_t* _choice_5 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position.size() != 0) {  // CHOICE 0  fieldType(LanePositionOptions) 
                                    *_choice_5 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000617\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000618\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value);
                                    }
                                    
                                    uint8_t* _tmp_417 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value - -1;
                                    *_tmp_417 = __aux64__;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type.size() != 0)  // CHOICE 1  fieldType(LanePositionOptions) 
                                {
                                    *_choice_5 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000619\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000620\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value);
                                    }
                                    
                                    uint8_t* _tmp_418 = (uint8_t*) buffer++;
                                    *_tmp_418 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value; 
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position.size() != 0)  // CHOICE 2  fieldType(LanePositionOptions) 
                                {
                                    *_choice_5 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000621\033[0m| Choice selection: 2";
                                
                                        // LanePositionAndType  SEQUENCE
                                            //  transversalPosition LanePosition     
                                            //  laneType            LaneType         
                                            //  direction           Direction        
                                            //  ...
                                        uint8_t* _ext_flag_346 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                        *_ext_flag_346 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000622\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_419 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value - -1;
                                        *_tmp_419 = __aux64__;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000623\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_420 = (uint8_t*) buffer++;
                                        *_tmp_420 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000624\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_421 = (uint8_t*) buffer++;
                                        *_tmp_421 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_346) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details.size() != 0)  // CHOICE 3  fieldType(LanePositionOptions) 
                                {
                                    *_choice_5 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000625\033[0m| Choice selection: 3";
                                
                                        // LanePositionWithLateralDetails  SEQUENCE
                                            //  transversalPosition   LanePosition         
                                            //  laneType              LaneType             
                                            //  direction             Direction            
                                            //  distanceToLeftBorder  StandardLength9b     
                                            //  distanceToRightBorder StandardLength9b     
                                            //  ...
                                        uint8_t* _ext_flag_350 = (uint8_t*) buffer++;  // Write extension flag for LanePositionWithLateralDetails
                                        *_ext_flag_350 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000626\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_423 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value - -1;
                                        *_tmp_423 = __aux64__;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000627\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_424 = (uint8_t*) buffer++;
                                        *_tmp_424 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000628\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_425 = (uint8_t*) buffer++;
                                        *_tmp_425 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_left_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000629\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value: " << ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        }
                                        
                                        float _tmp_427 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        _tmp_427 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_427);
                                        uint16_t* _tmp_426 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_426 = static_cast<uint16_t>(_tmp_427);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_right_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000630\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value: " << ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        }
                                        
                                        float _tmp_429 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        _tmp_429 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_429);
                                        uint16_t* _tmp_428 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_428 = static_cast<uint16_t>(_tmp_429);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_350) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position.size() != 0)  // CHOICE 4  fieldType(LanePositionOptions) 
                                {
                                    *_choice_5 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000631\033[0m| Choice selection: 4";
                                
                                        // TrafficIslandPosition  SEQUENCE
                                            //  oneSide    LanePositionAndType     
                                            //  otherSide  LanePositionAndType     
                                            //  ...
                                        uint8_t* _ext_flag_356 = (uint8_t*) buffer++;  // Write extension flag for TrafficIslandPosition
                                        *_ext_flag_356 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePositionAndType) name(one_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_357 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_357 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000632\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_431 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value - -1;
                                            *_tmp_431 = __aux64__;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000633\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_432 = (uint8_t*) buffer++;
                                            *_tmp_432 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000634\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_433 = (uint8_t*) buffer++;
                                            *_tmp_433 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_357) {
                                            }
                                        
                                        // Field:  type(LanePositionAndType) name(other_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_361 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_361 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000635\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_435 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value - -1;
                                            *_tmp_435 = __aux64__;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000636\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_436 = (uint8_t*) buffer++;
                                            *_tmp_436 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000637\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_437 = (uint8_t*) buffer++;
                                            *_tmp_437 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_361) {
                                            }
                                        
                                        if(*_ext_flag_356) {
                                        }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_5) << ") selected in CHOICE LanePositionOptions in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h]'; message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.location[0].occupied_lanes[0].map_based.size() != 0) {
                                // Field:  type(OccupiedLanesWithConfidence_mapBased) name(map_based) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements.size();
                                if(__aux64__ > 4) __aux64__ = 4;
                                uint16_t* _tmp_440 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_440 = __aux64__ - 1;
                                
                                int __ifi = __aux64__;
                                for(int i = 0; i < __ifi; i++) { 
                                    
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_365 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_365 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_441 = (char*) buffer++;
                                        *_tmp_441 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000639\033[0m| Optional field map_reference = " << *_tmp_441;
                                        char* _tmp_442 = (char*) buffer++;
                                        *_tmp_442 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000640\033[0m| Optional field lane_id = " << *_tmp_442;
                                        char* _tmp_443 = (char*) buffer++;
                                        *_tmp_443 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000641\033[0m| Optional field connection_id = " << *_tmp_443;
                                        char* _tmp_444 = (char*) buffer++;
                                        *_tmp_444 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000642\033[0m| Optional field longitudinal_lane_position = " << *_tmp_444;
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_6 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_6 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000643\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_445 = (char*) buffer++;
                                                    *_tmp_445 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m000644\033[0m| Optional field region = " << *_tmp_445;
                                                    
                                                    if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m000645\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_446 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_446 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m000646\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_447 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_447 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_6 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m000647\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_448 = (char*) buffer++;
                                                    *_tmp_448 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m000648\033[0m| Optional field region = " << *_tmp_448;
                                                    
                                                    if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m000649\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_449 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_449 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m000650\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_450 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_450 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_6) << ") selected in CHOICE MapReference in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000651\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value) << 
                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_451 = (uint8_t*) buffer++;
                                            *_tmp_451 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000652\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value) << 
                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_452 = (uint8_t*) buffer++;
                                            *_tmp_452 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000653\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_454 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_454 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_454);
                                                uint16_t* _tmp_453 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_453 = static_cast<uint16_t>(_tmp_454);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000654\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_456 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_456 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_456);
                                                uint16_t* _tmp_455 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_455 = static_cast<uint16_t>(_tmp_456);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_365) {
                                        }
                                }
                            }
                            
                            // Field:  type(MetaInformation) name(confidence) extGroup(0)
                                // MetaInformation  SEQUENCE
                                    //  usedDetectionInformation SensorTypes               
                                    //  usedStoredInformation    StoredInformationType     
                                    //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_375 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                *_ext_flag_375 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_458 = (char*) buffer++;
                                *_tmp_458 = (ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000655\033[0m| Optional field confidence_value = " << *_tmp_458;
                                
                                // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(16) max(16) span(1)
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000656\033[0m| denm.location[0].occupied_lanes[0].confidence.used_detection_information.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size());
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size() < 16) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_376 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.
                                *_ext_flag_376 = 0; 
                                
                                uint8_t* _tmp_459 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                *_tmp_459 = __aux64__ - 16;
                                buffer += 1;
                                
                                int __ifj = __aux64__;
                                for(int j = 0; j < __ifj; j++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values[j]? 1: 0);
                                }
                                
                                // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(1) max(168) span(168)
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000657\033[0m| denm.location[0].occupied_lanes[0].confidence.used_stored_information.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size());
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size() < 1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size() > 168) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_377 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.
                                *_ext_flag_377 = 0; 
                                
                                uint8_t* _tmp_460 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size();
                                if(__aux64__ > 168) __aux64__ = 168;
                                *_tmp_460 = __aux64__ - 1;
                                buffer += 1;
                                
                                int __ifk = __aux64__;
                                for(int k = 0; k < __ifk; k++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values[k]? 1: 0);
                                }
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0) {
                                    // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000658\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value);
                                    }
                                    
                                    uint8_t* _tmp_461 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value - 1;
                                    *_tmp_461 = __aux64__;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(*_ext_flag_375) {
                                }
                            
                            if(*_ext_flag_342) {
                            }
                    }
                    
                    if(ros->denm.location[0].linked_ivims.size() != 0) {
                        // Field:  type(IvimReferences) name(linked_ivims) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_379 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].linked_ivims[0].
                        *_ext_flag_379 = 0; 
                        
                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_464 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_464 = __aux64__ - 1;
                        
                        int __ifl = __aux64__;
                        for(int l = 0; l < __ifl; l++) { 
                            
                                // IvimReference  SEQUENCE
                                    //  serviceProviderId       Provider                    
                                    //  iviIdentificationNumber IviIdentificationNumber     
                                // Optional fields bytemap
                                
                                // Field:  type(Provider) name(service_provider_id) extGroup(0)
                                    // Provider  SEQUENCE
                                        //  countryCode        CountryCode          
                                        //  providerIdentifier IssuerIdentifier     
                                    // Optional fields bytemap
                                    
                                    // Field:  type(CountryCode) name(country_code) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(10) max(10) span(1)
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000660\033[0m| denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.value: " << static_cast<int>(ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.size());
                                    
                                    if(ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.size() < 10) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.value' " << (ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.size()) << " is less than allowable (10); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.size() > 10) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.value' " << (ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.size()) << " exceeds max allowable (10); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _tmp_465 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.size();
                                    if(__aux64__ > 10) __aux64__ = 10;
                                    *_tmp_465 = __aux64__ - 10;
                                    buffer += 1;
                                    
                                    int __ifm = __aux64__;
                                    for(int m = 0; m < __ifm; m++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values[m]? 1: 0);
                                    }
                                    
                                    // Field:  type(IssuerIdentifier) name(provider_identifier) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(16383) span(16384) dataType(UInt16)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000661\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value) << 
                                                     " denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value: " << ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value;
                                    }
                                    
                                    uint16_t* _tmp_466 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_466 = ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value; 
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                        return -1;
                                    }
                                
                                // Field:  type(IviIdentificationNumber) name(ivi_identification_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(1) max(32767) span(32767) dataType(UInt16)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000662\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value) << 
                                                 " denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value: " << ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value;
                                }
                                
                                uint8_t* _ext_flag_381 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.
                                *_ext_flag_381 = (ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value >= 1 && ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value <= 32767) ? 0 : 1;
                                
                                if(*_ext_flag_381) {
                                    uint8_t* _tmp_468 = (uint8_t*) buffer++; 
                                    if(ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value >= 0 && ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value <= INT32_MAX) {
                                        *_tmp_468 = 0;
                                    
                                        uint32_t* _tmp_467 = (uint32_t*)buffer; buffer += 4;
                                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value;
                                        __aux64__ -= INT32_MIN;
                                        *_tmp_467 = __aux64__;
                                    } 
                                    else
                                    {
                                        *_tmp_468 = 1;
                                    
                                        uint64_t* _tmp_467 = (uint64_t*)buffer; buffer += 8;
                                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value;
                                        __aux64__ -= INT64_MIN;
                                        *_tmp_467 = __aux64__;
                                    }
                                } else {
                                    uint16_t* _tmp_467 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value - 1;
                                    *_tmp_467 = __aux64__;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value;
                                }
                                
                        }
                    }
                    
                    if(ros->denm.location[0].linked_mapems.size() != 0) {
                        // Field:  type(MapReferences) name(linked_mapems) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_382 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].linked_mapems[0].
                        *_ext_flag_382 = 0; 
                        
                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_469 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_469 = __aux64__ - 1;
                        
                        int __ifn = __aux64__;
                        for(int n = 0; n < __ifn; n++) { 
                            
                            // Choice
                               // #0  roadsegment   RoadSegmentReferenceId
                               // #1  intersection   IntersectionReferenceId
                            uint8_t* _choice_7 = (uint8_t*) buffer;
                            buffer++;
                            
                            if(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                *_choice_7 = 0;  // Setting choice selection
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000664\033[0m| Choice selection: 0";
                            
                                    // RoadSegmentReferenceId  SEQUENCE
                                        //  region     Identifier2B   OPTIONAL  
                                        //  id         Identifier2B     
                                    // Optional fields bytemap
                                    char* _tmp_470 = (char*) buffer++;
                                    *_tmp_470 = (ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000665\033[0m| Optional field region = " << *_tmp_470;
                                    
                                    if(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region.size() != 0) {
                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                        // Integer
                                        
                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000666\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value) << 
                                                         " denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value;
                                        }
                                        
                                        uint16_t* _tmp_471 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_471 = ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value; 
                                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000667\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value) << 
                                                     " denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value;
                                    }
                                    
                                    uint16_t* _tmp_472 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_472 = ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value; 
                                    __aux64__ = ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                            
                            }
                            else if(ros->denm.location[0].linked_mapems[0].elements[n].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                            {
                                *_choice_7 = 1;  // Setting choice selection
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m000668\033[0m| Choice selection: 1";
                            
                                    // IntersectionReferenceId  SEQUENCE
                                        //  region     Identifier2B   OPTIONAL  
                                        //  id         Identifier2B     
                                    // Optional fields bytemap
                                    char* _tmp_473 = (char*) buffer++;
                                    *_tmp_473 = (ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000669\033[0m| Optional field region = " << *_tmp_473;
                                    
                                    if(ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region.size() != 0) {
                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                        // Integer
                                        
                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000670\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value) << 
                                                         " denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value;
                                        }
                                        
                                        uint16_t* _tmp_474 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_474 = ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value; 
                                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000671\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value) << 
                                                     " denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value;
                                    }
                                    
                                    uint16_t* _tmp_475 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_475 = ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value; 
                                    __aux64__ = ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                            
                            }
                            else
                            {
                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_7) << ") selected in CHOICE MapReference in 'denm.location[0].linked_mapems[0].elements[n]'; message dropped.";
                                return -1;
                            }
                        }
                    }
                    
                    if(ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0) {
                        // Field:  type(TracesExtended) name(detection_zones_to_specified_event_point) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(7) span(7) ext(false)
                        __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements.size();
                        if(__aux64__ > 7) __aux64__ = 7;
                        uint16_t* _tmp_476 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_476 = __aux64__ - 1;
                        
                        int __ifo = __aux64__;
                        for(int o = 0; o < __ifo; o++) { 
                            
                                // PathExtended  SEQUENCE
                                    //  pointOfEventZone PathExtended_pointOfEventZone     
                                    //  path             Path                              
                                // Optional fields bytemap
                                
                                // Field:  type(PathExtended_pointOfEventZone) name(point_of_event_zone) extGroup(0)
                                // Integer
                                
                                // UINT8  min(1) max(23) span(23) dataType(UInt8)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000673\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value) << 
                                                 " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value: " << static_cast<int>(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value);
                                }
                                
                                uint8_t* _tmp_477 = (uint8_t*) buffer++;
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value - 1;
                                *_tmp_477 = __aux64__;
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 23) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value' (" << __aux64__ << ") exceeds max allowable (23); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(Path) name(path) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(0) max(40) span(41) ext(false)
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements.size();
                                if(__aux64__ > 40) __aux64__ = 40;
                                uint16_t* _tmp_478 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_478 = __aux64__;
                                
                                int __ifp = __aux64__;
                                for(int p = 0; p < __ifp; p++) { 
                                    
                                        // PathPoint  SEQUENCE
                                            //  pathPosition  DeltaReferencePosition     
                                            //  pathDeltaTime PathDeltaTime            OPTIONAL  
                                        // Optional fields bytemap
                                        char* _tmp_479 = (char*) buffer++;
                                        *_tmp_479 = (ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000675\033[0m| Optional field path_delta_time = " << *_tmp_479;
                                        
                                        // Field:  type(DeltaReferencePosition) name(path_position) extGroup(0)
                                            // DeltaReferencePosition  SEQUENCE
                                                //  deltaLatitude  DeltaLatitude      
                                                //  deltaLongitude DeltaLongitude     
                                                //  deltaAltitude  DeltaAltitude      
                                            // Optional fields bytemap
                                            
                                            // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000676\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value;
                                            }
                                            
                                            double _tmp_481 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value;
                                            _tmp_481 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_481);
                                            _tmp_481 -= -131071;
                                            uint32_t* _tmp_480 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_480 = static_cast<uint32_t>(_tmp_481);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000677\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value;
                                            }
                                            
                                            double _tmp_483 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value;
                                            _tmp_483 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_483);
                                            _tmp_483 -= -131071;
                                            uint32_t* _tmp_482 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_482 = static_cast<uint32_t>(_tmp_483);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000678\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value;
                                            }
                                            
                                            float _tmp_485 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value;
                                            _tmp_485 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_485);
                                            _tmp_485 -= -12700;
                                            uint16_t* _tmp_484 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_484 = static_cast<uint16_t>(_tmp_485);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time.size() != 0) {
                                            // Field:  type(PathDeltaTime) name(path_delta_time) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000679\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                            }
                                            
                                            uint8_t* _ext_flag_392 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].
                                            float _tmp_486 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                            _tmp_486 *= 100.0;
                                            __aux64__ = static_cast<int64_t>(_tmp_486);
                                            *_ext_flag_392 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                            
                                            if(*_ext_flag_392) {
                                                uint8_t* _tmp_487 = (uint8_t*) buffer++; 
                                            
                                                if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                                    *_tmp_487 = 0;
                                            
                                                    float _tmp_489 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                                    _tmp_489 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_489);
                                                    _tmp_489 -= INT32_MIN;
                                                    uint32_t* _tmp_488 = (uint32_t*) buffer; buffer += 4;
                                                    *_tmp_488 = static_cast<uint32_t>(_tmp_489);
                                                }
                                                else
                                                {
                                                    *_tmp_487 = 1;
                                            
                                                    float _tmp_491 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                                    _tmp_491 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_491);
                                                    _tmp_491 -= INT64_MIN;
                                                    uint32_t* _tmp_490 = (uint32_t*) buffer; buffer += 4;
                                                    *_tmp_490 = static_cast<uint32_t>(_tmp_491);
                                                }
                                            }
                                            else
                                            {
                                                float _tmp_493 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                                _tmp_493 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_493);
                                                _tmp_493 -= 1;
                                                uint16_t* _tmp_492 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_492 = static_cast<uint16_t>(_tmp_493);
                                            }
                                        }
                                        
                                }
                                
                        }
                    }
                    
                    if(ros->denm.location[0].predicted_paths.size() != 0) {
                        // Field:  type(PathPredictedList) name(predicted_paths) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                        uint8_t* _ext_flag_393 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].
                        *_ext_flag_393 = 0; 
                        
                        __aux64__ = ros->denm.location[0].predicted_paths[0].elements.size();
                        if(__aux64__ > 16) __aux64__ = 16;
                        uint16_t* _tmp_494 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_494 = __aux64__ - 1;
                        
                        int __ifq = __aux64__;
                        for(int q = 0; q < __ifq; q++) { 
                            
                                // PathPredicted2  SEQUENCE
                                    //  pathPredicted   PathPredicted       
                                    //  usageIndication UsageIndication     
                                    //  confidenceLevel ConfidenceLevel     
                                    //  ...
                                uint8_t* _ext_flag_394 = (uint8_t*) buffer++;  // Write extension flag for PathPredicted2
                                *_ext_flag_394 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(PathPredicted) name(path_predicted) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                uint8_t* _ext_flag_395 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.
                                *_ext_flag_395 = 0; 
                                
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                uint16_t* _tmp_495 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_495 = __aux64__ - 1;
                                
                                int __ifr = __aux64__;
                                for(int r = 0; r < __ifr; r++) { 
                                    
                                        // PathPointPredicted  SEQUENCE
                                            //  deltaLatitude                DeltaLatitude            
                                            //  deltaLongitude               DeltaLongitude           
                                            //  horizontalPositionConfidence PosConfidenceEllipse   OPTIONAL  
                                            //  deltaAltitude                DeltaAltitude            
                                            //  altitudeConfidence           AltitudeConfidence       
                                            //  pathDeltaTime                PathDeltaTimeChoice      
                                            //  symmetricAreaOffset          StandardLength9b       OPTIONAL  
                                            //  asymmetricAreaOffset         StandardLength9b       OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_396 = (uint8_t*) buffer++;  // Write extension flag for PathPointPredicted
                                        *_ext_flag_396 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_496 = (char*) buffer++;
                                        *_tmp_496 = (ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000682\033[0m| Optional field horizontal_position_confidence = " << *_tmp_496;
                                        char* _tmp_497 = (char*) buffer++;
                                        *_tmp_497 = (ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000683\033[0m| Optional field symmetric_area_offset = " << *_tmp_497;
                                        char* _tmp_498 = (char*) buffer++;
                                        *_tmp_498 = (ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m000684\033[0m| Optional field asymmetric_area_offset = " << *_tmp_498;
                                        
                                        // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                        // Real
                                        
                                        // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000685\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value;
                                        }
                                        
                                        double _tmp_500 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value;
                                        _tmp_500 *= 1.0E7;
                                        __aux64__ = static_cast<uint64_t>(_tmp_500);
                                        _tmp_500 -= -131071;
                                        uint32_t* _tmp_499 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_499 = static_cast<uint32_t>(_tmp_500);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                        // Real
                                        
                                        // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000686\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value;
                                        }
                                        
                                        double _tmp_502 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value;
                                        _tmp_502 *= 1.0E7;
                                        __aux64__ = static_cast<uint64_t>(_tmp_502);
                                        _tmp_502 -= -131071;
                                        uint32_t* _tmp_501 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_501 = static_cast<uint32_t>(_tmp_502);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence.size() != 0) {
                                            // Field:  type(PosConfidenceEllipse) name(horizontal_position_confidence) extGroup(0)
                                                // PosConfidenceEllipse  SEQUENCE
                                                    //  semiMajorConfidence  SemiAxisLength     
                                                    //  semiMinorConfidence  SemiAxisLength     
                                                    //  semiMajorOrientation HeadingValue       
                                                // Optional fields bytemap
                                                
                                                // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000687\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value;
                                                }
                                                
                                                float _tmp_504 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value;
                                                _tmp_504 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_504);
                                                uint16_t* _tmp_503 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_503 = static_cast<uint16_t>(_tmp_504);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000688\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                }
                                                
                                                float _tmp_506 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                _tmp_506 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_506);
                                                uint16_t* _tmp_505 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_505 = static_cast<uint16_t>(_tmp_506);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m000689\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value;
                                                }
                                                
                                                float _tmp_508 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value;
                                                _tmp_508 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_508);
                                                uint16_t* _tmp_507 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_507 = static_cast<uint16_t>(_tmp_508);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000690\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value;
                                        }
                                        
                                        float _tmp_510 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value;
                                        _tmp_510 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_510);
                                        _tmp_510 -= -12700;
                                        uint16_t* _tmp_509 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_509 = static_cast<uint16_t>(_tmp_510);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) dataType(Int32)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m000691\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_511 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_511 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value; 
                                        __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(PathDeltaTimeChoice) name(path_delta_time) extGroup(0)
                                        // Choice
                                           // #0  deltaTimeHighPrecision   DeltaTimeTenthOfSecond
                                           // #1  deltaTimeBigRange   DeltaTimeTenSeconds
                                        uint8_t* _choice_8 = (uint8_t*) buffer;
                                        buffer++;
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision.size() != 0) {  // CHOICE 0  fieldType(PathDeltaTimeChoice) 
                                            *_choice_8 = 0;  // Setting choice selection
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000692\033[0m| Choice selection: 0";
                                        
                                            // Real
                                            
                                            // FLOAT  min(0) max(127) span(128) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000693\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value);
                                            }
                                            
                                            float _tmp_513 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value;
                                            _tmp_513 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_513);
                                            uint8_t* _tmp_512 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_512 = static_cast<uint8_t>(_tmp_513);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        }
                                        else if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range.size() != 0)  // CHOICE 1  fieldType(PathDeltaTimeChoice) 
                                        {
                                            *_choice_8 = 1;  // Setting choice selection
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m000694\033[0m| Choice selection: 1";
                                        
                                            // Real
                                            
                                            // FLOAT  min(0) max(127) span(128) scaleDivisor(0.1) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000695\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value);
                                            }
                                            
                                            float _tmp_515 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value;
                                            _tmp_515 *= 0.1;
                                            __aux64__ = static_cast<uint64_t>(_tmp_515);
                                            uint8_t* _tmp_514 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_514 = static_cast<uint8_t>(_tmp_515);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_8) << ") selected in CHOICE PathDeltaTimeChoice in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time'; message dropped.";
                                            return -1;
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset.size() != 0) {
                                            // Field:  type(StandardLength9b) name(symmetric_area_offset) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000696\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value;
                                            }
                                            
                                            float _tmp_517 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value;
                                            _tmp_517 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_517);
                                            uint16_t* _tmp_516 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_516 = static_cast<uint16_t>(_tmp_517);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset.size() != 0) {
                                            // Field:  type(StandardLength9b) name(asymmetric_area_offset) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m000697\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value: " << ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value;
                                            }
                                            
                                            float _tmp_519 = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value;
                                            _tmp_519 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_519);
                                            uint16_t* _tmp_518 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_518 = static_cast<uint16_t>(_tmp_519);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(*_ext_flag_396) {
                                        }
                                }
                                
                                // Field:  type(UsageIndication) name(usage_indication) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(2) span(3) dataType(Int32)
                                uint8_t* _ext_flag_409 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000698\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value) << 
                                                 " denm.location[0].predicted_paths[0].elements[q].usage_indication.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value);
                                }
                                
                                uint8_t* _tmp_521 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_521 = ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value; 
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].usage_indication.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].usage_indication.value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(ConfidenceLevel) name(confidence_level) extGroup(0)
                                // Integer
                                
                                // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000699\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value) << 
                                                 " denm.location[0].predicted_paths[0].elements[q].confidence_level.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value);
                                }
                                
                                uint8_t* _tmp_522 = (uint8_t*) buffer++;
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value - 1;
                                *_tmp_522 = __aux64__;
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].confidence_level.value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].confidence_level.value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_394) {
                                }
                        }
                    }
                    
                    *_tmp_359_openType = buffer - _tmp_360_start;  // OpenType length
                }
        }
        
        if(ros->denm.alacarte.size() != 0) {
            // Field:  type(AlacarteContainer) name(alacarte) extGroup(0)
                // AlacarteContainer  SEQUENCE
                    //  lanePosition        LanePosition                 OPTIONAL  
                    //  impactReduction     ImpactReductionContainer     OPTIONAL  
                    //  externalTemperature Temperature                  OPTIONAL  
                    //  roadWorks           RoadWorksContainerExtended   OPTIONAL  
                    //  positioningSolution PositioningSolutionType      OPTIONAL  
                    //  stationaryVehicle   StationaryVehicleContainer   OPTIONAL  
                    //  roadConfiguration   RoadConfigurationContainer   OPTIONAL  Extension group #1
                    //  precrash            PreCrashContainer            OPTIONAL  Extension group #1
                uint8_t* _ext_flag_411 = (uint8_t*) buffer++;  // Write extension flag for AlacarteContainer
                *_ext_flag_411 = (ros->denm.alacarte[0].road_configuration.size() != 0 || ros->denm.alacarte[0].precrash.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_524 = (char*) buffer++;
                *_tmp_524 = (ros->denm.alacarte[0].lane_position.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000700\033[0m| Optional field lane_position = " << *_tmp_524;
                char* _tmp_525 = (char*) buffer++;
                *_tmp_525 = (ros->denm.alacarte[0].impact_reduction.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000701\033[0m| Optional field impact_reduction = " << *_tmp_525;
                char* _tmp_526 = (char*) buffer++;
                *_tmp_526 = (ros->denm.alacarte[0].external_temperature.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000702\033[0m| Optional field external_temperature = " << *_tmp_526;
                char* _tmp_527 = (char*) buffer++;
                *_tmp_527 = (ros->denm.alacarte[0].road_works.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000703\033[0m| Optional field road_works = " << *_tmp_527;
                char* _tmp_528 = (char*) buffer++;
                *_tmp_528 = (ros->denm.alacarte[0].positioning_solution.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000704\033[0m| Optional field positioning_solution = " << *_tmp_528;
                char* _tmp_529 = (char*) buffer++;
                *_tmp_529 = (ros->denm.alacarte[0].stationary_vehicle.size() != 0 ? 1 : 0);
                if(debug)
                    logger->print() << "|\033[38;5;94m000705\033[0m| Optional field stationary_vehicle = " << *_tmp_529;
                
                if(ros->denm.alacarte[0].lane_position.size() != 0) {
                    // Field:  type(LanePosition) name(lane_position) extGroup(0)
                    // Integer
                    
                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000706\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].lane_position[0].value) << 
                                     " denm.alacarte[0].lane_position[0].value: " << static_cast<int>(ros->denm.alacarte[0].lane_position[0].value);
                    }
                    
                    uint8_t* _tmp_530 = (uint8_t*) buffer++;
                    __aux64__ = ros->denm.alacarte[0].lane_position[0].value - -1;
                    *_tmp_530 = __aux64__;
                    __aux64__ = ros->denm.alacarte[0].lane_position[0].value;
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].impact_reduction.size() != 0) {
                    // Field:  type(ImpactReductionContainer) name(impact_reduction) extGroup(0)
                        // ImpactReductionContainer  SEQUENCE
                            //  heightLonCarrLeft         HeightLonCarr                 
                            //  heightLonCarrRight        HeightLonCarr                 
                            //  posLonCarrLeft            PosLonCarr                    
                            //  posLonCarrRight           PosLonCarr                    
                            //  positionOfPillars         PositionOfPillars             
                            //  posCentMass               PosCentMass                   
                            //  wheelBaseVehicle          WheelBaseVehicle              
                            //  turningRadius             TurningRadius                 
                            //  posFrontAx                PosFrontAx                    
                            //  positionOfOccupants       PositionOfOccupants           
                            //  vehicleMass               VehicleMass                   
                            //  requestResponseIndication RequestResponseIndication     
                        // Optional fields bytemap
                        
                        // Field:  type(HeightLonCarr) name(height_lon_carr_left) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000707\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value) << 
                                         " denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value);
                        }
                        
                        float _tmp_532 = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value;
                        _tmp_532 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_532);
                        _tmp_532 -= 1;
                        uint8_t* _tmp_531 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_531 = static_cast<uint8_t>(_tmp_532);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' (" << __aux64__ << ") exceeds max allowable (100); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(HeightLonCarr) name(height_lon_carr_right) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000708\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value) << 
                                         " denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value);
                        }
                        
                        float _tmp_534 = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value;
                        _tmp_534 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_534);
                        _tmp_534 -= 1;
                        uint8_t* _tmp_533 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_533 = static_cast<uint8_t>(_tmp_534);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' (" << __aux64__ << ") exceeds max allowable (100); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosLonCarr) name(pos_lon_carr_left) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000709\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value);
                        }
                        
                        float _tmp_536 = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value;
                        _tmp_536 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_536);
                        _tmp_536 -= 1;
                        uint8_t* _tmp_535 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_535 = static_cast<uint8_t>(_tmp_536);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosLonCarr) name(pos_lon_carr_right) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000710\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value);
                        }
                        
                        float _tmp_538 = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value;
                        _tmp_538 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_538);
                        _tmp_538 -= 1;
                        uint8_t* _tmp_537 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_537 = static_cast<uint8_t>(_tmp_538);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PositionOfPillars) name(position_of_pillars) extGroup(0)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(3) span(3) ext(true)
                        uint8_t* _ext_flag_417 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.
                        *_ext_flag_417 = 0; 
                        
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements.size();
                        if(__aux64__ > 3) __aux64__ = 3;
                        uint16_t* _tmp_539 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_539 = __aux64__ - 1;
                        
                        int __ifs = __aux64__;
                        for(int s = 0; s < __ifs; s++) { 
                            
                            // Real
                            
                            // FLOAT  min(1) max(30) span(30) scaleDivisor(10.0) dataType(Float)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000712\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value) << 
                                             " denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value);
                            }
                            
                            float _tmp_541 = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value;
                            _tmp_541 *= 10.0;
                            __aux64__ = static_cast<uint64_t>(_tmp_541);
                            _tmp_541 -= 1;
                            uint8_t* _tmp_540 = (uint8_t*) buffer; buffer += 1;
                            *_tmp_540 = static_cast<uint8_t>(_tmp_541);
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value' (" << __aux64__ << ") less than (1); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 30) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value' (" << __aux64__ << ") exceeds max allowable (30); message dropped.";
                                return -1;
                            }
                            
                        }
                        
                        // Field:  type(PosCentMass) name(pos_cent_mass) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(63) span(63) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000713\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_cent_mass.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value);
                        }
                        
                        float _tmp_543 = ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value;
                        _tmp_543 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_543);
                        _tmp_543 -= 1;
                        uint8_t* _tmp_542 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_542 = static_cast<uint8_t>(_tmp_543);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 63) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' (" << __aux64__ << ") exceeds max allowable (63); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(WheelBaseVehicle) name(wheel_base_vehicle) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000714\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value) << 
                                         " denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value);
                        }
                        
                        float _tmp_545 = ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value;
                        _tmp_545 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_545);
                        _tmp_545 -= 1;
                        uint8_t* _tmp_544 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_544 = static_cast<uint8_t>(_tmp_545);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(TurningRadius) name(turning_radius) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(255) span(255) scaleDivisor(2.5) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000715\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value) << 
                                         " denm.alacarte[0].impact_reduction[0].turning_radius.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value);
                        }
                        
                        float _tmp_547 = ros->denm.alacarte[0].impact_reduction[0].turning_radius.value;
                        _tmp_547 *= 2.5;
                        __aux64__ = static_cast<uint64_t>(_tmp_547);
                        _tmp_547 -= 1;
                        uint8_t* _tmp_546 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_546 = static_cast<uint8_t>(_tmp_547);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosFrontAx) name(pos_front_ax) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(20) span(20) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000716\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_front_ax.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value);
                        }
                        
                        float _tmp_549 = ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value;
                        _tmp_549 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_549);
                        _tmp_549 -= 1;
                        uint8_t* _tmp_548 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_548 = static_cast<uint8_t>(_tmp_549);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 20) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' (" << __aux64__ << ") exceeds max allowable (20); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PositionOfOccupants) name(position_of_occupants) extGroup(0)
                        // BitString
                        // BIT_STRING  min(20) max(20) span(1)
                        if(debug)
                            logger->print() << "|\033[38;5;94m000717\033[0m| denm.alacarte[0].impact_reduction[0].position_of_occupants.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size());
                        
                        if(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size() < 20) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size()) << " is less than allowable (20); message dropped.";
                            return -1;
                        }
                        if(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size() > 20) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size()) << " exceeds max allowable (20); message dropped.";
                            return -1;
                        }
                        
                        uint8_t* _tmp_550 = (uint8_t*)buffer;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size();
                        if(__aux64__ > 20) __aux64__ = 20;
                        *_tmp_550 = __aux64__ - 20;
                        buffer += 1;
                        
                        int __ift = __aux64__;
                        for(int t = 0; t < __ift; t++) {
                            uint8_t* __b__ = (uint8_t*)buffer++;
                            *__b__ = (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values[t]? 1: 0);
                        }
                        
                        // Field:  type(VehicleMass) name(vehicle_mass) extGroup(0)
                        // Integer
                        
                        // UINT16  min(1) max(1024) span(1024) dataType(UInt16)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000718\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].vehicle_mass.value: " << ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        }
                        
                        uint16_t* _tmp_551 = (uint16_t*) buffer; buffer += 2;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value - 1;
                        *_tmp_551 = __aux64__;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 1024) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' (" << __aux64__ << ") exceeds max allowable (1024); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(RequestResponseIndication) name(request_response_indication) extGroup(0)
                        // Enumerated
                        // INT32  min(0) max(1) span(2) dataType(Int32)
                        if(debug) {
                            logger->print() << "|\033[38;5;94m000719\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value) << 
                                         " denm.alacarte[0].impact_reduction[0].request_response_indication.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value);
                        }
                        
                        uint8_t* _tmp_552 = (uint8_t*)buffer;
                        buffer += 1;
                        *_tmp_552 = ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value; 
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value; 
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' (" << __aux64__ << ") exceeds max allowable (1); message dropped.";
                            return -1;
                        }
                }
                
                if(ros->denm.alacarte[0].external_temperature.size() != 0) {
                    // Field:  type(Temperature) name(external_temperature) extGroup(0)
                    // Integer
                    
                    // INT8  min(-60) max(67) span(128) dataType(Int8)
                    if(debug) {
                        logger->print() << "|\033[38;5;94m000720\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].external_temperature[0].value) << 
                                     " denm.alacarte[0].external_temperature[0].value: " << static_cast<int>(ros->denm.alacarte[0].external_temperature[0].value);
                    }
                    
                    uint8_t* _tmp_553 = (uint8_t*) buffer++;
                    __aux64__ = ros->denm.alacarte[0].external_temperature[0].value - -60;
                    *_tmp_553 = __aux64__;
                    __aux64__ = ros->denm.alacarte[0].external_temperature[0].value;
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -60) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' (" << __aux64__ << ") less than (-60); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 67) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' (" << __aux64__ << ") exceeds max allowable (67); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].road_works.size() != 0) {
                    // Field:  type(RoadWorksContainerExtended) name(road_works) extGroup(0)
                        // RoadWorksContainerExtended  SEQUENCE
                            //  lightBarSirenInUse      LightBarSirenInUse       OPTIONAL  
                            //  closedLanes             ClosedLanes              OPTIONAL  
                            //  restriction             RestrictedTypes          OPTIONAL  
                            //  speedLimit              SpeedLimit               OPTIONAL  
                            //  incidentIndication      CauseCodeV2              OPTIONAL  
                            //  recommendedPath         ItineraryPath            OPTIONAL  
                            //  startingPointSpeedLimit DeltaReferencePosition   OPTIONAL  
                            //  trafficFlowRule         TrafficRule              OPTIONAL  
                            //  referenceDenms          ActionIdList             OPTIONAL  
                        // Optional fields bytemap
                        char* _tmp_554 = (char*) buffer++;
                        *_tmp_554 = (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000721\033[0m| Optional field light_bar_siren_in_use = " << *_tmp_554;
                        char* _tmp_555 = (char*) buffer++;
                        *_tmp_555 = (ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000722\033[0m| Optional field closed_lanes = " << *_tmp_555;
                        char* _tmp_556 = (char*) buffer++;
                        *_tmp_556 = (ros->denm.alacarte[0].road_works[0].restriction.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000723\033[0m| Optional field restriction = " << *_tmp_556;
                        char* _tmp_557 = (char*) buffer++;
                        *_tmp_557 = (ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000724\033[0m| Optional field speed_limit = " << *_tmp_557;
                        char* _tmp_558 = (char*) buffer++;
                        *_tmp_558 = (ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000725\033[0m| Optional field incident_indication = " << *_tmp_558;
                        char* _tmp_559 = (char*) buffer++;
                        *_tmp_559 = (ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000726\033[0m| Optional field recommended_path = " << *_tmp_559;
                        char* _tmp_560 = (char*) buffer++;
                        *_tmp_560 = (ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000727\033[0m| Optional field starting_point_speed_limit = " << *_tmp_560;
                        char* _tmp_561 = (char*) buffer++;
                        *_tmp_561 = (ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000728\033[0m| Optional field traffic_flow_rule = " << *_tmp_561;
                        char* _tmp_562 = (char*) buffer++;
                        *_tmp_562 = (ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m000729\033[0m| Optional field reference_denms = " << *_tmp_562;
                        
                        if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0) {
                            // Field:  type(LightBarSirenInUse) name(light_bar_siren_in_use) extGroup(0)
                            // BitString
                            // BIT_STRING  min(2) max(2) span(1)
                            if(debug)
                                logger->print() << "|\033[38;5;94m000730\033[0m| denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size());
                            
                            if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size() < 2) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size()) << " is less than allowable (2); message dropped.";
                                return -1;
                            }
                            if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size() > 2) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size()) << " exceeds max allowable (2); message dropped.";
                                return -1;
                            }
                            
                            uint8_t* _tmp_563 = (uint8_t*)buffer;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size();
                            if(__aux64__ > 2) __aux64__ = 2;
                            *_tmp_563 = __aux64__ - 2;
                            buffer += 1;
                            
                            int __ifu = __aux64__;
                            for(int u = 0; u < __ifu; u++) {
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                *__b__ = (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values[u]? 1: 0);
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0) {
                            // Field:  type(ClosedLanes) name(closed_lanes) extGroup(0)
                                // ClosedLanes  SEQUENCE
                                    //  innerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  outerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  drivingLaneStatus       DrivingLaneStatus    OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_426 = (uint8_t*) buffer++;  // Write extension flag for ClosedLanes
                                *_ext_flag_426 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_564 = (char*) buffer++;
                                *_tmp_564 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000731\033[0m| Optional field innerhard_shoulder_status = " << *_tmp_564;
                                char* _tmp_565 = (char*) buffer++;
                                *_tmp_565 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000732\033[0m| Optional field outerhard_shoulder_status = " << *_tmp_565;
                                char* _tmp_566 = (char*) buffer++;
                                *_tmp_566 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m000733\033[0m| Optional field driving_lane_status = " << *_tmp_566;
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0) {
                                    // Field:  type(HardShoulderStatus) name(innerhard_shoulder_status) extGroup(0)
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) dataType(Int32)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000734\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value);
                                    }
                                    
                                    uint8_t* _tmp_567 = (uint8_t*)buffer;
                                    buffer += 1;
                                    *_tmp_567 = ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value; 
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0) {
                                    // Field:  type(HardShoulderStatus) name(outerhard_shoulder_status) extGroup(0)
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) dataType(Int32)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000735\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value);
                                    }
                                    
                                    uint8_t* _tmp_568 = (uint8_t*)buffer;
                                    buffer += 1;
                                    *_tmp_568 = ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value; 
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0) {
                                    // Field:  type(DrivingLaneStatus) name(driving_lane_status) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(1) max(13) span(13)
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m000736\033[0m| denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size());
                                    
                                    if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size() < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size()) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size() > 13) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size()) << " exceeds max allowable (13); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _tmp_569 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size();
                                    if(__aux64__ > 13) __aux64__ = 13;
                                    *_tmp_569 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifv = __aux64__;
                                    for(int v = 0; v < __ifv; v++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values[v]? 1: 0);
                                    }
                                }
                                
                                if(*_ext_flag_426) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].restriction.size() != 0) {
                            // Field:  type(RestrictedTypes) name(restriction) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(3) span(3) ext(true)
                            uint8_t* _ext_flag_429 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].restriction[0].
                            *_ext_flag_429 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_works[0].restriction[0].elements.size();
                            if(__aux64__ > 3) __aux64__ = 3;
                            uint16_t* _tmp_571 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_571 = __aux64__ - 1;
                            
                            int __ifw = __aux64__;
                            for(int w = 0; w < __ifw; w++) { 
                                
                                // Integer
                                
                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m000738\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value) << 
                                                 " denm.alacarte[0].road_works[0].restriction[0].elements[w].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value);
                                }
                                
                                uint8_t* _tmp_572 = (uint8_t*) buffer++;
                                *_tmp_572 = ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value; 
                                __aux64__ = ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[w].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[w].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                    return -1;
                                }
                                
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0) {
                            // Field:  type(SpeedLimit) name(speed_limit) extGroup(0)
                            // Integer
                            
                            // UINT8  min(1) max(255) span(255) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m000739\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].speed_limit[0].value) << 
                                             " denm.alacarte[0].road_works[0].speed_limit[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].speed_limit[0].value);
                            }
                            
                            uint8_t* _tmp_573 = (uint8_t*) buffer++;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].speed_limit[0].value - 1;
                            *_tmp_573 = __aux64__;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].speed_limit[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0) {
                            // Field:  type(CauseCodeV2) name(incident_indication) extGroup(0)
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_432 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                                *_ext_flag_432 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                                // Choice
                                   // #0  reserved0   SubCauseCodeType
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode
                                   // #2  accident2   AccidentSubCauseCode
                                   // #3  roadworks3   RoadworksSubCauseCode
                                   // #4  reserved4   SubCauseCodeType
                                   // #5  impassability5   ImpassabilitySubCauseCode
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                                   // #7  aquaplaning7   SubCauseCodeType
                                   // #8  reserved8   SubCauseCodeType
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                                   // #13  reserved13   SubCauseCodeType
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                                   // #16  reserved16   SubCauseCodeType
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                                   // #20  violence20   SubCauseCodeType
                                   // #21  reserved21   SubCauseCodeType
                                   // #22  reserved22   SubCauseCodeType
                                   // #23  reserved23   SubCauseCodeType
                                   // #24  reserved24   SubCauseCodeType
                                   // #25  reserved25   SubCauseCodeType
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                                   // #29  reserved29   SubCauseCodeType
                                   // #30  reserved30   SubCauseCodeType
                                   // #31  reserved31   SubCauseCodeType
                                   // #32  reserved32   SubCauseCodeType
                                   // #33  reserved33   SubCauseCodeType
                                   // #34  reserved34   SubCauseCodeType
                                   // #35  reserved35   SubCauseCodeType
                                   // #36  reserved36   SubCauseCodeType
                                   // #37  reserved37   SubCauseCodeType
                                   // #38  reserved38   SubCauseCodeType
                                   // #39  reserved39   SubCauseCodeType
                                   // #40  reserved40   SubCauseCodeType
                                   // #41  reserved41   SubCauseCodeType
                                   // #42  reserved42   SubCauseCodeType
                                   // #43  reserved43   SubCauseCodeType
                                   // #44  reserved44   SubCauseCodeType
                                   // #45  reserved45   SubCauseCodeType
                                   // #46  reserved46   SubCauseCodeType
                                   // #47  reserved47   SubCauseCodeType
                                   // #48  reserved48   SubCauseCodeType
                                   // #49  reserved49   SubCauseCodeType
                                   // #50  reserved50   SubCauseCodeType
                                   // #51  reserved51   SubCauseCodeType
                                   // #52  reserved52   SubCauseCodeType
                                   // #53  reserved53   SubCauseCodeType
                                   // #54  reserved54   SubCauseCodeType
                                   // #55  reserved55   SubCauseCodeType
                                   // #56  reserved56   SubCauseCodeType
                                   // #57  reserved57   SubCauseCodeType
                                   // #58  reserved58   SubCauseCodeType
                                   // #59  reserved59   SubCauseCodeType
                                   // #60  reserved60   SubCauseCodeType
                                   // #61  reserved61   SubCauseCodeType
                                   // #62  reserved62   SubCauseCodeType
                                   // #63  reserved63   SubCauseCodeType
                                   // #64  reserved64   SubCauseCodeType
                                   // #65  reserved65   SubCauseCodeType
                                   // #66  reserved66   SubCauseCodeType
                                   // #67  reserved67   SubCauseCodeType
                                   // #68  reserved68   SubCauseCodeType
                                   // #69  reserved69   SubCauseCodeType
                                   // #70  reserved70   SubCauseCodeType
                                   // #71  reserved71   SubCauseCodeType
                                   // #72  reserved72   SubCauseCodeType
                                   // #73  reserved73   SubCauseCodeType
                                   // #74  reserved74   SubCauseCodeType
                                   // #75  reserved75   SubCauseCodeType
                                   // #76  reserved76   SubCauseCodeType
                                   // #77  reserved77   SubCauseCodeType
                                   // #78  reserved78   SubCauseCodeType
                                   // #79  reserved79   SubCauseCodeType
                                   // #80  reserved80   SubCauseCodeType
                                   // #81  reserved81   SubCauseCodeType
                                   // #82  reserved82   SubCauseCodeType
                                   // #83  reserved83   SubCauseCodeType
                                   // #84  reserved84   SubCauseCodeType
                                   // #85  reserved85   SubCauseCodeType
                                   // #86  reserved86   SubCauseCodeType
                                   // #87  reserved87   SubCauseCodeType
                                   // #88  reserved88   SubCauseCodeType
                                   // #89  reserved89   SubCauseCodeType
                                   // #90  reserved90   SubCauseCodeType
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                                   // #92  postCrash92   PostCrashSubCauseCode
                                   // #93  humanProblem93   HumanProblemSubCauseCode
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode
                                   // #98  signalViolation98   SignalViolationSubCauseCode
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                                   // #101  reserved101   SubCauseCodeType
                                   // #102  reserved102   SubCauseCodeType
                                   // #103  reserved103   SubCauseCodeType
                                   // #104  reserved104   SubCauseCodeType
                                   // #105  reserved105   SubCauseCodeType
                                   // #106  reserved106   SubCauseCodeType
                                   // #107  reserved107   SubCauseCodeType
                                   // #108  reserved108   SubCauseCodeType
                                   // #109  reserved109   SubCauseCodeType
                                   // #110  reserved110   SubCauseCodeType
                                   // #111  reserved111   SubCauseCodeType
                                   // #112  reserved112   SubCauseCodeType
                                   // #113  reserved113   SubCauseCodeType
                                   // #114  reserved114   SubCauseCodeType
                                   // #115  reserved115   SubCauseCodeType
                                   // #116  reserved116   SubCauseCodeType
                                   // #117  reserved117   SubCauseCodeType
                                   // #118  reserved118   SubCauseCodeType
                                   // #119  reserved119   SubCauseCodeType
                                   // #120  reserved120   SubCauseCodeType
                                   // #121  reserved121   SubCauseCodeType
                                   // #122  reserved122   SubCauseCodeType
                                   // #123  reserved123   SubCauseCodeType
                                   // #124  reserved124   SubCauseCodeType
                                   // #125  reserved125   SubCauseCodeType
                                   // #126  reserved126   SubCauseCodeType
                                   // #127  reserved127   SubCauseCodeType
                                   // #128  reserved128   SubCauseCodeType
                                uint8_t* _choice_9 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                                    *_choice_9 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000740\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000741\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    uint8_t* _tmp_574 = (uint8_t*) buffer++;
                                    *_tmp_574 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000742\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000743\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    uint8_t* _tmp_575 = (uint8_t*) buffer++;
                                    *_tmp_575 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000744\033[0m| Choice selection: 2";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000745\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    uint8_t* _tmp_576 = (uint8_t*) buffer++;
                                    *_tmp_576 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000746\033[0m| Choice selection: 3";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000747\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    uint8_t* _tmp_577 = (uint8_t*) buffer++;
                                    *_tmp_577 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000748\033[0m| Choice selection: 4";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000749\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    uint8_t* _tmp_578 = (uint8_t*) buffer++;
                                    *_tmp_578 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 5;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000750\033[0m| Choice selection: 5";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000751\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    uint8_t* _tmp_579 = (uint8_t*) buffer++;
                                    *_tmp_579 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 6;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000752\033[0m| Choice selection: 6";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000753\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    uint8_t* _tmp_580 = (uint8_t*) buffer++;
                                    *_tmp_580 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 7;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000754\033[0m| Choice selection: 7";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000755\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    uint8_t* _tmp_581 = (uint8_t*) buffer++;
                                    *_tmp_581 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 8;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000756\033[0m| Choice selection: 8";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000757\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    uint8_t* _tmp_582 = (uint8_t*) buffer++;
                                    *_tmp_582 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 9;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000758\033[0m| Choice selection: 9";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000759\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    uint8_t* _tmp_583 = (uint8_t*) buffer++;
                                    *_tmp_583 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 10;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000760\033[0m| Choice selection: 10";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000761\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    uint8_t* _tmp_584 = (uint8_t*) buffer++;
                                    *_tmp_584 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 11;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000762\033[0m| Choice selection: 11";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000763\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    uint8_t* _tmp_585 = (uint8_t*) buffer++;
                                    *_tmp_585 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 12;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000764\033[0m| Choice selection: 12";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000765\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    uint8_t* _tmp_586 = (uint8_t*) buffer++;
                                    *_tmp_586 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 13;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000766\033[0m| Choice selection: 13";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000767\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    uint8_t* _tmp_587 = (uint8_t*) buffer++;
                                    *_tmp_587 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 14;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000768\033[0m| Choice selection: 14";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000769\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    uint8_t* _tmp_588 = (uint8_t*) buffer++;
                                    *_tmp_588 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 15;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000770\033[0m| Choice selection: 15";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000771\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    uint8_t* _tmp_589 = (uint8_t*) buffer++;
                                    *_tmp_589 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 16;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000772\033[0m| Choice selection: 16";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000773\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    uint8_t* _tmp_590 = (uint8_t*) buffer++;
                                    *_tmp_590 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 17;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000774\033[0m| Choice selection: 17";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000775\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    uint8_t* _tmp_591 = (uint8_t*) buffer++;
                                    *_tmp_591 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 18;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000776\033[0m| Choice selection: 18";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000777\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    uint8_t* _tmp_592 = (uint8_t*) buffer++;
                                    *_tmp_592 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 19;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000778\033[0m| Choice selection: 19";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000779\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    uint8_t* _tmp_593 = (uint8_t*) buffer++;
                                    *_tmp_593 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 20;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000780\033[0m| Choice selection: 20";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000781\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    uint8_t* _tmp_594 = (uint8_t*) buffer++;
                                    *_tmp_594 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 21;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000782\033[0m| Choice selection: 21";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000783\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    uint8_t* _tmp_595 = (uint8_t*) buffer++;
                                    *_tmp_595 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 22;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000784\033[0m| Choice selection: 22";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000785\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    uint8_t* _tmp_596 = (uint8_t*) buffer++;
                                    *_tmp_596 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 23;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000786\033[0m| Choice selection: 23";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000787\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    uint8_t* _tmp_597 = (uint8_t*) buffer++;
                                    *_tmp_597 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 24;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000788\033[0m| Choice selection: 24";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000789\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    uint8_t* _tmp_598 = (uint8_t*) buffer++;
                                    *_tmp_598 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 25;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000790\033[0m| Choice selection: 25";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000791\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    uint8_t* _tmp_599 = (uint8_t*) buffer++;
                                    *_tmp_599 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 26;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000792\033[0m| Choice selection: 26";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000793\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    uint8_t* _tmp_600 = (uint8_t*) buffer++;
                                    *_tmp_600 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 27;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000794\033[0m| Choice selection: 27";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000795\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    uint8_t* _tmp_601 = (uint8_t*) buffer++;
                                    *_tmp_601 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 28;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000796\033[0m| Choice selection: 28";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000797\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    uint8_t* _tmp_602 = (uint8_t*) buffer++;
                                    *_tmp_602 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 29;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000798\033[0m| Choice selection: 29";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000799\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    uint8_t* _tmp_603 = (uint8_t*) buffer++;
                                    *_tmp_603 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 30;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000800\033[0m| Choice selection: 30";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000801\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    uint8_t* _tmp_604 = (uint8_t*) buffer++;
                                    *_tmp_604 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 31;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000802\033[0m| Choice selection: 31";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000803\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    uint8_t* _tmp_605 = (uint8_t*) buffer++;
                                    *_tmp_605 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 32;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000804\033[0m| Choice selection: 32";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000805\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    uint8_t* _tmp_606 = (uint8_t*) buffer++;
                                    *_tmp_606 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 33;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000806\033[0m| Choice selection: 33";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000807\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    uint8_t* _tmp_607 = (uint8_t*) buffer++;
                                    *_tmp_607 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 34;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000808\033[0m| Choice selection: 34";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000809\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    uint8_t* _tmp_608 = (uint8_t*) buffer++;
                                    *_tmp_608 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 35;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000810\033[0m| Choice selection: 35";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000811\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    uint8_t* _tmp_609 = (uint8_t*) buffer++;
                                    *_tmp_609 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 36;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000812\033[0m| Choice selection: 36";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000813\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    uint8_t* _tmp_610 = (uint8_t*) buffer++;
                                    *_tmp_610 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 37;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000814\033[0m| Choice selection: 37";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000815\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    uint8_t* _tmp_611 = (uint8_t*) buffer++;
                                    *_tmp_611 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 38;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000816\033[0m| Choice selection: 38";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000817\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    uint8_t* _tmp_612 = (uint8_t*) buffer++;
                                    *_tmp_612 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 39;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000818\033[0m| Choice selection: 39";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000819\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    uint8_t* _tmp_613 = (uint8_t*) buffer++;
                                    *_tmp_613 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 40;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000820\033[0m| Choice selection: 40";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000821\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    uint8_t* _tmp_614 = (uint8_t*) buffer++;
                                    *_tmp_614 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 41;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000822\033[0m| Choice selection: 41";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000823\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    uint8_t* _tmp_615 = (uint8_t*) buffer++;
                                    *_tmp_615 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 42;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000824\033[0m| Choice selection: 42";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000825\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    uint8_t* _tmp_616 = (uint8_t*) buffer++;
                                    *_tmp_616 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 43;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000826\033[0m| Choice selection: 43";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000827\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    uint8_t* _tmp_617 = (uint8_t*) buffer++;
                                    *_tmp_617 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 44;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000828\033[0m| Choice selection: 44";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000829\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    uint8_t* _tmp_618 = (uint8_t*) buffer++;
                                    *_tmp_618 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 45;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000830\033[0m| Choice selection: 45";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000831\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    uint8_t* _tmp_619 = (uint8_t*) buffer++;
                                    *_tmp_619 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 46;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000832\033[0m| Choice selection: 46";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000833\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    uint8_t* _tmp_620 = (uint8_t*) buffer++;
                                    *_tmp_620 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 47;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000834\033[0m| Choice selection: 47";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000835\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    uint8_t* _tmp_621 = (uint8_t*) buffer++;
                                    *_tmp_621 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 48;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000836\033[0m| Choice selection: 48";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000837\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    uint8_t* _tmp_622 = (uint8_t*) buffer++;
                                    *_tmp_622 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 49;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000838\033[0m| Choice selection: 49";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000839\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    uint8_t* _tmp_623 = (uint8_t*) buffer++;
                                    *_tmp_623 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 50;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000840\033[0m| Choice selection: 50";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000841\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    uint8_t* _tmp_624 = (uint8_t*) buffer++;
                                    *_tmp_624 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 51;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000842\033[0m| Choice selection: 51";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000843\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    uint8_t* _tmp_625 = (uint8_t*) buffer++;
                                    *_tmp_625 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 52;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000844\033[0m| Choice selection: 52";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000845\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    uint8_t* _tmp_626 = (uint8_t*) buffer++;
                                    *_tmp_626 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 53;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000846\033[0m| Choice selection: 53";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000847\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    uint8_t* _tmp_627 = (uint8_t*) buffer++;
                                    *_tmp_627 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 54;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000848\033[0m| Choice selection: 54";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000849\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    uint8_t* _tmp_628 = (uint8_t*) buffer++;
                                    *_tmp_628 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 55;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000850\033[0m| Choice selection: 55";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000851\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    uint8_t* _tmp_629 = (uint8_t*) buffer++;
                                    *_tmp_629 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 56;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000852\033[0m| Choice selection: 56";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000853\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    uint8_t* _tmp_630 = (uint8_t*) buffer++;
                                    *_tmp_630 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 57;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000854\033[0m| Choice selection: 57";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000855\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    uint8_t* _tmp_631 = (uint8_t*) buffer++;
                                    *_tmp_631 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 58;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000856\033[0m| Choice selection: 58";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000857\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    uint8_t* _tmp_632 = (uint8_t*) buffer++;
                                    *_tmp_632 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 59;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000858\033[0m| Choice selection: 59";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000859\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    uint8_t* _tmp_633 = (uint8_t*) buffer++;
                                    *_tmp_633 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 60;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000860\033[0m| Choice selection: 60";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000861\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    uint8_t* _tmp_634 = (uint8_t*) buffer++;
                                    *_tmp_634 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 61;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000862\033[0m| Choice selection: 61";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000863\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    uint8_t* _tmp_635 = (uint8_t*) buffer++;
                                    *_tmp_635 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 62;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000864\033[0m| Choice selection: 62";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000865\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    uint8_t* _tmp_636 = (uint8_t*) buffer++;
                                    *_tmp_636 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 63;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000866\033[0m| Choice selection: 63";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000867\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    uint8_t* _tmp_637 = (uint8_t*) buffer++;
                                    *_tmp_637 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 64;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000868\033[0m| Choice selection: 64";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000869\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    uint8_t* _tmp_638 = (uint8_t*) buffer++;
                                    *_tmp_638 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 65;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000870\033[0m| Choice selection: 65";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000871\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    uint8_t* _tmp_639 = (uint8_t*) buffer++;
                                    *_tmp_639 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 66;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000872\033[0m| Choice selection: 66";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000873\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    uint8_t* _tmp_640 = (uint8_t*) buffer++;
                                    *_tmp_640 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 67;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000874\033[0m| Choice selection: 67";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000875\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    uint8_t* _tmp_641 = (uint8_t*) buffer++;
                                    *_tmp_641 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 68;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000876\033[0m| Choice selection: 68";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000877\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    uint8_t* _tmp_642 = (uint8_t*) buffer++;
                                    *_tmp_642 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 69;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000878\033[0m| Choice selection: 69";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000879\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    uint8_t* _tmp_643 = (uint8_t*) buffer++;
                                    *_tmp_643 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 70;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000880\033[0m| Choice selection: 70";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000881\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    uint8_t* _tmp_644 = (uint8_t*) buffer++;
                                    *_tmp_644 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 71;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000882\033[0m| Choice selection: 71";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000883\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    uint8_t* _tmp_645 = (uint8_t*) buffer++;
                                    *_tmp_645 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 72;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000884\033[0m| Choice selection: 72";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000885\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    uint8_t* _tmp_646 = (uint8_t*) buffer++;
                                    *_tmp_646 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 73;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000886\033[0m| Choice selection: 73";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000887\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    uint8_t* _tmp_647 = (uint8_t*) buffer++;
                                    *_tmp_647 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 74;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000888\033[0m| Choice selection: 74";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000889\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    uint8_t* _tmp_648 = (uint8_t*) buffer++;
                                    *_tmp_648 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 75;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000890\033[0m| Choice selection: 75";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000891\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    uint8_t* _tmp_649 = (uint8_t*) buffer++;
                                    *_tmp_649 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 76;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000892\033[0m| Choice selection: 76";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000893\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    uint8_t* _tmp_650 = (uint8_t*) buffer++;
                                    *_tmp_650 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 77;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000894\033[0m| Choice selection: 77";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000895\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    uint8_t* _tmp_651 = (uint8_t*) buffer++;
                                    *_tmp_651 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 78;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000896\033[0m| Choice selection: 78";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000897\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    uint8_t* _tmp_652 = (uint8_t*) buffer++;
                                    *_tmp_652 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 79;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000898\033[0m| Choice selection: 79";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000899\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    uint8_t* _tmp_653 = (uint8_t*) buffer++;
                                    *_tmp_653 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 80;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000900\033[0m| Choice selection: 80";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000901\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    uint8_t* _tmp_654 = (uint8_t*) buffer++;
                                    *_tmp_654 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 81;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000902\033[0m| Choice selection: 81";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000903\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    uint8_t* _tmp_655 = (uint8_t*) buffer++;
                                    *_tmp_655 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 82;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000904\033[0m| Choice selection: 82";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000905\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    uint8_t* _tmp_656 = (uint8_t*) buffer++;
                                    *_tmp_656 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 83;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000906\033[0m| Choice selection: 83";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000907\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    uint8_t* _tmp_657 = (uint8_t*) buffer++;
                                    *_tmp_657 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 84;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000908\033[0m| Choice selection: 84";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000909\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    uint8_t* _tmp_658 = (uint8_t*) buffer++;
                                    *_tmp_658 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 85;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000910\033[0m| Choice selection: 85";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000911\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    uint8_t* _tmp_659 = (uint8_t*) buffer++;
                                    *_tmp_659 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 86;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000912\033[0m| Choice selection: 86";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000913\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    uint8_t* _tmp_660 = (uint8_t*) buffer++;
                                    *_tmp_660 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 87;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000914\033[0m| Choice selection: 87";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000915\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    uint8_t* _tmp_661 = (uint8_t*) buffer++;
                                    *_tmp_661 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 88;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000916\033[0m| Choice selection: 88";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000917\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    uint8_t* _tmp_662 = (uint8_t*) buffer++;
                                    *_tmp_662 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 89;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000918\033[0m| Choice selection: 89";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000919\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    uint8_t* _tmp_663 = (uint8_t*) buffer++;
                                    *_tmp_663 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 90;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000920\033[0m| Choice selection: 90";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000921\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    uint8_t* _tmp_664 = (uint8_t*) buffer++;
                                    *_tmp_664 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 91;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000922\033[0m| Choice selection: 91";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000923\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    uint8_t* _tmp_665 = (uint8_t*) buffer++;
                                    *_tmp_665 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 92;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000924\033[0m| Choice selection: 92";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000925\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    uint8_t* _tmp_666 = (uint8_t*) buffer++;
                                    *_tmp_666 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 93;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000926\033[0m| Choice selection: 93";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000927\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    uint8_t* _tmp_667 = (uint8_t*) buffer++;
                                    *_tmp_667 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 94;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000928\033[0m| Choice selection: 94";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000929\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    uint8_t* _tmp_668 = (uint8_t*) buffer++;
                                    *_tmp_668 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 95;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000930\033[0m| Choice selection: 95";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000931\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    uint8_t* _tmp_669 = (uint8_t*) buffer++;
                                    *_tmp_669 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 96;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000932\033[0m| Choice selection: 96";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000933\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    uint8_t* _tmp_670 = (uint8_t*) buffer++;
                                    *_tmp_670 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 97;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000934\033[0m| Choice selection: 97";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000935\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    uint8_t* _tmp_671 = (uint8_t*) buffer++;
                                    *_tmp_671 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 98;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000936\033[0m| Choice selection: 98";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000937\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    uint8_t* _tmp_672 = (uint8_t*) buffer++;
                                    *_tmp_672 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 99;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000938\033[0m| Choice selection: 99";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000939\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    uint8_t* _tmp_673 = (uint8_t*) buffer++;
                                    *_tmp_673 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 100;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000940\033[0m| Choice selection: 100";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000941\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    uint8_t* _tmp_674 = (uint8_t*) buffer++;
                                    *_tmp_674 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 101;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000942\033[0m| Choice selection: 101";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000943\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    uint8_t* _tmp_675 = (uint8_t*) buffer++;
                                    *_tmp_675 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 102;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000944\033[0m| Choice selection: 102";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000945\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    uint8_t* _tmp_676 = (uint8_t*) buffer++;
                                    *_tmp_676 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 103;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000946\033[0m| Choice selection: 103";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000947\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    uint8_t* _tmp_677 = (uint8_t*) buffer++;
                                    *_tmp_677 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 104;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000948\033[0m| Choice selection: 104";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000949\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    uint8_t* _tmp_678 = (uint8_t*) buffer++;
                                    *_tmp_678 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 105;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000950\033[0m| Choice selection: 105";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000951\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    uint8_t* _tmp_679 = (uint8_t*) buffer++;
                                    *_tmp_679 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 106;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000952\033[0m| Choice selection: 106";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000953\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    uint8_t* _tmp_680 = (uint8_t*) buffer++;
                                    *_tmp_680 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 107;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000954\033[0m| Choice selection: 107";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000955\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    uint8_t* _tmp_681 = (uint8_t*) buffer++;
                                    *_tmp_681 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 108;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000956\033[0m| Choice selection: 108";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000957\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    uint8_t* _tmp_682 = (uint8_t*) buffer++;
                                    *_tmp_682 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 109;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000958\033[0m| Choice selection: 109";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000959\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    uint8_t* _tmp_683 = (uint8_t*) buffer++;
                                    *_tmp_683 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 110;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000960\033[0m| Choice selection: 110";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000961\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    uint8_t* _tmp_684 = (uint8_t*) buffer++;
                                    *_tmp_684 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 111;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000962\033[0m| Choice selection: 111";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000963\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    uint8_t* _tmp_685 = (uint8_t*) buffer++;
                                    *_tmp_685 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 112;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000964\033[0m| Choice selection: 112";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000965\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    uint8_t* _tmp_686 = (uint8_t*) buffer++;
                                    *_tmp_686 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 113;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000966\033[0m| Choice selection: 113";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000967\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    uint8_t* _tmp_687 = (uint8_t*) buffer++;
                                    *_tmp_687 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 114;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000968\033[0m| Choice selection: 114";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000969\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    uint8_t* _tmp_688 = (uint8_t*) buffer++;
                                    *_tmp_688 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 115;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000970\033[0m| Choice selection: 115";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000971\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    uint8_t* _tmp_689 = (uint8_t*) buffer++;
                                    *_tmp_689 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 116;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000972\033[0m| Choice selection: 116";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000973\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    uint8_t* _tmp_690 = (uint8_t*) buffer++;
                                    *_tmp_690 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 117;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000974\033[0m| Choice selection: 117";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000975\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    uint8_t* _tmp_691 = (uint8_t*) buffer++;
                                    *_tmp_691 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 118;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000976\033[0m| Choice selection: 118";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000977\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    uint8_t* _tmp_692 = (uint8_t*) buffer++;
                                    *_tmp_692 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 119;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000978\033[0m| Choice selection: 119";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000979\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    uint8_t* _tmp_693 = (uint8_t*) buffer++;
                                    *_tmp_693 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 120;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000980\033[0m| Choice selection: 120";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000981\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    uint8_t* _tmp_694 = (uint8_t*) buffer++;
                                    *_tmp_694 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 121;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000982\033[0m| Choice selection: 121";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000983\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    uint8_t* _tmp_695 = (uint8_t*) buffer++;
                                    *_tmp_695 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 122;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000984\033[0m| Choice selection: 122";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000985\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    uint8_t* _tmp_696 = (uint8_t*) buffer++;
                                    *_tmp_696 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 123;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000986\033[0m| Choice selection: 123";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000987\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    uint8_t* _tmp_697 = (uint8_t*) buffer++;
                                    *_tmp_697 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 124;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000988\033[0m| Choice selection: 124";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000989\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    uint8_t* _tmp_698 = (uint8_t*) buffer++;
                                    *_tmp_698 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 125;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000990\033[0m| Choice selection: 125";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000991\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    uint8_t* _tmp_699 = (uint8_t*) buffer++;
                                    *_tmp_699 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 126;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000992\033[0m| Choice selection: 126";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000993\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    uint8_t* _tmp_700 = (uint8_t*) buffer++;
                                    *_tmp_700 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 127;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000994\033[0m| Choice selection: 127";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000995\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    uint8_t* _tmp_701 = (uint8_t*) buffer++;
                                    *_tmp_701 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_9 = 128;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m000996\033[0m| Choice selection: 128";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000997\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    uint8_t* _tmp_702 = (uint8_t*) buffer++;
                                    *_tmp_702 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_9) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc'; message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_432) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0) {
                            // Field:  type(ItineraryPath) name(recommended_path) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(40) span(40) ext(false)
                            __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements.size();
                            if(__aux64__ > 40) __aux64__ = 40;
                            uint16_t* _tmp_704 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_704 = __aux64__ - 1;
                            
                            int __ifx = __aux64__;
                            for(int x = 0; x < __ifx; x++) { 
                                
                                    // ReferencePosition  SEQUENCE
                                        //  latitude                  Latitude                 
                                        //  longitude                 Longitude                
                                        //  positionConfidenceEllipse PosConfidenceEllipse     
                                        //  altitude                  Altitude                 
                                    // Optional fields bytemap
                                    
                                    // Field:  type(Latitude) name(latitude) extGroup(0)
                                    // Real
                                    
                                    // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m000999\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value) << 
                                                     " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value;
                                    }
                                    
                                    double _tmp_706 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value;
                                    _tmp_706 *= 1.0E7;
                                    __aux64__ = static_cast<uint64_t>(_tmp_706);
                                    _tmp_706 -= -900000000;
                                    uint32_t* _tmp_705 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_705 = static_cast<uint32_t>(_tmp_706);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(Longitude) name(longitude) extGroup(0)
                                    // Real
                                    
                                    // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001000\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value) << 
                                                     " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value;
                                    }
                                    
                                    double _tmp_708 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value;
                                    _tmp_708 *= 1.0E7;
                                    __aux64__ = static_cast<uint64_t>(_tmp_708);
                                    _tmp_708 -= -1800000000;
                                    uint32_t* _tmp_707 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_707 = static_cast<uint32_t>(_tmp_708);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(PosConfidenceEllipse) name(position_confidence_ellipse) extGroup(0)
                                        // PosConfidenceEllipse  SEQUENCE
                                            //  semiMajorConfidence  SemiAxisLength     
                                            //  semiMinorConfidence  SemiAxisLength     
                                            //  semiMajorOrientation HeadingValue       
                                        // Optional fields bytemap
                                        
                                        // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001001\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value;
                                        }
                                        
                                        float _tmp_710 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value;
                                        _tmp_710 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_710);
                                        uint16_t* _tmp_709 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_709 = static_cast<uint16_t>(_tmp_710);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001002\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value;
                                        }
                                        
                                        float _tmp_712 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value;
                                        _tmp_712 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_712);
                                        uint16_t* _tmp_711 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_711 = static_cast<uint16_t>(_tmp_712);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001003\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value;
                                        }
                                        
                                        float _tmp_714 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value;
                                        _tmp_714 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_714);
                                        uint16_t* _tmp_713 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_713 = static_cast<uint16_t>(_tmp_714);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                            return -1;
                                        }
                                    
                                    // Field:  type(Altitude) name(altitude) extGroup(0)
                                        // Altitude  SEQUENCE
                                            //  altitudeValue      AltitudeValue          
                                            //  altitudeConfidence AltitudeConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(AltitudeValue) name(altitude_value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001004\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value;
                                        }
                                        
                                        float _tmp_716 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value;
                                        _tmp_716 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_716);
                                        _tmp_716 -= -100000;
                                        uint32_t* _tmp_715 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_715 = static_cast<uint32_t>(_tmp_716);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) dataType(Int32)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001005\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_717 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_717 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value; 
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                            return -1;
                                        }
                                    
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0) {
                            // Field:  type(DeltaReferencePosition) name(starting_point_speed_limit) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001006\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                }
                                
                                double _tmp_719 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                _tmp_719 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_719);
                                _tmp_719 -= -131071;
                                uint32_t* _tmp_718 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_718 = static_cast<uint32_t>(_tmp_719);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001007\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                }
                                
                                double _tmp_721 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                _tmp_721 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_721);
                                _tmp_721 -= -131071;
                                uint32_t* _tmp_720 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_720 = static_cast<uint32_t>(_tmp_721);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001008\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                }
                                
                                float _tmp_723 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                _tmp_723 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_723);
                                _tmp_723 -= -12700;
                                uint16_t* _tmp_722 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_722 = static_cast<uint16_t>(_tmp_723);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0) {
                            // Field:  type(TrafficRule) name(traffic_flow_rule) extGroup(0)
                            // Enumerated
                            // INT32  min(0) max(4) span(5) dataType(Int32)
                            uint8_t* _ext_flag_573 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].
                            if(debug) {
                                logger->print() << "|\033[38;5;94m001009\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value) << 
                                             " denm.alacarte[0].road_works[0].traffic_flow_rule[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value);
                            }
                            
                            uint8_t* _tmp_724 = (uint8_t*)buffer;
                            buffer += 1;
                            *_tmp_724 = ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value; 
                            __aux64__ = ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value; 
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 4) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' (" << __aux64__ << ") exceeds max allowable (4); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0) {
                            // Field:  type(ActionIdList) name(reference_denms) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                            uint8_t* _ext_flag_574 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].reference_denms[0].
                            *_ext_flag_574 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements.size();
                            if(__aux64__ > 8) __aux64__ = 8;
                            uint16_t* _tmp_725 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_725 = __aux64__ - 1;
                            
                            int __ify = __aux64__;
                            for(int y = 0; y < __ify; y++) { 
                                
                                    // ActionId  SEQUENCE
                                        //  originatingStationId StationId          
                                        //  sequenceNumber       SequenceNumber     
                                    // Optional fields bytemap
                                    
                                    // Field:  type(StationId) name(originating_station_id) extGroup(0)
                                    // Integer
                                    
                                    // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001011\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value;
                                    }
                                    
                                    uint32_t* _tmp_726 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_726 = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001012\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value;
                                    }
                                    
                                    uint16_t* _tmp_727 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_727 = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                                    
                            }
                        }
                }
                
                if(ros->denm.alacarte[0].positioning_solution.size() != 0) {
                    // Field:  type(PositioningSolutionType) name(positioning_solution) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(6) span(7) dataType(Int32)
                    uint8_t* _ext_flag_577 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].positioning_solution[0].
                    if(debug) {
                        logger->print() << "|\033[38;5;94m001013\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].positioning_solution[0].value) << 
                                     " denm.alacarte[0].positioning_solution[0].value: " << static_cast<int>(ros->denm.alacarte[0].positioning_solution[0].value);
                    }
                    
                    uint8_t* _tmp_728 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_728 = ros->denm.alacarte[0].positioning_solution[0].value; 
                    __aux64__ = ros->denm.alacarte[0].positioning_solution[0].value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 6) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' (" << __aux64__ << ") exceeds max allowable (6); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].stationary_vehicle.size() != 0) {
                    // Field:  type(StationaryVehicleContainer) name(stationary_vehicle) extGroup(0)
                        // StationaryVehicleContainer  SEQUENCE
                            //  stationarySince        StationarySince          OPTIONAL  
                            //  stationaryCause        CauseCodeV2              OPTIONAL  
                            //  carryingDangerousGoods DangerousGoodsExtended   OPTIONAL  
                            //  numberOfOccupants      NumberOfOccupants        OPTIONAL  
                            //  vehicleIdentification  VehicleIdentification    OPTIONAL  
                            //  energyStorageType      EnergyStorageType        OPTIONAL  
                        // Optional fields bytemap
                        char* _tmp_729 = (char*) buffer++;
                        *_tmp_729 = (ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m001014\033[0m| Optional field stationary_since = " << *_tmp_729;
                        char* _tmp_730 = (char*) buffer++;
                        *_tmp_730 = (ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m001015\033[0m| Optional field stationary_cause = " << *_tmp_730;
                        char* _tmp_731 = (char*) buffer++;
                        *_tmp_731 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m001016\033[0m| Optional field carrying_dangerous_goods = " << *_tmp_731;
                        char* _tmp_732 = (char*) buffer++;
                        *_tmp_732 = (ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m001017\033[0m| Optional field number_of_occupants = " << *_tmp_732;
                        char* _tmp_733 = (char*) buffer++;
                        *_tmp_733 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m001018\033[0m| Optional field vehicle_identification = " << *_tmp_733;
                        char* _tmp_734 = (char*) buffer++;
                        *_tmp_734 = (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->print() << "|\033[38;5;94m001019\033[0m| Optional field energy_storage_type = " << *_tmp_734;
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0) {
                            // Field:  type(StationarySince) name(stationary_since) extGroup(0)
                            // Enumerated
                            // INT32  min(0) max(3) span(4) dataType(Int32)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m001020\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value);
                            }
                            
                            uint8_t* _tmp_735 = (uint8_t*)buffer;
                            buffer += 1;
                            *_tmp_735 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value; 
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value; 
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0) {
                            // Field:  type(CauseCodeV2) name(stationary_cause) extGroup(0)
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_579 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                                *_ext_flag_579 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                                // Choice
                                   // #0  reserved0   SubCauseCodeType
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode
                                   // #2  accident2   AccidentSubCauseCode
                                   // #3  roadworks3   RoadworksSubCauseCode
                                   // #4  reserved4   SubCauseCodeType
                                   // #5  impassability5   ImpassabilitySubCauseCode
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                                   // #7  aquaplaning7   SubCauseCodeType
                                   // #8  reserved8   SubCauseCodeType
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                                   // #13  reserved13   SubCauseCodeType
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                                   // #16  reserved16   SubCauseCodeType
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                                   // #20  violence20   SubCauseCodeType
                                   // #21  reserved21   SubCauseCodeType
                                   // #22  reserved22   SubCauseCodeType
                                   // #23  reserved23   SubCauseCodeType
                                   // #24  reserved24   SubCauseCodeType
                                   // #25  reserved25   SubCauseCodeType
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                                   // #29  reserved29   SubCauseCodeType
                                   // #30  reserved30   SubCauseCodeType
                                   // #31  reserved31   SubCauseCodeType
                                   // #32  reserved32   SubCauseCodeType
                                   // #33  reserved33   SubCauseCodeType
                                   // #34  reserved34   SubCauseCodeType
                                   // #35  reserved35   SubCauseCodeType
                                   // #36  reserved36   SubCauseCodeType
                                   // #37  reserved37   SubCauseCodeType
                                   // #38  reserved38   SubCauseCodeType
                                   // #39  reserved39   SubCauseCodeType
                                   // #40  reserved40   SubCauseCodeType
                                   // #41  reserved41   SubCauseCodeType
                                   // #42  reserved42   SubCauseCodeType
                                   // #43  reserved43   SubCauseCodeType
                                   // #44  reserved44   SubCauseCodeType
                                   // #45  reserved45   SubCauseCodeType
                                   // #46  reserved46   SubCauseCodeType
                                   // #47  reserved47   SubCauseCodeType
                                   // #48  reserved48   SubCauseCodeType
                                   // #49  reserved49   SubCauseCodeType
                                   // #50  reserved50   SubCauseCodeType
                                   // #51  reserved51   SubCauseCodeType
                                   // #52  reserved52   SubCauseCodeType
                                   // #53  reserved53   SubCauseCodeType
                                   // #54  reserved54   SubCauseCodeType
                                   // #55  reserved55   SubCauseCodeType
                                   // #56  reserved56   SubCauseCodeType
                                   // #57  reserved57   SubCauseCodeType
                                   // #58  reserved58   SubCauseCodeType
                                   // #59  reserved59   SubCauseCodeType
                                   // #60  reserved60   SubCauseCodeType
                                   // #61  reserved61   SubCauseCodeType
                                   // #62  reserved62   SubCauseCodeType
                                   // #63  reserved63   SubCauseCodeType
                                   // #64  reserved64   SubCauseCodeType
                                   // #65  reserved65   SubCauseCodeType
                                   // #66  reserved66   SubCauseCodeType
                                   // #67  reserved67   SubCauseCodeType
                                   // #68  reserved68   SubCauseCodeType
                                   // #69  reserved69   SubCauseCodeType
                                   // #70  reserved70   SubCauseCodeType
                                   // #71  reserved71   SubCauseCodeType
                                   // #72  reserved72   SubCauseCodeType
                                   // #73  reserved73   SubCauseCodeType
                                   // #74  reserved74   SubCauseCodeType
                                   // #75  reserved75   SubCauseCodeType
                                   // #76  reserved76   SubCauseCodeType
                                   // #77  reserved77   SubCauseCodeType
                                   // #78  reserved78   SubCauseCodeType
                                   // #79  reserved79   SubCauseCodeType
                                   // #80  reserved80   SubCauseCodeType
                                   // #81  reserved81   SubCauseCodeType
                                   // #82  reserved82   SubCauseCodeType
                                   // #83  reserved83   SubCauseCodeType
                                   // #84  reserved84   SubCauseCodeType
                                   // #85  reserved85   SubCauseCodeType
                                   // #86  reserved86   SubCauseCodeType
                                   // #87  reserved87   SubCauseCodeType
                                   // #88  reserved88   SubCauseCodeType
                                   // #89  reserved89   SubCauseCodeType
                                   // #90  reserved90   SubCauseCodeType
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                                   // #92  postCrash92   PostCrashSubCauseCode
                                   // #93  humanProblem93   HumanProblemSubCauseCode
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode
                                   // #98  signalViolation98   SignalViolationSubCauseCode
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                                   // #101  reserved101   SubCauseCodeType
                                   // #102  reserved102   SubCauseCodeType
                                   // #103  reserved103   SubCauseCodeType
                                   // #104  reserved104   SubCauseCodeType
                                   // #105  reserved105   SubCauseCodeType
                                   // #106  reserved106   SubCauseCodeType
                                   // #107  reserved107   SubCauseCodeType
                                   // #108  reserved108   SubCauseCodeType
                                   // #109  reserved109   SubCauseCodeType
                                   // #110  reserved110   SubCauseCodeType
                                   // #111  reserved111   SubCauseCodeType
                                   // #112  reserved112   SubCauseCodeType
                                   // #113  reserved113   SubCauseCodeType
                                   // #114  reserved114   SubCauseCodeType
                                   // #115  reserved115   SubCauseCodeType
                                   // #116  reserved116   SubCauseCodeType
                                   // #117  reserved117   SubCauseCodeType
                                   // #118  reserved118   SubCauseCodeType
                                   // #119  reserved119   SubCauseCodeType
                                   // #120  reserved120   SubCauseCodeType
                                   // #121  reserved121   SubCauseCodeType
                                   // #122  reserved122   SubCauseCodeType
                                   // #123  reserved123   SubCauseCodeType
                                   // #124  reserved124   SubCauseCodeType
                                   // #125  reserved125   SubCauseCodeType
                                   // #126  reserved126   SubCauseCodeType
                                   // #127  reserved127   SubCauseCodeType
                                   // #128  reserved128   SubCauseCodeType
                                uint8_t* _choice_10 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                                    *_choice_10 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001021\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001022\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    uint8_t* _tmp_736 = (uint8_t*) buffer++;
                                    *_tmp_736 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001023\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001024\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    uint8_t* _tmp_737 = (uint8_t*) buffer++;
                                    *_tmp_737 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001025\033[0m| Choice selection: 2";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001026\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    uint8_t* _tmp_738 = (uint8_t*) buffer++;
                                    *_tmp_738 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001027\033[0m| Choice selection: 3";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001028\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    uint8_t* _tmp_739 = (uint8_t*) buffer++;
                                    *_tmp_739 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001029\033[0m| Choice selection: 4";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001030\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    uint8_t* _tmp_740 = (uint8_t*) buffer++;
                                    *_tmp_740 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 5;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001031\033[0m| Choice selection: 5";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001032\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    uint8_t* _tmp_741 = (uint8_t*) buffer++;
                                    *_tmp_741 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 6;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001033\033[0m| Choice selection: 6";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001034\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    uint8_t* _tmp_742 = (uint8_t*) buffer++;
                                    *_tmp_742 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 7;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001035\033[0m| Choice selection: 7";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001036\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    uint8_t* _tmp_743 = (uint8_t*) buffer++;
                                    *_tmp_743 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 8;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001037\033[0m| Choice selection: 8";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001038\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    uint8_t* _tmp_744 = (uint8_t*) buffer++;
                                    *_tmp_744 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 9;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001039\033[0m| Choice selection: 9";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001040\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    uint8_t* _tmp_745 = (uint8_t*) buffer++;
                                    *_tmp_745 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 10;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001041\033[0m| Choice selection: 10";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001042\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    uint8_t* _tmp_746 = (uint8_t*) buffer++;
                                    *_tmp_746 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 11;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001043\033[0m| Choice selection: 11";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001044\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    uint8_t* _tmp_747 = (uint8_t*) buffer++;
                                    *_tmp_747 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 12;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001045\033[0m| Choice selection: 12";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001046\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    uint8_t* _tmp_748 = (uint8_t*) buffer++;
                                    *_tmp_748 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 13;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001047\033[0m| Choice selection: 13";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001048\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    uint8_t* _tmp_749 = (uint8_t*) buffer++;
                                    *_tmp_749 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 14;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001049\033[0m| Choice selection: 14";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001050\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    uint8_t* _tmp_750 = (uint8_t*) buffer++;
                                    *_tmp_750 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 15;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001051\033[0m| Choice selection: 15";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001052\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    uint8_t* _tmp_751 = (uint8_t*) buffer++;
                                    *_tmp_751 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 16;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001053\033[0m| Choice selection: 16";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001054\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    uint8_t* _tmp_752 = (uint8_t*) buffer++;
                                    *_tmp_752 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 17;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001055\033[0m| Choice selection: 17";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001056\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    uint8_t* _tmp_753 = (uint8_t*) buffer++;
                                    *_tmp_753 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 18;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001057\033[0m| Choice selection: 18";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001058\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    uint8_t* _tmp_754 = (uint8_t*) buffer++;
                                    *_tmp_754 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 19;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001059\033[0m| Choice selection: 19";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001060\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    uint8_t* _tmp_755 = (uint8_t*) buffer++;
                                    *_tmp_755 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 20;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001061\033[0m| Choice selection: 20";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001062\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    uint8_t* _tmp_756 = (uint8_t*) buffer++;
                                    *_tmp_756 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 21;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001063\033[0m| Choice selection: 21";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001064\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    uint8_t* _tmp_757 = (uint8_t*) buffer++;
                                    *_tmp_757 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 22;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001065\033[0m| Choice selection: 22";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001066\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    uint8_t* _tmp_758 = (uint8_t*) buffer++;
                                    *_tmp_758 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 23;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001067\033[0m| Choice selection: 23";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001068\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    uint8_t* _tmp_759 = (uint8_t*) buffer++;
                                    *_tmp_759 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 24;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001069\033[0m| Choice selection: 24";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001070\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    uint8_t* _tmp_760 = (uint8_t*) buffer++;
                                    *_tmp_760 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 25;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001071\033[0m| Choice selection: 25";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001072\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    uint8_t* _tmp_761 = (uint8_t*) buffer++;
                                    *_tmp_761 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 26;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001073\033[0m| Choice selection: 26";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001074\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    uint8_t* _tmp_762 = (uint8_t*) buffer++;
                                    *_tmp_762 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 27;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001075\033[0m| Choice selection: 27";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001076\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    uint8_t* _tmp_763 = (uint8_t*) buffer++;
                                    *_tmp_763 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 28;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001077\033[0m| Choice selection: 28";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001078\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    uint8_t* _tmp_764 = (uint8_t*) buffer++;
                                    *_tmp_764 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 29;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001079\033[0m| Choice selection: 29";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001080\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    uint8_t* _tmp_765 = (uint8_t*) buffer++;
                                    *_tmp_765 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 30;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001081\033[0m| Choice selection: 30";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001082\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    uint8_t* _tmp_766 = (uint8_t*) buffer++;
                                    *_tmp_766 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 31;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001083\033[0m| Choice selection: 31";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001084\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    uint8_t* _tmp_767 = (uint8_t*) buffer++;
                                    *_tmp_767 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 32;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001085\033[0m| Choice selection: 32";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001086\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    uint8_t* _tmp_768 = (uint8_t*) buffer++;
                                    *_tmp_768 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 33;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001087\033[0m| Choice selection: 33";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001088\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    uint8_t* _tmp_769 = (uint8_t*) buffer++;
                                    *_tmp_769 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 34;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001089\033[0m| Choice selection: 34";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001090\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    uint8_t* _tmp_770 = (uint8_t*) buffer++;
                                    *_tmp_770 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 35;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001091\033[0m| Choice selection: 35";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001092\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    uint8_t* _tmp_771 = (uint8_t*) buffer++;
                                    *_tmp_771 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 36;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001093\033[0m| Choice selection: 36";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001094\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    uint8_t* _tmp_772 = (uint8_t*) buffer++;
                                    *_tmp_772 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 37;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001095\033[0m| Choice selection: 37";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001096\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    uint8_t* _tmp_773 = (uint8_t*) buffer++;
                                    *_tmp_773 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 38;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001097\033[0m| Choice selection: 38";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001098\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    uint8_t* _tmp_774 = (uint8_t*) buffer++;
                                    *_tmp_774 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 39;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001099\033[0m| Choice selection: 39";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001100\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    uint8_t* _tmp_775 = (uint8_t*) buffer++;
                                    *_tmp_775 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 40;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001101\033[0m| Choice selection: 40";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001102\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    uint8_t* _tmp_776 = (uint8_t*) buffer++;
                                    *_tmp_776 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 41;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001103\033[0m| Choice selection: 41";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001104\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    uint8_t* _tmp_777 = (uint8_t*) buffer++;
                                    *_tmp_777 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 42;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001105\033[0m| Choice selection: 42";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001106\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    uint8_t* _tmp_778 = (uint8_t*) buffer++;
                                    *_tmp_778 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 43;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001107\033[0m| Choice selection: 43";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001108\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    uint8_t* _tmp_779 = (uint8_t*) buffer++;
                                    *_tmp_779 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 44;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001109\033[0m| Choice selection: 44";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001110\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    uint8_t* _tmp_780 = (uint8_t*) buffer++;
                                    *_tmp_780 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 45;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001111\033[0m| Choice selection: 45";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001112\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    uint8_t* _tmp_781 = (uint8_t*) buffer++;
                                    *_tmp_781 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 46;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001113\033[0m| Choice selection: 46";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001114\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    uint8_t* _tmp_782 = (uint8_t*) buffer++;
                                    *_tmp_782 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 47;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001115\033[0m| Choice selection: 47";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001116\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    uint8_t* _tmp_783 = (uint8_t*) buffer++;
                                    *_tmp_783 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 48;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001117\033[0m| Choice selection: 48";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001118\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    uint8_t* _tmp_784 = (uint8_t*) buffer++;
                                    *_tmp_784 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 49;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001119\033[0m| Choice selection: 49";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001120\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    uint8_t* _tmp_785 = (uint8_t*) buffer++;
                                    *_tmp_785 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 50;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001121\033[0m| Choice selection: 50";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001122\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    uint8_t* _tmp_786 = (uint8_t*) buffer++;
                                    *_tmp_786 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 51;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001123\033[0m| Choice selection: 51";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001124\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    uint8_t* _tmp_787 = (uint8_t*) buffer++;
                                    *_tmp_787 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 52;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001125\033[0m| Choice selection: 52";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001126\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    uint8_t* _tmp_788 = (uint8_t*) buffer++;
                                    *_tmp_788 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 53;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001127\033[0m| Choice selection: 53";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001128\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    uint8_t* _tmp_789 = (uint8_t*) buffer++;
                                    *_tmp_789 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 54;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001129\033[0m| Choice selection: 54";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001130\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    uint8_t* _tmp_790 = (uint8_t*) buffer++;
                                    *_tmp_790 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 55;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001131\033[0m| Choice selection: 55";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001132\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    uint8_t* _tmp_791 = (uint8_t*) buffer++;
                                    *_tmp_791 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 56;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001133\033[0m| Choice selection: 56";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001134\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    uint8_t* _tmp_792 = (uint8_t*) buffer++;
                                    *_tmp_792 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 57;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001135\033[0m| Choice selection: 57";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001136\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    uint8_t* _tmp_793 = (uint8_t*) buffer++;
                                    *_tmp_793 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 58;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001137\033[0m| Choice selection: 58";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001138\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    uint8_t* _tmp_794 = (uint8_t*) buffer++;
                                    *_tmp_794 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 59;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001139\033[0m| Choice selection: 59";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001140\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    uint8_t* _tmp_795 = (uint8_t*) buffer++;
                                    *_tmp_795 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 60;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001141\033[0m| Choice selection: 60";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001142\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    uint8_t* _tmp_796 = (uint8_t*) buffer++;
                                    *_tmp_796 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 61;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001143\033[0m| Choice selection: 61";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001144\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    uint8_t* _tmp_797 = (uint8_t*) buffer++;
                                    *_tmp_797 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 62;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001145\033[0m| Choice selection: 62";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001146\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    uint8_t* _tmp_798 = (uint8_t*) buffer++;
                                    *_tmp_798 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 63;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001147\033[0m| Choice selection: 63";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001148\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    uint8_t* _tmp_799 = (uint8_t*) buffer++;
                                    *_tmp_799 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 64;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001149\033[0m| Choice selection: 64";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001150\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    uint8_t* _tmp_800 = (uint8_t*) buffer++;
                                    *_tmp_800 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 65;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001151\033[0m| Choice selection: 65";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001152\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    uint8_t* _tmp_801 = (uint8_t*) buffer++;
                                    *_tmp_801 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 66;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001153\033[0m| Choice selection: 66";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001154\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    uint8_t* _tmp_802 = (uint8_t*) buffer++;
                                    *_tmp_802 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 67;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001155\033[0m| Choice selection: 67";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001156\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    uint8_t* _tmp_803 = (uint8_t*) buffer++;
                                    *_tmp_803 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 68;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001157\033[0m| Choice selection: 68";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001158\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    uint8_t* _tmp_804 = (uint8_t*) buffer++;
                                    *_tmp_804 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 69;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001159\033[0m| Choice selection: 69";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001160\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    uint8_t* _tmp_805 = (uint8_t*) buffer++;
                                    *_tmp_805 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 70;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001161\033[0m| Choice selection: 70";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001162\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    uint8_t* _tmp_806 = (uint8_t*) buffer++;
                                    *_tmp_806 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 71;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001163\033[0m| Choice selection: 71";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001164\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    uint8_t* _tmp_807 = (uint8_t*) buffer++;
                                    *_tmp_807 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 72;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001165\033[0m| Choice selection: 72";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001166\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    uint8_t* _tmp_808 = (uint8_t*) buffer++;
                                    *_tmp_808 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 73;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001167\033[0m| Choice selection: 73";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001168\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    uint8_t* _tmp_809 = (uint8_t*) buffer++;
                                    *_tmp_809 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 74;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001169\033[0m| Choice selection: 74";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001170\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    uint8_t* _tmp_810 = (uint8_t*) buffer++;
                                    *_tmp_810 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 75;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001171\033[0m| Choice selection: 75";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001172\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    uint8_t* _tmp_811 = (uint8_t*) buffer++;
                                    *_tmp_811 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 76;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001173\033[0m| Choice selection: 76";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001174\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    uint8_t* _tmp_812 = (uint8_t*) buffer++;
                                    *_tmp_812 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 77;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001175\033[0m| Choice selection: 77";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001176\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    uint8_t* _tmp_813 = (uint8_t*) buffer++;
                                    *_tmp_813 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 78;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001177\033[0m| Choice selection: 78";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001178\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    uint8_t* _tmp_814 = (uint8_t*) buffer++;
                                    *_tmp_814 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 79;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001179\033[0m| Choice selection: 79";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001180\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    uint8_t* _tmp_815 = (uint8_t*) buffer++;
                                    *_tmp_815 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 80;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001181\033[0m| Choice selection: 80";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001182\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    uint8_t* _tmp_816 = (uint8_t*) buffer++;
                                    *_tmp_816 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 81;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001183\033[0m| Choice selection: 81";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001184\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    uint8_t* _tmp_817 = (uint8_t*) buffer++;
                                    *_tmp_817 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 82;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001185\033[0m| Choice selection: 82";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001186\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    uint8_t* _tmp_818 = (uint8_t*) buffer++;
                                    *_tmp_818 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 83;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001187\033[0m| Choice selection: 83";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001188\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    uint8_t* _tmp_819 = (uint8_t*) buffer++;
                                    *_tmp_819 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 84;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001189\033[0m| Choice selection: 84";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001190\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    uint8_t* _tmp_820 = (uint8_t*) buffer++;
                                    *_tmp_820 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 85;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001191\033[0m| Choice selection: 85";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001192\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    uint8_t* _tmp_821 = (uint8_t*) buffer++;
                                    *_tmp_821 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 86;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001193\033[0m| Choice selection: 86";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001194\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    uint8_t* _tmp_822 = (uint8_t*) buffer++;
                                    *_tmp_822 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 87;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001195\033[0m| Choice selection: 87";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001196\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    uint8_t* _tmp_823 = (uint8_t*) buffer++;
                                    *_tmp_823 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 88;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001197\033[0m| Choice selection: 88";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001198\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    uint8_t* _tmp_824 = (uint8_t*) buffer++;
                                    *_tmp_824 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 89;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001199\033[0m| Choice selection: 89";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001200\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    uint8_t* _tmp_825 = (uint8_t*) buffer++;
                                    *_tmp_825 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 90;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001201\033[0m| Choice selection: 90";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001202\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    uint8_t* _tmp_826 = (uint8_t*) buffer++;
                                    *_tmp_826 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 91;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001203\033[0m| Choice selection: 91";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001204\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    uint8_t* _tmp_827 = (uint8_t*) buffer++;
                                    *_tmp_827 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 92;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001205\033[0m| Choice selection: 92";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001206\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    uint8_t* _tmp_828 = (uint8_t*) buffer++;
                                    *_tmp_828 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 93;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001207\033[0m| Choice selection: 93";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001208\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    uint8_t* _tmp_829 = (uint8_t*) buffer++;
                                    *_tmp_829 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 94;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001209\033[0m| Choice selection: 94";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001210\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    uint8_t* _tmp_830 = (uint8_t*) buffer++;
                                    *_tmp_830 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 95;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001211\033[0m| Choice selection: 95";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001212\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    uint8_t* _tmp_831 = (uint8_t*) buffer++;
                                    *_tmp_831 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 96;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001213\033[0m| Choice selection: 96";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001214\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    uint8_t* _tmp_832 = (uint8_t*) buffer++;
                                    *_tmp_832 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 97;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001215\033[0m| Choice selection: 97";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001216\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    uint8_t* _tmp_833 = (uint8_t*) buffer++;
                                    *_tmp_833 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 98;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001217\033[0m| Choice selection: 98";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001218\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    uint8_t* _tmp_834 = (uint8_t*) buffer++;
                                    *_tmp_834 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 99;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001219\033[0m| Choice selection: 99";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001220\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    uint8_t* _tmp_835 = (uint8_t*) buffer++;
                                    *_tmp_835 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 100;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001221\033[0m| Choice selection: 100";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001222\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    uint8_t* _tmp_836 = (uint8_t*) buffer++;
                                    *_tmp_836 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 101;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001223\033[0m| Choice selection: 101";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001224\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    uint8_t* _tmp_837 = (uint8_t*) buffer++;
                                    *_tmp_837 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 102;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001225\033[0m| Choice selection: 102";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001226\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    uint8_t* _tmp_838 = (uint8_t*) buffer++;
                                    *_tmp_838 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 103;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001227\033[0m| Choice selection: 103";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001228\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    uint8_t* _tmp_839 = (uint8_t*) buffer++;
                                    *_tmp_839 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 104;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001229\033[0m| Choice selection: 104";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001230\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    uint8_t* _tmp_840 = (uint8_t*) buffer++;
                                    *_tmp_840 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 105;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001231\033[0m| Choice selection: 105";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001232\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    uint8_t* _tmp_841 = (uint8_t*) buffer++;
                                    *_tmp_841 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 106;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001233\033[0m| Choice selection: 106";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001234\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    uint8_t* _tmp_842 = (uint8_t*) buffer++;
                                    *_tmp_842 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 107;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001235\033[0m| Choice selection: 107";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001236\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    uint8_t* _tmp_843 = (uint8_t*) buffer++;
                                    *_tmp_843 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 108;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001237\033[0m| Choice selection: 108";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001238\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    uint8_t* _tmp_844 = (uint8_t*) buffer++;
                                    *_tmp_844 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 109;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001239\033[0m| Choice selection: 109";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001240\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    uint8_t* _tmp_845 = (uint8_t*) buffer++;
                                    *_tmp_845 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 110;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001241\033[0m| Choice selection: 110";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001242\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    uint8_t* _tmp_846 = (uint8_t*) buffer++;
                                    *_tmp_846 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 111;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001243\033[0m| Choice selection: 111";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001244\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    uint8_t* _tmp_847 = (uint8_t*) buffer++;
                                    *_tmp_847 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 112;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001245\033[0m| Choice selection: 112";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001246\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    uint8_t* _tmp_848 = (uint8_t*) buffer++;
                                    *_tmp_848 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 113;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001247\033[0m| Choice selection: 113";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001248\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    uint8_t* _tmp_849 = (uint8_t*) buffer++;
                                    *_tmp_849 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 114;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001249\033[0m| Choice selection: 114";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001250\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    uint8_t* _tmp_850 = (uint8_t*) buffer++;
                                    *_tmp_850 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 115;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001251\033[0m| Choice selection: 115";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001252\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    uint8_t* _tmp_851 = (uint8_t*) buffer++;
                                    *_tmp_851 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 116;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001253\033[0m| Choice selection: 116";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001254\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    uint8_t* _tmp_852 = (uint8_t*) buffer++;
                                    *_tmp_852 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 117;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001255\033[0m| Choice selection: 117";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001256\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    uint8_t* _tmp_853 = (uint8_t*) buffer++;
                                    *_tmp_853 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 118;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001257\033[0m| Choice selection: 118";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001258\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    uint8_t* _tmp_854 = (uint8_t*) buffer++;
                                    *_tmp_854 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 119;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001259\033[0m| Choice selection: 119";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001260\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    uint8_t* _tmp_855 = (uint8_t*) buffer++;
                                    *_tmp_855 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 120;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001261\033[0m| Choice selection: 120";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001262\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    uint8_t* _tmp_856 = (uint8_t*) buffer++;
                                    *_tmp_856 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 121;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001263\033[0m| Choice selection: 121";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001264\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    uint8_t* _tmp_857 = (uint8_t*) buffer++;
                                    *_tmp_857 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 122;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001265\033[0m| Choice selection: 122";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001266\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    uint8_t* _tmp_858 = (uint8_t*) buffer++;
                                    *_tmp_858 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 123;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001267\033[0m| Choice selection: 123";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001268\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    uint8_t* _tmp_859 = (uint8_t*) buffer++;
                                    *_tmp_859 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 124;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001269\033[0m| Choice selection: 124";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001270\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    uint8_t* _tmp_860 = (uint8_t*) buffer++;
                                    *_tmp_860 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 125;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001271\033[0m| Choice selection: 125";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001272\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    uint8_t* _tmp_861 = (uint8_t*) buffer++;
                                    *_tmp_861 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 126;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001273\033[0m| Choice selection: 126";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001274\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    uint8_t* _tmp_862 = (uint8_t*) buffer++;
                                    *_tmp_862 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 127;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001275\033[0m| Choice selection: 127";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001276\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    uint8_t* _tmp_863 = (uint8_t*) buffer++;
                                    *_tmp_863 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_10 = 128;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001277\033[0m| Choice selection: 128";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001278\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    uint8_t* _tmp_864 = (uint8_t*) buffer++;
                                    *_tmp_864 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_10) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc'; message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_579) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0) {
                            // Field:  type(DangerousGoodsExtended) name(carrying_dangerous_goods) extGroup(0)
                                // DangerousGoodsExtended  SEQUENCE
                                    //  dangerousGoodsType  DangerousGoodsBasic                            
                                    //  unNumber            DangerousGoodsExtended_unNumber                
                                    //  elevatedTemperature DangerousGoodsExtended_elevatedTemperature     
                                    //  tunnelsRestricted   DangerousGoodsExtended_tunnelsRestricted       
                                    //  limitedQuantity     DangerousGoodsExtended_limitedQuantity         
                                    //  emergencyActionCode DangerousGoodsExtended_emergencyActionCode   OPTIONAL  
                                    //  phoneNumber         PhoneNumber                                  OPTIONAL  
                                    //  companyName         DangerousGoodsExtended_companyName           OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_710 = (uint8_t*) buffer++;  // Write extension flag for DangerousGoodsExtended
                                *_ext_flag_710 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_866 = (char*) buffer++;
                                *_tmp_866 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001279\033[0m| Optional field emergency_action_code = " << *_tmp_866;
                                char* _tmp_867 = (char*) buffer++;
                                *_tmp_867 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001280\033[0m| Optional field phone_number = " << *_tmp_867;
                                char* _tmp_868 = (char*) buffer++;
                                *_tmp_868 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001281\033[0m| Optional field company_name = " << *_tmp_868;
                                
                                // Field:  type(DangerousGoodsBasic) name(dangerous_goods_type) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(19) span(20) dataType(Int32)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001282\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value);
                                }
                                
                                uint8_t* _tmp_869 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_869 = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value; 
                                __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 19) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' (" << __aux64__ << ") exceeds max allowable (19); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DangerousGoodsExtended_unNumber) name(un_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(0) max(9999) span(10000) dataType(UInt16)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001283\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value: " << ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                }
                                
                                uint16_t* _tmp_870 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_870 = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value; 
                                __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 9999) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' (" << __aux64__ << ") exceeds max allowable (9999); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DangerousGoodsExtended_elevatedTemperature) name(elevated_temperature) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_871 = (uint8_t*)buffer++;
                                *_tmp_871 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature.value ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001284\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature: " << (*_tmp_871);
                                
                                // Field:  type(DangerousGoodsExtended_tunnelsRestricted) name(tunnels_restricted) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_872 = (uint8_t*)buffer++;
                                *_tmp_872 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted.value ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001285\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted: " << (*_tmp_872);
                                
                                // Field:  type(DangerousGoodsExtended_limitedQuantity) name(limited_quantity) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_873 = (uint8_t*)buffer++;
                                *_tmp_873 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity.value ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001286\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity: " << (*_tmp_873);
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0) {
                                    // Field:  type(DangerousGoodsExtended_emergencyActionCode) name(emergency_action_code) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_874 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size() > 24) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value) << " exceeds max allowable (24); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001287\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size());
                                    
                                    if(__aux64__ > 24) __aux64__ = 24;
                                    *_tmp_874 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifz = __aux64__;
                                    for(int z = 0; z < __ifz; z++) {  // 24
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.c_str()[z];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0) {
                                    // Field:  type(PhoneNumber) name(phone_number) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(16) span(16)
                                    uint8_t* _tmp_875 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value) << " exceeds max allowable (16); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001288\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size());
                                    
                                    if(__aux64__ > 16) __aux64__ = 16;
                                    *_tmp_875 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifa = __aux64__;
                                    for(int a = 0; a < __ifa; a++) {  // 16
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.c_str()[a];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0) {
                                    // Field:  type(DangerousGoodsExtended_companyName) name(company_name) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_876 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size() > 24) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value) << " exceeds max allowable (24); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001289\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size());
                                    
                                    if(__aux64__ > 24) __aux64__ = 24;
                                    *_tmp_876 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifb = __aux64__;
                                    for(int b = 0; b < __ifb; b++) {  // 24
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.c_str()[b];
                                    }
                                }
                                
                                if(*_ext_flag_710) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0) {
                            // Field:  type(NumberOfOccupants) name(number_of_occupants) extGroup(0)
                            // Integer
                            
                            // UINT8  min(0) max(127) span(128) dataType(UInt8)
                            if(debug) {
                                logger->print() << "|\033[38;5;94m001290\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value);
                            }
                            
                            uint8_t* _tmp_878 = (uint8_t*) buffer++;
                            *_tmp_878 = ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value; 
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0) {
                            // Field:  type(VehicleIdentification) name(vehicle_identification) extGroup(0)
                                // VehicleIdentification  SEQUENCE
                                    //  wMInumber  WMInumber    OPTIONAL  
                                    //  vDS        VDS          OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_714 = (uint8_t*) buffer++;  // Write extension flag for VehicleIdentification
                                *_ext_flag_714 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_879 = (char*) buffer++;
                                *_tmp_879 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001291\033[0m| Optional field w_m_inumber = " << *_tmp_879;
                                char* _tmp_880 = (char*) buffer++;
                                *_tmp_880 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001292\033[0m| Optional field v_ds = " << *_tmp_880;
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0) {
                                    // Field:  type(WMInumber) name(w_m_inumber) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(3) span(3)
                                    uint8_t* _tmp_881 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size() > 3) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value) << " exceeds max allowable (3); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001293\033[0m| denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size());
                                    
                                    if(__aux64__ > 3) __aux64__ = 3;
                                    *_tmp_881 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifc = __aux64__;
                                    for(int c = 0; c < __ifc; c++) {  // 3
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.c_str()[c];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0) {
                                    // Field:  type(VDS) name(v_ds) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(6) max(6) span(1)
                                    uint8_t* _tmp_882 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size() < 6) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value) << " is less than allowable (6); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size() > 6) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value) << " exceeds max allowable (6); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001294\033[0m| denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size());
                                    
                                    if(__aux64__ > 6) __aux64__ = 6;
                                    *_tmp_882 = __aux64__ - 6;
                                    buffer += 1;
                                    
                                    int __ifd = __aux64__;
                                    for(int d = 0; d < __ifd; d++) {  // 6
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.c_str()[d];
                                    }
                                }
                                
                                if(*_ext_flag_714) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0) {
                            // Field:  type(EnergyStorageType) name(energy_storage_type) extGroup(0)
                            // BitString
                            // BIT_STRING  min(7) max(7) span(1)
                            if(debug)
                                logger->print() << "|\033[38;5;94m001295\033[0m| denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size());
                            
                            if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size() < 7) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size()) << " is less than allowable (7); message dropped.";
                                return -1;
                            }
                            if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size() > 7) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size()) << " exceeds max allowable (7); message dropped.";
                                return -1;
                            }
                            
                            uint8_t* _tmp_884 = (uint8_t*)buffer;
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size();
                            if(__aux64__ > 7) __aux64__ = 7;
                            *_tmp_884 = __aux64__ - 7;
                            buffer += 1;
                            
                            int __ife = __aux64__;
                            for(int e = 0; e < __ife; e++) {
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                *__b__ = (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values[e]? 1: 0);
                            }
                        }
                }
                
                if(*_ext_flag_411) {
                    // Write number of extensions 
                    uint8_t* _tmp_885 = (uint8_t*) buffer++;
                    *_tmp_885 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_886 = (uint8_t*) buffer++;
                    *_tmp_886 = (ros->denm.alacarte[0].road_configuration.size() != 0 || ros->denm.alacarte[0].precrash.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_887_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_888_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_889 = (uint8_t*)buffer++;
                    *_tmp_889 = (ros->denm.alacarte[0].road_configuration.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_890 = (uint8_t*)buffer++;
                    *_tmp_890 = (ros->denm.alacarte[0].precrash.size() != 0 ? 1: 0);
                    
                    if(ros->denm.alacarte[0].road_configuration.size() != 0) {
                        // Field:  type(RoadConfigurationContainer) name(road_configuration) extGroup(1)
                            // RoadConfigurationContainer  SEQUENCE
                                //  roadConfigurationConfidence  MetaInformation                  
                                //  roadConfigurationSectionList RoadConfigurationSectionList     
                                //  ...
                            uint8_t* _ext_flag_715 = (uint8_t*) buffer++;  // Write extension flag for RoadConfigurationContainer
                            *_ext_flag_715 = 0;  
                            
                            // Optional fields bytemap
                            
                            // Field:  type(MetaInformation) name(road_configuration_confidence) extGroup(0)
                                // MetaInformation  SEQUENCE
                                    //  usedDetectionInformation SensorTypes               
                                    //  usedStoredInformation    StoredInformationType     
                                    //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_716 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                *_ext_flag_716 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_891 = (char*) buffer++;
                                *_tmp_891 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001296\033[0m| Optional field confidence_value = " << *_tmp_891;
                                
                                // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(16) max(16) span(1)
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001297\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size());
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size() < 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_717 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.
                                *_ext_flag_717 = 0; 
                                
                                uint8_t* _tmp_892 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                *_tmp_892 = __aux64__ - 16;
                                buffer += 1;
                                
                                int __iff = __aux64__;
                                for(int f = 0; f < __iff; f++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values[f]? 1: 0);
                                }
                                
                                // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(1) max(168) span(168)
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001298\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size());
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size() < 1) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size() > 168) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_718 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.
                                *_ext_flag_718 = 0; 
                                
                                uint8_t* _tmp_893 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size();
                                if(__aux64__ > 168) __aux64__ = 168;
                                *_tmp_893 = __aux64__ - 1;
                                buffer += 1;
                                
                                int __ifg = __aux64__;
                                for(int g = 0; g < __ifg; g++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values[g]? 1: 0);
                                }
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0) {
                                    // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001299\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value) << 
                                                     " denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value);
                                    }
                                    
                                    uint8_t* _tmp_894 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value - 1;
                                    *_tmp_894 = __aux64__;
                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(*_ext_flag_716) {
                                }
                            
                            // Field:  type(RoadConfigurationSectionList) name(road_configuration_section_list) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                            uint8_t* _ext_flag_720 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.
                            *_ext_flag_720 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements.size();
                            if(__aux64__ > 8) __aux64__ = 8;
                            uint16_t* _tmp_896 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_896 = __aux64__ - 1;
                            
                            int __ifh = __aux64__;
                            for(int h = 0; h < __ifh; h++) { 
                                
                                    // RoadConfigurationSection  SEQUENCE
                                        //  roadSectionDefinition RoadSectionDefinition      
                                        //  roadType              RoadType                 OPTIONAL  
                                        //  laneConfiguration     BasicLaneConfiguration   OPTIONAL  
                                        //  mapemConfiguration    MapemConfiguration       OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_721 = (uint8_t*) buffer++;  // Write extension flag for RoadConfigurationSection
                                    *_ext_flag_721 = 0;  
                                    
                                    // Optional fields bytemap
                                    char* _tmp_897 = (char*) buffer++;
                                    *_tmp_897 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001301\033[0m| Optional field road_type = " << *_tmp_897;
                                    char* _tmp_898 = (char*) buffer++;
                                    *_tmp_898 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001302\033[0m| Optional field lane_configuration = " << *_tmp_898;
                                    char* _tmp_899 = (char*) buffer++;
                                    *_tmp_899 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001303\033[0m| Optional field mapem_configuration = " << *_tmp_899;
                                    
                                    // Field:  type(RoadSectionDefinition) name(road_section_definition) extGroup(0)
                                        // RoadSectionDefinition  SEQUENCE
                                            //  startingPointSection GeoPosition                                    
                                            //  lengthOfSection      StandardLength2B                             OPTIONAL  
                                            //  endingPointSection   GeoPosition                                  OPTIONAL  
                                            //  connectedPaths       PathReferences                                 
                                            //  includedPaths        PathReferences                                 
                                            //  isEventZoneIncluded  RoadSectionDefinition_isEventZoneIncluded      
                                            //  isEventZoneConnected RoadSectionDefinition_isEventZoneConnected     
                                            //  ...
                                        uint8_t* _ext_flag_722 = (uint8_t*) buffer++;  // Write extension flag for RoadSectionDefinition
                                        *_ext_flag_722 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_900 = (char*) buffer++;
                                        *_tmp_900 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001304\033[0m| Optional field length_of_section = " << *_tmp_900;
                                        char* _tmp_901 = (char*) buffer++;
                                        *_tmp_901 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001305\033[0m| Optional field ending_point_section = " << *_tmp_901;
                                        
                                        // Field:  type(GeoPosition) name(starting_point_section) extGroup(0)
                                            // GeoPosition  SEQUENCE
                                                //  latitude   Latitude          
                                                //  longitude  Longitude         
                                                //  altitude   AltitudeValue     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(Latitude) name(latitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001306\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value;
                                            }
                                            
                                            double _tmp_903 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value;
                                            _tmp_903 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_903);
                                            _tmp_903 -= -900000000;
                                            uint32_t* _tmp_902 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_902 = static_cast<uint32_t>(_tmp_903);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Longitude) name(longitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001307\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value;
                                            }
                                            
                                            double _tmp_905 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value;
                                            _tmp_905 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_905);
                                            _tmp_905 -= -1800000000;
                                            uint32_t* _tmp_904 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_904 = static_cast<uint32_t>(_tmp_905);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(AltitudeValue) name(altitude) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001308\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value;
                                            }
                                            
                                            float _tmp_907 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value;
                                            _tmp_907 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_907);
                                            _tmp_907 -= -100000;
                                            uint32_t* _tmp_906 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_906 = static_cast<uint32_t>(_tmp_907);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section.size() != 0) {
                                            // Field:  type(StandardLength2B) name(length_of_section) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(65535) span(65536) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001309\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value;
                                            }
                                            
                                            float _tmp_909 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value;
                                            _tmp_909 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_909);
                                            uint16_t* _tmp_908 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_908 = static_cast<uint16_t>(_tmp_909);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section.size() != 0) {
                                            // Field:  type(GeoPosition) name(ending_point_section) extGroup(0)
                                                // GeoPosition  SEQUENCE
                                                    //  latitude   Latitude          
                                                    //  longitude  Longitude         
                                                    //  altitude   AltitudeValue     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(Latitude) name(latitude) extGroup(0)
                                                // Real
                                                
                                                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001310\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value;
                                                }
                                                
                                                double _tmp_911 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value;
                                                _tmp_911 *= 1.0E7;
                                                __aux64__ = static_cast<uint64_t>(_tmp_911);
                                                _tmp_911 -= -900000000;
                                                uint32_t* _tmp_910 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_910 = static_cast<uint32_t>(_tmp_911);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(Longitude) name(longitude) extGroup(0)
                                                // Real
                                                
                                                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001311\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value;
                                                }
                                                
                                                double _tmp_913 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value;
                                                _tmp_913 *= 1.0E7;
                                                __aux64__ = static_cast<uint64_t>(_tmp_913);
                                                _tmp_913 -= -1800000000;
                                                uint32_t* _tmp_912 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_912 = static_cast<uint32_t>(_tmp_913);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AltitudeValue) name(altitude) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001312\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value;
                                                }
                                                
                                                float _tmp_915 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value;
                                                _tmp_915 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_915);
                                                _tmp_915 -= -100000;
                                                uint32_t* _tmp_914 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_914 = static_cast<uint32_t>(_tmp_915);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        // Field:  type(PathReferences) name(connected_paths) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(14) span(14) ext(false)
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements.size();
                                        if(__aux64__ > 14) __aux64__ = 14;
                                        uint16_t* _tmp_916 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_916 = __aux64__ - 1;
                                        
                                        int __ifi = __aux64__;
                                        for(int i = 0; i < __ifi; i++) { 
                                            
                                            // Integer
                                            
                                            // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001314\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value);
                                            }
                                            
                                            uint8_t* _tmp_917 = (uint8_t*) buffer++;
                                            *_tmp_917 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value; 
                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                        }
                                        
                                        // Field:  type(PathReferences) name(included_paths) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(14) span(14) ext(false)
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements.size();
                                        if(__aux64__ > 14) __aux64__ = 14;
                                        uint16_t* _tmp_918 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_918 = __aux64__ - 1;
                                        
                                        int __ifj = __aux64__;
                                        for(int j = 0; j < __ifj; j++) { 
                                            
                                            // Integer
                                            
                                            // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001316\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value);
                                            }
                                            
                                            uint8_t* _tmp_919 = (uint8_t*) buffer++;
                                            *_tmp_919 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value; 
                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                        }
                                        
                                        // Field:  type(RoadSectionDefinition_isEventZoneIncluded) name(is_event_zone_included) extGroup(0)
                                        // Value
                                        // Boolean
                                        uint8_t* _tmp_920 = (uint8_t*)buffer++;
                                        *_tmp_920 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_included.value ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001317\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_included: " << (*_tmp_920);
                                        
                                        // Field:  type(RoadSectionDefinition_isEventZoneConnected) name(is_event_zone_connected) extGroup(0)
                                        // Value
                                        // Boolean
                                        uint8_t* _tmp_921 = (uint8_t*)buffer++;
                                        *_tmp_921 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_connected.value ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001318\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_connected: " << (*_tmp_921);
                                        
                                        if(*_ext_flag_722) {
                                        }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type.size() != 0) {
                                        // Field:  type(RoadType) name(road_type) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(3) span(4) dataType(Int32)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001319\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value) << 
                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value);
                                        }
                                        
                                        uint8_t* _tmp_923 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_923 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value; 
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration.size() != 0) {
                                        // Field:  type(BasicLaneConfiguration) name(lane_configuration) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                        uint8_t* _ext_flag_733 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].
                                        *_ext_flag_733 = 0; 
                                        
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements.size();
                                        if(__aux64__ > 16) __aux64__ = 16;
                                        uint16_t* _tmp_924 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_924 = __aux64__ - 1;
                                        
                                        int __ifk = __aux64__;
                                        for(int k = 0; k < __ifk; k++) { 
                                            
                                                // BasicLaneInformation  SEQUENCE
                                                    //  laneNumber            LanePosition      
                                                    //  direction             Direction         
                                                    //  laneWidth             LaneWidth       OPTIONAL  
                                                    //  connectingLane        LanePosition    OPTIONAL  
                                                    //  connectingRoadSection RoadSectionId   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_734 = (uint8_t*) buffer++;  // Write extension flag for BasicLaneInformation
                                                *_ext_flag_734 = 0;  
                                                
                                                // Optional fields bytemap
                                                char* _tmp_925 = (char*) buffer++;
                                                *_tmp_925 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->print() << "|\033[38;5;94m001321\033[0m| Optional field lane_width = " << *_tmp_925;
                                                char* _tmp_926 = (char*) buffer++;
                                                *_tmp_926 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->print() << "|\033[38;5;94m001322\033[0m| Optional field connecting_lane = " << *_tmp_926;
                                                char* _tmp_927 = (char*) buffer++;
                                                *_tmp_927 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->print() << "|\033[38;5;94m001323\033[0m| Optional field connecting_road_section = " << *_tmp_927;
                                                
                                                // Field:  type(LanePosition) name(lane_number) extGroup(0)
                                                // Integer
                                                
                                                // INT8  min(-1) max(14) span(16) dataType(Int8)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001324\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value);
                                                }
                                                
                                                uint8_t* _tmp_928 = (uint8_t*) buffer++;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value - -1;
                                                *_tmp_928 = __aux64__;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(Direction) name(direction) extGroup(0)
                                                // Integer
                                                
                                                // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001325\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value);
                                                }
                                                
                                                uint8_t* _tmp_929 = (uint8_t*) buffer++;
                                                *_tmp_929 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value; 
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                    return -1;
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width.size() != 0) {
                                                    // Field:  type(LaneWidth) name(lane_width) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(1023) span(1024) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001326\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value;
                                                    }
                                                    
                                                    float _tmp_931 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value;
                                                    _tmp_931 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_931);
                                                    uint16_t* _tmp_930 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_930 = static_cast<uint16_t>(_tmp_931);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane.size() != 0) {
                                                    // Field:  type(LanePosition) name(connecting_lane) extGroup(0)
                                                    // Integer
                                                    
                                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001327\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_932 = (uint8_t*) buffer++;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value - -1;
                                                    *_tmp_932 = __aux64__;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section.size() != 0) {
                                                    // Field:  type(RoadSectionId) name(connecting_road_section) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(8) span(9) dataType(UInt8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001328\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value);
                                                    }
                                                    
                                                    uint8_t* _ext_flag_739 = (uint8_t*) buffer++; // Extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].
                                                    *_ext_flag_739 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value >= 0 && ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value <= 8) ? 0 : 1;
                                                    
                                                    if(*_ext_flag_739) {
                                                        uint8_t* _tmp_934 = (uint8_t*) buffer++; 
                                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value >= 0 && ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value <= INT32_MAX) {
                                                            *_tmp_934 = 0;
                                                        
                                                            uint32_t* _tmp_933 = (uint32_t*)buffer; buffer += 4;
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value;
                                                            __aux64__ -= INT32_MIN;
                                                            *_tmp_933 = __aux64__;
                                                        } 
                                                        else
                                                        {
                                                            *_tmp_934 = 1;
                                                        
                                                            uint64_t* _tmp_933 = (uint64_t*)buffer; buffer += 8;
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value;
                                                            __aux64__ -= INT64_MIN;
                                                            *_tmp_933 = __aux64__;
                                                        }
                                                    } else {
                                                        uint8_t* _tmp_933 = (uint8_t*) buffer++;
                                                        *_tmp_933 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value;
                                                    }
                                                }
                                                
                                                if(*_ext_flag_734) {
                                                }
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration.size() != 0) {
                                        // Field:  type(MapemConfiguration) name(mapem_configuration) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                        uint8_t* _ext_flag_740 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].
                                        *_ext_flag_740 = 0; 
                                        
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements.size();
                                        if(__aux64__ > 16) __aux64__ = 16;
                                        uint16_t* _tmp_936 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_936 = __aux64__ - 1;
                                        
                                        int __ifl = __aux64__;
                                        for(int l = 0; l < __ifl; l++) { 
                                            
                                                // MapemElementReference  SEQUENCE
                                                    //  mapReference  MapReference          OPTIONAL  
                                                    //  laneIds       MapemLaneList         OPTIONAL  
                                                    //  connectionIds MapemConnectionList   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_741 = (uint8_t*) buffer++;  // Write extension flag for MapemElementReference
                                                *_ext_flag_741 = 0;  
                                                
                                                // Optional fields bytemap
                                                char* _tmp_937 = (char*) buffer++;
                                                *_tmp_937 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->print() << "|\033[38;5;94m001330\033[0m| Optional field map_reference = " << *_tmp_937;
                                                char* _tmp_938 = (char*) buffer++;
                                                *_tmp_938 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->print() << "|\033[38;5;94m001331\033[0m| Optional field lane_ids = " << *_tmp_938;
                                                char* _tmp_939 = (char*) buffer++;
                                                *_tmp_939 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->print() << "|\033[38;5;94m001332\033[0m| Optional field connection_ids = " << *_tmp_939;
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference.size() != 0) {
                                                    // Field:  type(MapReference) name(map_reference) extGroup(0)
                                                    // Choice
                                                       // #0  roadsegment   RoadSegmentReferenceId
                                                       // #1  intersection   IntersectionReferenceId
                                                    uint8_t* _choice_11 = (uint8_t*) buffer;
                                                    buffer++;
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                        *_choice_11 = 0;  // Setting choice selection
                                                    
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m001333\033[0m| Choice selection: 0";
                                                    
                                                            // RoadSegmentReferenceId  SEQUENCE
                                                                //  region     Identifier2B   OPTIONAL  
                                                                //  id         Identifier2B     
                                                            // Optional fields bytemap
                                                            char* _tmp_940 = (char*) buffer++;
                                                            *_tmp_940 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                            if(debug)
                                                                logger->print() << "|\033[38;5;94m001334\033[0m| Optional field region = " << *_tmp_940;
                                                            
                                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region.size() != 0) {
                                                                // Field:  type(Identifier2B) name(region) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001335\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value;
                                                                }
                                                                
                                                                uint16_t* _tmp_941 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_941 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value; 
                                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                    return -1;
                                                                }
                                                            }
                                                            
                                                            // Field:  type(Identifier2B) name(id) extGroup(0)
                                                            // Integer
                                                            
                                                            // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                            if(debug) {
                                                                logger->print() << "|\033[38;5;94m001336\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value;
                                                            }
                                                            
                                                            uint16_t* _tmp_942 = (uint16_t*) buffer; buffer += 2;
                                                            *_tmp_942 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value; 
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value;
                                                            
                                                            // MIN validator
                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                return -1;
                                                            }
                                                            // MAX validator
                                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                return -1;
                                                            }
                                                    
                                                    }
                                                    else if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                                    {
                                                        *_choice_11 = 1;  // Setting choice selection
                                                    
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m001337\033[0m| Choice selection: 1";
                                                    
                                                            // IntersectionReferenceId  SEQUENCE
                                                                //  region     Identifier2B   OPTIONAL  
                                                                //  id         Identifier2B     
                                                            // Optional fields bytemap
                                                            char* _tmp_943 = (char*) buffer++;
                                                            *_tmp_943 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                            if(debug)
                                                                logger->print() << "|\033[38;5;94m001338\033[0m| Optional field region = " << *_tmp_943;
                                                            
                                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region.size() != 0) {
                                                                // Field:  type(Identifier2B) name(region) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001339\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value;
                                                                }
                                                                
                                                                uint16_t* _tmp_944 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_944 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value; 
                                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                    return -1;
                                                                }
                                                            }
                                                            
                                                            // Field:  type(Identifier2B) name(id) extGroup(0)
                                                            // Integer
                                                            
                                                            // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                            if(debug) {
                                                                logger->print() << "|\033[38;5;94m001340\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value;
                                                            }
                                                            
                                                            uint16_t* _tmp_945 = (uint16_t*) buffer; buffer += 2;
                                                            *_tmp_945 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value; 
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value;
                                                            
                                                            // MIN validator
                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                return -1;
                                                            }
                                                            // MAX validator
                                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                return -1;
                                                            }
                                                    
                                                    }
                                                    else
                                                    {
                                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_11) << ") selected in CHOICE MapReference in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0]'; message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids.size() != 0) {
                                                    // Field:  type(MapemLaneList) name(lane_ids) extGroup(0)
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                                                    uint8_t* _ext_flag_747 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].
                                                    *_ext_flag_747 = 0; 
                                                    
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements.size();
                                                    if(__aux64__ > 8) __aux64__ = 8;
                                                    uint16_t* _tmp_946 = (uint16_t*)buffer;
                                                    buffer += 2;
                                                    *_tmp_946 = __aux64__ - 1;
                                                    
                                                    int __ifm = __aux64__;
                                                    for(int m = 0; m < __ifm; m++) { 
                                                        
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m001342\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_947 = (uint8_t*) buffer++;
                                                        *_tmp_947 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids.size() != 0) {
                                                    // Field:  type(MapemConnectionList) name(connection_ids) extGroup(0)
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                                                    uint8_t* _ext_flag_749 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].
                                                    *_ext_flag_749 = 0; 
                                                    
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements.size();
                                                    if(__aux64__ > 8) __aux64__ = 8;
                                                    uint16_t* _tmp_948 = (uint16_t*)buffer;
                                                    buffer += 2;
                                                    *_tmp_948 = __aux64__ - 1;
                                                    
                                                    int __ifn = __aux64__;
                                                    for(int n = 0; n < __ifn; n++) { 
                                                        
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m001344\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_949 = (uint8_t*) buffer++;
                                                        *_tmp_949 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                    }
                                                }
                                                
                                                if(*_ext_flag_741) {
                                                }
                                        }
                                    }
                                    
                                    if(*_ext_flag_721) {
                                    }
                            }
                            
                            if(*_ext_flag_715) {
                            }
                    }
                    
                    if(ros->denm.alacarte[0].precrash.size() != 0) {
                        // Field:  type(PreCrashContainer) name(precrash) extGroup(1)
                            // PreCrashContainer  SEQUENCE
                                //  perceivedPreCrashObject  PerceivedObject                  
                                //  objectStationId          StationId                      OPTIONAL  
                                //  timeToCollision          DeltaTimeMilliSecondPositive   OPTIONAL  
                                //  impactSection            ObjectFace                     OPTIONAL  
                                //  estimatedBrakingDistance StandardLength12b              OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_751 = (uint8_t*) buffer++;  // Write extension flag for PreCrashContainer
                            *_ext_flag_751 = 0;  
                            
                            // Optional fields bytemap
                            char* _tmp_953 = (char*) buffer++;
                            *_tmp_953 = (ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m001345\033[0m| Optional field object_station_id = " << *_tmp_953;
                            char* _tmp_954 = (char*) buffer++;
                            *_tmp_954 = (ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m001346\033[0m| Optional field time_to_collision = " << *_tmp_954;
                            char* _tmp_955 = (char*) buffer++;
                            *_tmp_955 = (ros->denm.alacarte[0].precrash[0].impact_section.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m001347\033[0m| Optional field impact_section = " << *_tmp_955;
                            char* _tmp_956 = (char*) buffer++;
                            *_tmp_956 = (ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->print() << "|\033[38;5;94m001348\033[0m| Optional field estimated_braking_distance = " << *_tmp_956;
                            
                            // Field:  type(PerceivedObject) name(perceived_pre_crash_object) extGroup(0)
                                // PerceivedObject  SEQUENCE
                                    //  objectId                           Identifier2B                                           OPTIONAL  
                                    //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                    //  position                           CartesianPosition3dWithConfidence                        
                                    //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                    //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                    //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                    //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                    //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                    //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                    //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                    //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                    //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                    //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                    //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                    //  classification                     ObjectClassDescription                                 OPTIONAL  
                                    //  mapPosition                        MapPosition                                            OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_752 = (uint8_t*) buffer++;  // Write extension flag for PerceivedObject
                                *_ext_flag_752 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_957 = (char*) buffer++;
                                *_tmp_957 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001349\033[0m| Optional field object_id = " << *_tmp_957;
                                char* _tmp_958 = (char*) buffer++;
                                *_tmp_958 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001350\033[0m| Optional field velocity = " << *_tmp_958;
                                char* _tmp_959 = (char*) buffer++;
                                *_tmp_959 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001351\033[0m| Optional field acceleration = " << *_tmp_959;
                                char* _tmp_960 = (char*) buffer++;
                                *_tmp_960 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001352\033[0m| Optional field angles = " << *_tmp_960;
                                char* _tmp_961 = (char*) buffer++;
                                *_tmp_961 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001353\033[0m| Optional field z_angular_velocity = " << *_tmp_961;
                                char* _tmp_962 = (char*) buffer++;
                                *_tmp_962 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001354\033[0m| Optional field lower_triangular_correlation_matrices = " << *_tmp_962;
                                char* _tmp_963 = (char*) buffer++;
                                *_tmp_963 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001355\033[0m| Optional field object_dimension_z = " << *_tmp_963;
                                char* _tmp_964 = (char*) buffer++;
                                *_tmp_964 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001356\033[0m| Optional field object_dimension_y = " << *_tmp_964;
                                char* _tmp_965 = (char*) buffer++;
                                *_tmp_965 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001357\033[0m| Optional field object_dimension_x = " << *_tmp_965;
                                char* _tmp_966 = (char*) buffer++;
                                *_tmp_966 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001358\033[0m| Optional field object_age = " << *_tmp_966;
                                char* _tmp_967 = (char*) buffer++;
                                *_tmp_967 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001359\033[0m| Optional field object_perception_quality = " << *_tmp_967;
                                char* _tmp_968 = (char*) buffer++;
                                *_tmp_968 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001360\033[0m| Optional field sensor_id_list = " << *_tmp_968;
                                char* _tmp_969 = (char*) buffer++;
                                *_tmp_969 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001361\033[0m| Optional field classification = " << *_tmp_969;
                                char* _tmp_970 = (char*) buffer++;
                                *_tmp_970 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->print() << "|\033[38;5;94m001362\033[0m| Optional field map_position = " << *_tmp_970;
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0) {
                                    // Field:  type(Identifier2B) name(object_id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001363\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                    }
                                    
                                    uint16_t* _tmp_971 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_971 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                // Field:  type(DeltaTimeMilliSecondSigned) name(measurement_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001364\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value) << 
                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                }
                                
                                float _tmp_973 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                _tmp_973 *= 1000.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_973);
                                _tmp_973 -= -2048;
                                uint16_t* _tmp_972 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_972 = static_cast<uint16_t>(_tmp_973);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -2048) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' (" << __aux64__ << ") less than (-2048); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' (" << __aux64__ << ") exceeds max allowable (2047); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(CartesianPosition3dWithConfidence) name(position) extGroup(0)
                                    // CartesianPosition3dWithConfidence  SEQUENCE
                                        //  xCoordinate CartesianCoordinateWithConfidence     
                                        //  yCoordinate CartesianCoordinateWithConfidence     
                                        //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                    // Optional fields bytemap
                                    char* _tmp_974 = (char*) buffer++;
                                    *_tmp_974 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->print() << "|\033[38;5;94m001365\033[0m| Optional field z_coordinate = " << *_tmp_974;
                                    
                                    // Field:  type(CartesianCoordinateWithConfidence) name(x_coordinate) extGroup(0)
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001366\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                        }
                                        
                                        float _tmp_976 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                        _tmp_976 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_976);
                                        _tmp_976 -= -131072;
                                        uint32_t* _tmp_975 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_975 = static_cast<uint32_t>(_tmp_976);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001367\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                        }
                                        
                                        float _tmp_978 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                        _tmp_978 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_978);
                                        _tmp_978 -= 1;
                                        uint16_t* _tmp_977 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_977 = static_cast<uint16_t>(_tmp_978);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                            return -1;
                                        }
                                    
                                    // Field:  type(CartesianCoordinateWithConfidence) name(y_coordinate) extGroup(0)
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001368\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                        }
                                        
                                        float _tmp_980 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                        _tmp_980 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_980);
                                        _tmp_980 -= -131072;
                                        uint32_t* _tmp_979 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_979 = static_cast<uint32_t>(_tmp_980);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001369\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                        }
                                        
                                        float _tmp_982 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                        _tmp_982 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_982);
                                        _tmp_982 -= 1;
                                        uint16_t* _tmp_981 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_981 = static_cast<uint16_t>(_tmp_982);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                            return -1;
                                        }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0) {
                                        // Field:  type(CartesianCoordinateWithConfidence) name(z_coordinate) extGroup(0)
                                            // CartesianCoordinateWithConfidence  SEQUENCE
                                                //  value      CartesianCoordinateLarge     
                                                //  confidence CoordinateConfidence         
                                            // Optional fields bytemap
                                            
                                            // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001370\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                            }
                                            
                                            float _tmp_984 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                            _tmp_984 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_984);
                                            _tmp_984 -= -131072;
                                            uint32_t* _tmp_983 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_983 = static_cast<uint32_t>(_tmp_984);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001371\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                            }
                                            
                                            float _tmp_986 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                            _tmp_986 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_986);
                                            _tmp_986 -= 1;
                                            uint16_t* _tmp_985 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_985 = static_cast<uint16_t>(_tmp_986);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                                return -1;
                                            }
                                    }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0) {
                                    // Field:  type(Velocity3dWithConfidence) name(velocity) extGroup(0)
                                    // Choice
                                       // #0  polarVelocity   VelocityPolarWithZ
                                       // #1  cartesianVelocity   VelocityCartesian
                                    uint8_t* _choice_12 = (uint8_t*) buffer;
                                    buffer++;
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity.size() != 0) {  // CHOICE 0  fieldType(Velocity3dWithConfidence) 
                                        *_choice_12 = 0;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001372\033[0m| Choice selection: 0";
                                    
                                            // VelocityPolarWithZ  SEQUENCE
                                                //  velocityMagnitude Speed                 
                                                //  velocityDirection CartesianAngle        
                                                //  zVelocity         VelocityComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_987 = (char*) buffer++;
                                            *_tmp_987 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->print() << "|\033[38;5;94m001373\033[0m| Optional field z_velocity = " << *_tmp_987;
                                            
                                            // Field:  type(Speed) name(velocity_magnitude) extGroup(0)
                                                // Speed  SEQUENCE
                                                    //  speedValue      SpeedValue          
                                                    //  speedConfidence SpeedConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(SpeedValue) name(speed_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001374\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                }
                                                
                                                float _tmp_989 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                _tmp_989 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_989);
                                                uint16_t* _tmp_988 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_988 = static_cast<uint16_t>(_tmp_989);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(speed_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001375\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value);
                                                }
                                                
                                                float _tmp_991 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                                _tmp_991 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_991);
                                                _tmp_991 -= 1;
                                                uint8_t* _tmp_990 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_990 = static_cast<uint8_t>(_tmp_991);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(CartesianAngle) name(velocity_direction) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001376\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                }
                                                
                                                float _tmp_993 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                _tmp_993 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_993);
                                                uint16_t* _tmp_992 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_992 = static_cast<uint16_t>(_tmp_993);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001377\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value);
                                                }
                                                
                                                float _tmp_995 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                                _tmp_995 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_995);
                                                _tmp_995 -= 1;
                                                uint8_t* _tmp_994 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_994 = static_cast<uint8_t>(_tmp_995);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                                // Field:  type(VelocityComponent) name(z_velocity) extGroup(0)
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001378\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                    }
                                                    
                                                    float _tmp_997 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                    _tmp_997 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_997);
                                                    _tmp_997 -= -16383;
                                                    uint16_t* _tmp_996 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_996 = static_cast<uint16_t>(_tmp_997);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001379\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_999 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                    _tmp_999 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_999);
                                                    _tmp_999 -= 1;
                                                    uint8_t* _tmp_998 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_998 = static_cast<uint8_t>(_tmp_999);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity.size() != 0)  // CHOICE 1  fieldType(Velocity3dWithConfidence) 
                                    {
                                        *_choice_12 = 1;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001380\033[0m| Choice selection: 1";
                                    
                                            // VelocityCartesian  SEQUENCE
                                                //  xVelocity  VelocityComponent     
                                                //  yVelocity  VelocityComponent     
                                                //  zVelocity  VelocityComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_1000 = (char*) buffer++;
                                            *_tmp_1000 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->print() << "|\033[38;5;94m001381\033[0m| Optional field z_velocity = " << *_tmp_1000;
                                            
                                            // Field:  type(VelocityComponent) name(x_velocity) extGroup(0)
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                // Optional fields bytemap
                                                
                                                // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001382\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                }
                                                
                                                float _tmp_1002 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                _tmp_1002 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1002);
                                                _tmp_1002 -= -16383;
                                                uint16_t* _tmp_1001 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1001 = static_cast<uint16_t>(_tmp_1002);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001383\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value);
                                                }
                                                
                                                float _tmp_1004 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                                _tmp_1004 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1004);
                                                _tmp_1004 -= 1;
                                                uint8_t* _tmp_1003 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1003 = static_cast<uint8_t>(_tmp_1004);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(VelocityComponent) name(y_velocity) extGroup(0)
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                // Optional fields bytemap
                                                
                                                // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001384\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                }
                                                
                                                float _tmp_1006 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                _tmp_1006 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1006);
                                                _tmp_1006 -= -16383;
                                                uint16_t* _tmp_1005 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1005 = static_cast<uint16_t>(_tmp_1006);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001385\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value);
                                                }
                                                
                                                float _tmp_1008 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                                _tmp_1008 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1008);
                                                _tmp_1008 -= 1;
                                                uint8_t* _tmp_1007 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1007 = static_cast<uint8_t>(_tmp_1008);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                                // Field:  type(VelocityComponent) name(z_velocity) extGroup(0)
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001386\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                    }
                                                    
                                                    float _tmp_1010 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                    _tmp_1010 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_1010);
                                                    _tmp_1010 -= -16383;
                                                    uint16_t* _tmp_1009 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_1009 = static_cast<uint16_t>(_tmp_1010);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001387\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_1012 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                    _tmp_1012 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_1012);
                                                    _tmp_1012 -= 1;
                                                    uint8_t* _tmp_1011 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_1011 = static_cast<uint8_t>(_tmp_1012);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else
                                    {
                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_12) << ") selected in CHOICE Velocity3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0]'; message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0) {
                                    // Field:  type(Acceleration3dWithConfidence) name(acceleration) extGroup(0)
                                    // Choice
                                       // #0  polarAcceleration   AccelerationPolarWithZ
                                       // #1  cartesianAcceleration   AccelerationCartesian
                                    uint8_t* _choice_13 = (uint8_t*) buffer;
                                    buffer++;
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration.size() != 0) {  // CHOICE 0  fieldType(Acceleration3dWithConfidence) 
                                        *_choice_13 = 0;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001388\033[0m| Choice selection: 0";
                                    
                                            // AccelerationPolarWithZ  SEQUENCE
                                                //  accelerationMagnitude AccelerationMagnitude     
                                                //  accelerationDirection CartesianAngle            
                                                //  zAcceleration         AccelerationComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_1013 = (char*) buffer++;
                                            *_tmp_1013 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->print() << "|\033[38;5;94m001389\033[0m| Optional field z_acceleration = " << *_tmp_1013;
                                            
                                            // Field:  type(AccelerationMagnitude) name(acceleration_magnitude) extGroup(0)
                                                // AccelerationMagnitude  SEQUENCE
                                                    //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                    //  accelerationConfidence     AccelerationConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationMagnitudeValue) name(acceleration_magnitude_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001390\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value);
                                                }
                                                
                                                float _tmp_1015 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                                _tmp_1015 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1015);
                                                uint8_t* _tmp_1014 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1014 = static_cast<uint8_t>(_tmp_1015);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(acceleration_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001391\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value);
                                                }
                                                
                                                float _tmp_1017 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                                _tmp_1017 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1017);
                                                uint8_t* _tmp_1016 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1016 = static_cast<uint8_t>(_tmp_1017);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(CartesianAngle) name(acceleration_direction) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001392\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                }
                                                
                                                float _tmp_1019 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                _tmp_1019 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1019);
                                                uint16_t* _tmp_1018 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1018 = static_cast<uint16_t>(_tmp_1019);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001393\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value);
                                                }
                                                
                                                float _tmp_1021 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                                _tmp_1021 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1021);
                                                _tmp_1021 -= 1;
                                                uint8_t* _tmp_1020 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1020 = static_cast<uint8_t>(_tmp_1021);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                                // Field:  type(AccelerationComponent) name(z_acceleration) extGroup(0)
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001394\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                    }
                                                    
                                                    float _tmp_1023 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                    _tmp_1023 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_1023);
                                                    _tmp_1023 -= -160;
                                                    uint16_t* _tmp_1022 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_1022 = static_cast<uint16_t>(_tmp_1023);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001395\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_1025 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                    _tmp_1025 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_1025);
                                                    uint8_t* _tmp_1024 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_1024 = static_cast<uint8_t>(_tmp_1025);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration.size() != 0)  // CHOICE 1  fieldType(Acceleration3dWithConfidence) 
                                    {
                                        *_choice_13 = 1;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001396\033[0m| Choice selection: 1";
                                    
                                            // AccelerationCartesian  SEQUENCE
                                                //  xAcceleration AccelerationComponent     
                                                //  yAcceleration AccelerationComponent     
                                                //  zAcceleration AccelerationComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_1026 = (char*) buffer++;
                                            *_tmp_1026 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->print() << "|\033[38;5;94m001397\033[0m| Optional field z_acceleration = " << *_tmp_1026;
                                            
                                            // Field:  type(AccelerationComponent) name(x_acceleration) extGroup(0)
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001398\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                }
                                                
                                                float _tmp_1028 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                _tmp_1028 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1028);
                                                _tmp_1028 -= -160;
                                                uint16_t* _tmp_1027 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1027 = static_cast<uint16_t>(_tmp_1028);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001399\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value);
                                                }
                                                
                                                float _tmp_1030 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                                _tmp_1030 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1030);
                                                uint8_t* _tmp_1029 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1029 = static_cast<uint8_t>(_tmp_1030);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(AccelerationComponent) name(y_acceleration) extGroup(0)
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001400\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                }
                                                
                                                float _tmp_1032 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                _tmp_1032 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1032);
                                                _tmp_1032 -= -160;
                                                uint16_t* _tmp_1031 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1031 = static_cast<uint16_t>(_tmp_1032);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001401\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value);
                                                }
                                                
                                                float _tmp_1034 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                                _tmp_1034 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1034);
                                                uint8_t* _tmp_1033 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1033 = static_cast<uint8_t>(_tmp_1034);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                                // Field:  type(AccelerationComponent) name(z_acceleration) extGroup(0)
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001402\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                    }
                                                    
                                                    float _tmp_1036 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                    _tmp_1036 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_1036);
                                                    _tmp_1036 -= -160;
                                                    uint16_t* _tmp_1035 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_1035 = static_cast<uint16_t>(_tmp_1036);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001403\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_1038 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                    _tmp_1038 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_1038);
                                                    uint8_t* _tmp_1037 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_1037 = static_cast<uint8_t>(_tmp_1038);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else
                                    {
                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_13) << ") selected in CHOICE Acceleration3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0]'; message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0) {
                                    // Field:  type(EulerAnglesWithConfidence) name(angles) extGroup(0)
                                        // EulerAnglesWithConfidence  SEQUENCE
                                            //  zAngle     CartesianAngle     
                                            //  yAngle     CartesianAngle   OPTIONAL  
                                            //  xAngle     CartesianAngle   OPTIONAL  
                                        // Optional fields bytemap
                                        char* _tmp_1039 = (char*) buffer++;
                                        *_tmp_1039 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001404\033[0m| Optional field y_angle = " << *_tmp_1039;
                                        char* _tmp_1040 = (char*) buffer++;
                                        *_tmp_1040 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001405\033[0m| Optional field x_angle = " << *_tmp_1040;
                                        
                                        // Field:  type(CartesianAngle) name(z_angle) extGroup(0)
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            // Optional fields bytemap
                                            
                                            // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001406\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                            }
                                            
                                            float _tmp_1042 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                            _tmp_1042 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_1042);
                                            uint16_t* _tmp_1041 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_1041 = static_cast<uint16_t>(_tmp_1042);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001407\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value);
                                            }
                                            
                                            float _tmp_1044 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value;
                                            _tmp_1044 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_1044);
                                            _tmp_1044 -= 1;
                                            uint8_t* _tmp_1043 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_1043 = static_cast<uint8_t>(_tmp_1044);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0) {
                                            // Field:  type(CartesianAngle) name(y_angle) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001408\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                }
                                                
                                                float _tmp_1046 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                _tmp_1046 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1046);
                                                uint16_t* _tmp_1045 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1045 = static_cast<uint16_t>(_tmp_1046);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001409\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value);
                                                }
                                                
                                                float _tmp_1048 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value;
                                                _tmp_1048 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1048);
                                                _tmp_1048 -= 1;
                                                uint8_t* _tmp_1047 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1047 = static_cast<uint8_t>(_tmp_1048);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0) {
                                            // Field:  type(CartesianAngle) name(x_angle) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001410\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                }
                                                
                                                float _tmp_1050 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                _tmp_1050 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1050);
                                                uint16_t* _tmp_1049 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1049 = static_cast<uint16_t>(_tmp_1050);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001411\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value);
                                                }
                                                
                                                float _tmp_1052 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value;
                                                _tmp_1052 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1052);
                                                _tmp_1052 -= 1;
                                                uint8_t* _tmp_1051 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_1051 = static_cast<uint8_t>(_tmp_1052);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0) {
                                    // Field:  type(CartesianAngularVelocityComponent) name(z_angular_velocity) extGroup(0)
                                        // CartesianAngularVelocityComponent  SEQUENCE
                                            //  value      CartesianAngularVelocityComponentValue     
                                            //  confidence AngularSpeedConfidence                     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianAngularVelocityComponentValue) name(value) extGroup(0)
                                        // Integer
                                        
                                        // INT16  min(-255) max(256) span(512) dataType(Int16)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001412\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                        }
                                        
                                        uint16_t* _tmp_1053 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value - -255;
                                        *_tmp_1053 = __aux64__;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -255) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' (" << __aux64__ << ") less than (-255); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AngularSpeedConfidence) name(confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(7) span(8) dataType(Int32)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001413\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_1054 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_1054 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value; 
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 7) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0) {
                                    // Field:  type(LowerTriangularPositiveSemidefiniteMatrices) name(lower_triangular_correlation_matrices) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements.size();
                                    if(__aux64__ > 4) __aux64__ = 4;
                                    uint16_t* _tmp_1055 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_1055 = __aux64__ - 1;
                                    
                                    int __ifo = __aux64__;
                                    for(int o = 0; o < __ifo; o++) { 
                                        
                                            // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                                //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                                //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(MatrixIncludedComponents) name(components_included_inthe_matrix) extGroup(0)
                                            // BitString
                                            // BIT_STRING  min(13) max(13) span(1)
                                            if(debug)
                                                logger->print() << "|\033[38;5;94m001415\033[0m| denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.size());
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.size() < 13) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.size()) << " is less than allowable (13); message dropped.";
                                                return -1;
                                            }
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.size() > 13) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.size()) << " exceeds max allowable (13); message dropped.";
                                                return -1;
                                            }
                                            
                                            uint8_t* _ext_flag_795 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.
                                            *_ext_flag_795 = 0; 
                                            
                                            uint8_t* _tmp_1056 = (uint8_t*)buffer;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.size();
                                            if(__aux64__ > 13) __aux64__ = 13;
                                            *_tmp_1056 = __aux64__ - 13;
                                            buffer += 1;
                                            
                                            int __ifp = __aux64__;
                                            for(int p = 0; p < __ifp; p++) {
                                                uint8_t* __b__ = (uint8_t*)buffer++;
                                                *__b__ = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values[p]? 1: 0);
                                            }
                                            
                                            // Field:  type(LowerTriangularPositiveSemidefiniteMatrixColumns) name(matrix) extGroup(0)
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13) ext(true)
                                            uint8_t* _ext_flag_796 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.
                                            *_ext_flag_796 = 0; 
                                            
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements.size();
                                            if(__aux64__ > 13) __aux64__ = 13;
                                            uint16_t* _tmp_1057 = (uint16_t*)buffer;
                                            buffer += 2;
                                            *_tmp_1057 = __aux64__ - 1;
                                            
                                            int __ifq = __aux64__;
                                            for(int q = 0; q < __ifq; q++) { 
                                                
                                                // SequenceOf
                                                // Data Type UInt8
                                                // SEQUENCE_OF  min(1) max(13) span(13) ext(true)
                                                uint8_t* _ext_flag_797 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].
                                                *_ext_flag_797 = 0; 
                                                
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements.size();
                                                if(__aux64__ > 13) __aux64__ = 13;
                                                uint16_t* _tmp_1058 = (uint16_t*)buffer;
                                                buffer += 2;
                                                *_tmp_1058 = __aux64__ - 1;
                                                
                                                int __ifr = __aux64__;
                                                for(int r = 0; r < __ifr; r++) { 
                                                    
                                                    // Integer
                                                    
                                                    // INT8  min(-100) max(101) span(202) dataType(Int8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001418\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_1059 = (uint8_t*) buffer++;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value - -100;
                                                    *_tmp_1059 = __aux64__;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -100) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value' (" << __aux64__ << ") less than (-100); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                }
                                                
                                            }
                                            
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_z) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001419\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value);
                                        }
                                        
                                        float _tmp_1061 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value;
                                        _tmp_1061 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_1061);
                                        _tmp_1061 -= 1;
                                        uint8_t* _tmp_1060 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_1060 = static_cast<uint8_t>(_tmp_1061);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001420\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value);
                                        }
                                        
                                        float _tmp_1063 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value;
                                        _tmp_1063 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_1063);
                                        _tmp_1063 -= 1;
                                        uint8_t* _tmp_1062 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_1062 = static_cast<uint8_t>(_tmp_1063);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_y) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001421\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value);
                                        }
                                        
                                        float _tmp_1065 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value;
                                        _tmp_1065 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_1065);
                                        _tmp_1065 -= 1;
                                        uint8_t* _tmp_1064 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_1064 = static_cast<uint8_t>(_tmp_1065);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001422\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value);
                                        }
                                        
                                        float _tmp_1067 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value;
                                        _tmp_1067 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_1067);
                                        _tmp_1067 -= 1;
                                        uint8_t* _tmp_1066 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_1066 = static_cast<uint8_t>(_tmp_1067);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_x) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001423\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value);
                                        }
                                        
                                        float _tmp_1069 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value;
                                        _tmp_1069 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_1069);
                                        _tmp_1069 -= 1;
                                        uint8_t* _tmp_1068 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_1068 = static_cast<uint8_t>(_tmp_1069);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001424\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value);
                                        }
                                        
                                        float _tmp_1071 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value;
                                        _tmp_1071 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_1071);
                                        _tmp_1071 -= 1;
                                        uint8_t* _tmp_1070 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_1070 = static_cast<uint8_t>(_tmp_1071);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0) {
                                    // Field:  type(PerceivedObject_DeltaTimeMilliSecondSigned_objectAge) name(object_age) extGroup(0)
                                    // Real
                                    
                                    // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001425\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                    }
                                    
                                    float _tmp_1073 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                    _tmp_1073 *= 1000.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_1073);
                                    uint16_t* _tmp_1072 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_1072 = static_cast<uint16_t>(_tmp_1073);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2047) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' (" << __aux64__ << ") exceeds max allowable (2047); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0) {
                                    // Field:  type(ObjectPerceptionQuality) name(object_perception_quality) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                    if(debug) {
                                        logger->print() << "|\033[38;5;94m001426\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value);
                                    }
                                    
                                    uint8_t* _tmp_1074 = (uint8_t*) buffer++;
                                    *_tmp_1074 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0) {
                                    // Field:  type(SequenceOfIdentifier1B) name(sensor_id_list) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(128) span(128) ext(true)
                                    uint8_t* _ext_flag_807 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].
                                    *_ext_flag_807 = 0; 
                                    
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements.size();
                                    if(__aux64__ > 128) __aux64__ = 128;
                                    uint16_t* _tmp_1075 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_1075 = __aux64__ - 1;
                                    
                                    int __ifs = __aux64__;
                                    for(int s = 0; s < __ifs; s++) { 
                                        
                                        // Integer
                                        
                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                        if(debug) {
                                            logger->print() << "|\033[38;5;94m001428\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value);
                                        }
                                        
                                        uint8_t* _tmp_1076 = (uint8_t*) buffer++;
                                        *_tmp_1076 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value; 
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                            return -1;
                                        }
                                        
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0) {
                                    // Field:  type(ObjectClassDescription) name(classification) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(false)
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements.size();
                                    if(__aux64__ > 8) __aux64__ = 8;
                                    uint16_t* _tmp_1077 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_1077 = __aux64__ - 1;
                                    
                                    int __ift = __aux64__;
                                    for(int t = 0; t < __ift; t++) { 
                                        
                                            // ObjectClassWithConfidence  SEQUENCE
                                                //  objectClass ObjectClass         
                                                //  confidence  ConfidenceLevel     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(ObjectClass) name(object_class) extGroup(0)
                                            // Choice
                                               // #0  vehicleSubClass   ObjectClass_TrafficParticipantType_vehicleSubClass
                                               // #1  vruSubClass   VruProfileAndSubprofile
                                               // #2  groupSubClass   VruClusterInformation
                                               // #3  otherSubClass   OtherSubClass
                                            uint8_t* _ext_flag_809 = (uint8_t*) buffer; 
                                            buffer++;
                                            *_ext_flag_809 = 0; 
                                            
                                            uint8_t* _choice_14 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class.size() != 0) {  // CHOICE 0  fieldType(ObjectClass) 
                                                *_choice_14 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001430\033[0m| Choice selection: 0";
                                            
                                                // Integer
                                                
                                                // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001431\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value);
                                                }
                                                
                                                uint8_t* _tmp_1078 = (uint8_t*) buffer++;
                                                *_tmp_1078 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value; 
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class.size() != 0)  // CHOICE 1  fieldType(ObjectClass) 
                                            {
                                                *_choice_14 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001432\033[0m| Choice selection: 1";
                                            
                                                // Choice
                                                   // #0  pedestrian   VruSubProfilePedestrian
                                                   // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist
                                                   // #2  motorcyclist   VruSubProfileMotorcyclist
                                                   // #3  animal   VruSubProfileAnimal
                                                uint8_t* _ext_flag_811 = (uint8_t*) buffer; 
                                                buffer++;
                                                *_ext_flag_811 = 0; 
                                                
                                                uint8_t* _choice_15 = (uint8_t*) buffer;
                                                buffer++;
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian.size() != 0) {  // CHOICE 0  fieldType(VruProfileAndSubprofile) 
                                                    *_choice_15 = 0;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001433\033[0m| Choice selection: 0";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001434\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_1079 = (uint8_t*) buffer++;
                                                    *_tmp_1079 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.size() != 0)  // CHOICE 1  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_15 = 1;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001435\033[0m| Choice selection: 1";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001436\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_1080 = (uint8_t*) buffer++;
                                                    *_tmp_1080 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist.size() != 0)  // CHOICE 2  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_15 = 2;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001437\033[0m| Choice selection: 2";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001438\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_1081 = (uint8_t*) buffer++;
                                                    *_tmp_1081 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal.size() != 0)  // CHOICE 3  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_15 = 3;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001439\033[0m| Choice selection: 3";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001440\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_1082 = (uint8_t*) buffer++;
                                                    *_tmp_1082 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else
                                                {
                                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_15) << ") selected in CHOICE VruProfileAndSubprofile in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0]'; message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class.size() != 0)  // CHOICE 2  fieldType(ObjectClass) 
                                            {
                                                *_choice_14 = 2;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001441\033[0m| Choice selection: 2";
                                            
                                                    // VruClusterInformation  SEQUENCE
                                                        //  clusterId               Identifier1B         OPTIONAL  
                                                        //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                        //  clusterCardinalitySize  CardinalNumber1B       
                                                        //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                        //  ...
                                                    uint8_t* _ext_flag_816 = (uint8_t*) buffer++;  // Write extension flag for VruClusterInformation
                                                    *_ext_flag_816 = 0;  
                                                    
                                                    // Optional fields bytemap
                                                    char* _tmp_1083 = (char*) buffer++;
                                                    *_tmp_1083 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m001442\033[0m| Optional field cluster_id = " << *_tmp_1083;
                                                    char* _tmp_1084 = (char*) buffer++;
                                                    *_tmp_1084 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m001443\033[0m| Optional field cluster_bounding_box_shape = " << *_tmp_1084;
                                                    char* _tmp_1085 = (char*) buffer++;
                                                    *_tmp_1085 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m001444\033[0m| Optional field cluster_profiles = " << *_tmp_1085;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                        // Field:  type(Identifier1B) name(cluster_id) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m001445\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_1086 = (uint8_t*) buffer++;
                                                        *_tmp_1086 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                        // Field:  type(Shape) name(cluster_bounding_box_shape) extGroup(0)
                                                        // Choice
                                                           // #0  rectangular   RectangularShape
                                                           // #1  circular   CircularShape
                                                           // #2  polygonal   PolygonalShape
                                                           // #3  elliptical   EllipticalShape
                                                           // #4  radial   RadialShape
                                                           // #5  radialShapes   RadialShapes
                                                        uint8_t* _ext_flag_818 = (uint8_t*) buffer; 
                                                        buffer++;
                                                        *_ext_flag_818 = 0; 
                                                        
                                                        uint8_t* _choice_16 = (uint8_t*) buffer;
                                                        buffer++;
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.size() != 0) {  // CHOICE 0  fieldType(Shape) 
                                                            *_choice_16 = 0;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m001446\033[0m| Choice selection: 0";
                                                        
                                                                // RectangularShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  semiLength          StandardLength12b       
                                                                    //  semiBreadth         StandardLength12b       
                                                                    //  orientation         CartesianAngleValue   OPTIONAL  
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_1087 = (char*) buffer++;
                                                                *_tmp_1087 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001447\033[0m| Optional field shape_reference_point = " << *_tmp_1087;
                                                                char* _tmp_1088 = (char*) buffer++;
                                                                *_tmp_1088 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001448\033[0m| Optional field orientation = " << *_tmp_1088;
                                                                char* _tmp_1089 = (char*) buffer++;
                                                                *_tmp_1089 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001449\033[0m| Optional field height = " << *_tmp_1089;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1090 = (char*) buffer++;
                                                                        *_tmp_1090 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001450\033[0m| Optional field z_coordinate = " << *_tmp_1090;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001451\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1092 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_1092 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1092);
                                                                        _tmp_1092 -= -32768;
                                                                        uint16_t* _tmp_1091 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1091 = static_cast<uint16_t>(_tmp_1092);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001452\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1094 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_1094 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1094);
                                                                        _tmp_1094 -= -32768;
                                                                        uint16_t* _tmp_1093 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1093 = static_cast<uint16_t>(_tmp_1094);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001453\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1096 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_1096 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1096);
                                                                            _tmp_1096 -= -32768;
                                                                            uint16_t* _tmp_1095 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1095 = static_cast<uint16_t>(_tmp_1096);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001454\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                }
                                                                
                                                                float _tmp_1098 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                _tmp_1098 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1098);
                                                                uint16_t* _tmp_1097 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1097 = static_cast<uint16_t>(_tmp_1098);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_breadth) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001455\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                }
                                                                
                                                                float _tmp_1100 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                _tmp_1100 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1100);
                                                                uint16_t* _tmp_1099 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1099 = static_cast<uint16_t>(_tmp_1100);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(orientation) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001456\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1102 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                    _tmp_1102 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1102);
                                                                    uint16_t* _tmp_1101 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1101 = static_cast<uint16_t>(_tmp_1102);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001457\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1104 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                    _tmp_1104 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1104);
                                                                    uint16_t* _tmp_1103 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1103 = static_cast<uint16_t>(_tmp_1104);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.size() != 0)  // CHOICE 1  fieldType(Shape) 
                                                        {
                                                            *_choice_16 = 1;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m001458\033[0m| Choice selection: 1";
                                                        
                                                                // CircularShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  radius              StandardLength12b       
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_1105 = (char*) buffer++;
                                                                *_tmp_1105 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001459\033[0m| Optional field shape_reference_point = " << *_tmp_1105;
                                                                char* _tmp_1106 = (char*) buffer++;
                                                                *_tmp_1106 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001460\033[0m| Optional field height = " << *_tmp_1106;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1107 = (char*) buffer++;
                                                                        *_tmp_1107 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001461\033[0m| Optional field z_coordinate = " << *_tmp_1107;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001462\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1109 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_1109 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1109);
                                                                        _tmp_1109 -= -32768;
                                                                        uint16_t* _tmp_1108 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1108 = static_cast<uint16_t>(_tmp_1109);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001463\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1111 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_1111 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1111);
                                                                        _tmp_1111 -= -32768;
                                                                        uint16_t* _tmp_1110 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1110 = static_cast<uint16_t>(_tmp_1111);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001464\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1113 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_1113 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1113);
                                                                            _tmp_1113 -= -32768;
                                                                            uint16_t* _tmp_1112 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1112 = static_cast<uint16_t>(_tmp_1113);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(radius) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001465\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                }
                                                                
                                                                float _tmp_1115 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                _tmp_1115 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1115);
                                                                uint16_t* _tmp_1114 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1114 = static_cast<uint16_t>(_tmp_1115);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001466\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1117 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                    _tmp_1117 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1117);
                                                                    uint16_t* _tmp_1116 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1116 = static_cast<uint16_t>(_tmp_1117);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.size() != 0)  // CHOICE 2  fieldType(Shape) 
                                                        {
                                                            *_choice_16 = 2;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m001467\033[0m| Choice selection: 2";
                                                        
                                                                // PolygonalShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                    //  polygon             SequenceOfCartesianPosition3d     
                                                                    //  height              StandardLength12b               OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_1118 = (char*) buffer++;
                                                                *_tmp_1118 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001468\033[0m| Optional field shape_reference_point = " << *_tmp_1118;
                                                                char* _tmp_1119 = (char*) buffer++;
                                                                *_tmp_1119 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001469\033[0m| Optional field height = " << *_tmp_1119;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1120 = (char*) buffer++;
                                                                        *_tmp_1120 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001470\033[0m| Optional field z_coordinate = " << *_tmp_1120;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001471\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1122 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_1122 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1122);
                                                                        _tmp_1122 -= -32768;
                                                                        uint16_t* _tmp_1121 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1121 = static_cast<uint16_t>(_tmp_1122);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001472\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1124 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_1124 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1124);
                                                                        _tmp_1124 -= -32768;
                                                                        uint16_t* _tmp_1123 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1123 = static_cast<uint16_t>(_tmp_1124);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001473\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1126 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_1126 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1126);
                                                                            _tmp_1126 -= -32768;
                                                                            uint16_t* _tmp_1125 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1125 = static_cast<uint16_t>(_tmp_1126);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(SequenceOfCartesianPosition3d) name(polygon) extGroup(0)
                                                                // SequenceOf
                                                                // Data Type UInt8
                                                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                                                uint8_t* _ext_flag_834 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                                *_ext_flag_834 = 0; 
                                                                
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.size();
                                                                if(__aux64__ > 16) __aux64__ = 16;
                                                                uint16_t* _tmp_1127 = (uint16_t*)buffer;
                                                                buffer += 2;
                                                                *_tmp_1127 = __aux64__ - 1;
                                                                
                                                                int __ifu = __aux64__;
                                                                for(int u = 0; u < __ifu; u++) { 
                                                                    
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1128 = (char*) buffer++;
                                                                        *_tmp_1128 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001475\033[0m| Optional field z_coordinate = " << *_tmp_1128;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001476\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1130 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value;
                                                                        _tmp_1130 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1130);
                                                                        _tmp_1130 -= -32768;
                                                                        uint16_t* _tmp_1129 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1129 = static_cast<uint16_t>(_tmp_1130);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001477\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1132 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value;
                                                                        _tmp_1132 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1132);
                                                                        _tmp_1132 -= -32768;
                                                                        uint16_t* _tmp_1131 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1131 = static_cast<uint16_t>(_tmp_1132);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001478\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1134 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value;
                                                                            _tmp_1134 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1134);
                                                                            _tmp_1134 -= -32768;
                                                                            uint16_t* _tmp_1133 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1133 = static_cast<uint16_t>(_tmp_1134);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001479\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1136 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                    _tmp_1136 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1136);
                                                                    uint16_t* _tmp_1135 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1135 = static_cast<uint16_t>(_tmp_1136);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.size() != 0)  // CHOICE 3  fieldType(Shape) 
                                                        {
                                                            *_choice_16 = 3;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m001480\033[0m| Choice selection: 3";
                                                        
                                                                // EllipticalShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  semiMajorAxisLength StandardLength12b       
                                                                    //  semiMinorAxisLength StandardLength12b       
                                                                    //  orientation         CartesianAngleValue   OPTIONAL  
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_1137 = (char*) buffer++;
                                                                *_tmp_1137 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001481\033[0m| Optional field shape_reference_point = " << *_tmp_1137;
                                                                char* _tmp_1138 = (char*) buffer++;
                                                                *_tmp_1138 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001482\033[0m| Optional field orientation = " << *_tmp_1138;
                                                                char* _tmp_1139 = (char*) buffer++;
                                                                *_tmp_1139 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001483\033[0m| Optional field height = " << *_tmp_1139;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1140 = (char*) buffer++;
                                                                        *_tmp_1140 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001484\033[0m| Optional field z_coordinate = " << *_tmp_1140;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001485\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1142 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_1142 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1142);
                                                                        _tmp_1142 -= -32768;
                                                                        uint16_t* _tmp_1141 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1141 = static_cast<uint16_t>(_tmp_1142);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001486\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1144 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_1144 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1144);
                                                                        _tmp_1144 -= -32768;
                                                                        uint16_t* _tmp_1143 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1143 = static_cast<uint16_t>(_tmp_1144);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001487\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1146 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_1146 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1146);
                                                                            _tmp_1146 -= -32768;
                                                                            uint16_t* _tmp_1145 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1145 = static_cast<uint16_t>(_tmp_1146);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_major_axis_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001488\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                }
                                                                
                                                                float _tmp_1148 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                _tmp_1148 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1148);
                                                                uint16_t* _tmp_1147 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1147 = static_cast<uint16_t>(_tmp_1148);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_minor_axis_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001489\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                }
                                                                
                                                                float _tmp_1150 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                _tmp_1150 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1150);
                                                                uint16_t* _tmp_1149 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1149 = static_cast<uint16_t>(_tmp_1150);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(orientation) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001490\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1152 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                    _tmp_1152 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1152);
                                                                    uint16_t* _tmp_1151 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1151 = static_cast<uint16_t>(_tmp_1152);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001491\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1154 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                    _tmp_1154 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1154);
                                                                    uint16_t* _tmp_1153 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1153 = static_cast<uint16_t>(_tmp_1154);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.size() != 0)  // CHOICE 4  fieldType(Shape) 
                                                        {
                                                            *_choice_16 = 4;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m001492\033[0m| Choice selection: 4";
                                                        
                                                                // RadialShape  SEQUENCE
                                                                    //  shapeReferencePoint         CartesianPosition3d   OPTIONAL  
                                                                    //  range                       StandardLength12b       
                                                                    //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                    //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                    //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                    //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_1155 = (char*) buffer++;
                                                                *_tmp_1155 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001493\033[0m| Optional field shape_reference_point = " << *_tmp_1155;
                                                                char* _tmp_1156 = (char*) buffer++;
                                                                *_tmp_1156 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001494\033[0m| Optional field vertical_opening_angle_start = " << *_tmp_1156;
                                                                char* _tmp_1157 = (char*) buffer++;
                                                                *_tmp_1157 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001495\033[0m| Optional field vertical_opening_angle_end = " << *_tmp_1157;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1158 = (char*) buffer++;
                                                                        *_tmp_1158 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001496\033[0m| Optional field z_coordinate = " << *_tmp_1158;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001497\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1160 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_1160 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1160);
                                                                        _tmp_1160 -= -32768;
                                                                        uint16_t* _tmp_1159 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1159 = static_cast<uint16_t>(_tmp_1160);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001498\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_1162 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_1162 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1162);
                                                                        _tmp_1162 -= -32768;
                                                                        uint16_t* _tmp_1161 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1161 = static_cast<uint16_t>(_tmp_1162);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001499\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1164 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_1164 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1164);
                                                                            _tmp_1164 -= -32768;
                                                                            uint16_t* _tmp_1163 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1163 = static_cast<uint16_t>(_tmp_1164);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(range) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001500\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                }
                                                                
                                                                float _tmp_1166 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                _tmp_1166 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1166);
                                                                uint16_t* _tmp_1165 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1165 = static_cast<uint16_t>(_tmp_1166);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_start) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001501\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                }
                                                                
                                                                float _tmp_1168 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                _tmp_1168 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1168);
                                                                uint16_t* _tmp_1167 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1167 = static_cast<uint16_t>(_tmp_1168);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_end) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001502\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                }
                                                                
                                                                float _tmp_1170 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                _tmp_1170 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1170);
                                                                uint16_t* _tmp_1169 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1169 = static_cast<uint16_t>(_tmp_1170);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(vertical_opening_angle_start) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001503\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1172 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                    _tmp_1172 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1172);
                                                                    uint16_t* _tmp_1171 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1171 = static_cast<uint16_t>(_tmp_1172);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(vertical_opening_angle_end) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001504\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1174 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                    _tmp_1174 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1174);
                                                                    uint16_t* _tmp_1173 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1173 = static_cast<uint16_t>(_tmp_1174);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.size() != 0)  // CHOICE 5  fieldType(Shape) 
                                                        {
                                                            *_choice_16 = 5;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m001505\033[0m| Choice selection: 5";
                                                        
                                                                // RadialShapes  SEQUENCE
                                                                    //  refPointId       Identifier1B                 
                                                                    //  xCoordinate      CartesianCoordinateSmall     
                                                                    //  yCoordinate      CartesianCoordinateSmall     
                                                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                    //  radialShapesList RadialShapesList             
                                                                // Optional fields bytemap
                                                                char* _tmp_1175 = (char*) buffer++;
                                                                *_tmp_1175 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->print() << "|\033[38;5;94m001506\033[0m| Optional field z_coordinate = " << *_tmp_1175;
                                                                
                                                                // Field:  type(Identifier1B) name(ref_point_id) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001507\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                                }
                                                                
                                                                uint8_t* _tmp_1176 = (uint8_t*) buffer++;
                                                                *_tmp_1176 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value; 
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianCoordinateSmall) name(x_coordinate) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001508\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                }
                                                                
                                                                float _tmp_1178 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                _tmp_1178 *= 100.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1178);
                                                                _tmp_1178 -= -3094;
                                                                uint16_t* _tmp_1177 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1177 = static_cast<uint16_t>(_tmp_1178);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianCoordinateSmall) name(y_coordinate) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->print() << "|\033[38;5;94m001509\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                }
                                                                
                                                                float _tmp_1180 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                _tmp_1180 *= 100.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_1180);
                                                                _tmp_1180 -= -3094;
                                                                uint16_t* _tmp_1179 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_1179 = static_cast<uint16_t>(_tmp_1180);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                    // Field:  type(CartesianCoordinateSmall) name(z_coordinate) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->print() << "|\033[38;5;94m001510\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_1182 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                    _tmp_1182 *= 100.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_1182);
                                                                    _tmp_1182 -= -3094;
                                                                    uint16_t* _tmp_1181 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_1181 = static_cast<uint16_t>(_tmp_1182);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                // Field:  type(RadialShapesList) name(radial_shapes_list) extGroup(0)
                                                                // SequenceOf
                                                                // Data Type UInt8
                                                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                                                uint8_t* _ext_flag_858 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                                *_ext_flag_858 = 0; 
                                                                
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.size();
                                                                if(__aux64__ > 16) __aux64__ = 16;
                                                                uint16_t* _tmp_1183 = (uint16_t*)buffer;
                                                                buffer += 2;
                                                                *_tmp_1183 = __aux64__ - 1;
                                                                
                                                                int __ifv = __aux64__;
                                                                for(int v = 0; v < __ifv; v++) { 
                                                                    
                                                                        // RadialShapeDetails  SEQUENCE
                                                                            //  range                       StandardLength12b       
                                                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_1184 = (char*) buffer++;
                                                                        *_tmp_1184 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001512\033[0m| Optional field vertical_opening_angle_start = " << *_tmp_1184;
                                                                        char* _tmp_1185 = (char*) buffer++;
                                                                        *_tmp_1185 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->print() << "|\033[38;5;94m001513\033[0m| Optional field vertical_opening_angle_end = " << *_tmp_1185;
                                                                        
                                                                        // Field:  type(StandardLength12b) name(range) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001514\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value;
                                                                        }
                                                                        
                                                                        float _tmp_1187 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value;
                                                                        _tmp_1187 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1187);
                                                                        uint16_t* _tmp_1186 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1186 = static_cast<uint16_t>(_tmp_1187);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_start) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001515\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value;
                                                                        }
                                                                        
                                                                        float _tmp_1189 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value;
                                                                        _tmp_1189 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1189);
                                                                        uint16_t* _tmp_1188 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1188 = static_cast<uint16_t>(_tmp_1189);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_end) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->print() << "|\033[38;5;94m001516\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value;
                                                                        }
                                                                        
                                                                        float _tmp_1191 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value;
                                                                        _tmp_1191 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_1191);
                                                                        uint16_t* _tmp_1190 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_1190 = static_cast<uint16_t>(_tmp_1191);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start.size() != 0) {
                                                                            // Field:  type(CartesianAngleValue) name(vertical_opening_angle_start) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001517\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1193 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value;
                                                                            _tmp_1193 *= 10.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1193);
                                                                            uint16_t* _tmp_1192 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1192 = static_cast<uint16_t>(_tmp_1193);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end.size() != 0) {
                                                                            // Field:  type(CartesianAngleValue) name(vertical_opening_angle_end) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->print() << "|\033[38;5;94m001518\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_1195 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value;
                                                                            _tmp_1195 *= 10.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_1195);
                                                                            uint16_t* _tmp_1194 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_1194 = static_cast<uint16_t>(_tmp_1195);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                }
                                                        
                                                        }
                                                        else
                                                        {
                                                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_16) << ") selected in CHOICE Shape in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0]'; message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(CardinalNumber1B) name(cluster_cardinality_size) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001519\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                    }
                                                    
                                                    uint8_t* _tmp_1196 = (uint8_t*) buffer++;
                                                    *_tmp_1196 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                        // Field:  type(VruClusterProfiles) name(cluster_profiles) extGroup(0)
                                                        // BitString
                                                        // BIT_STRING  min(4) max(4) span(1)
                                                        if(debug)
                                                            logger->print() << "|\033[38;5;94m001520\033[0m| denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.size());
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.size() < 4) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.size()) << " is less than allowable (4); message dropped.";
                                                            return -1;
                                                        }
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.size() > 4) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.size()) << " exceeds max allowable (4); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                        uint8_t* _tmp_1197 = (uint8_t*)buffer;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.size();
                                                        if(__aux64__ > 4) __aux64__ = 4;
                                                        *_tmp_1197 = __aux64__ - 4;
                                                        buffer += 1;
                                                        
                                                        int __ifw = __aux64__;
                                                        for(int w = 0; w < __ifw; w++) {
                                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                                            *__b__ = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values[w]? 1: 0);
                                                        }
                                                    }
                                                    
                                                    if(*_ext_flag_816) {
                                                    }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class.size() != 0)  // CHOICE 3  fieldType(ObjectClass) 
                                            {
                                                *_choice_14 = 3;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001521\033[0m| Choice selection: 3";
                                            
                                                // Integer
                                                
                                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001522\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value);
                                                }
                                                
                                                uint8_t* _tmp_1199 = (uint8_t*) buffer++;
                                                *_tmp_1199 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value; 
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_14) << ") selected in CHOICE ObjectClass in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class'; message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(ConfidenceLevel) name(confidence) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001523\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value);
                                            }
                                            
                                            uint8_t* _tmp_1200 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value - 1;
                                            *_tmp_1200 = __aux64__;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                                return -1;
                                            }
                                            
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0) {
                                    // Field:  type(MapPosition) name(map_position) extGroup(0)
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_867 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_867 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_1201 = (char*) buffer++;
                                        *_tmp_1201 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001524\033[0m| Optional field map_reference = " << *_tmp_1201;
                                        char* _tmp_1202 = (char*) buffer++;
                                        *_tmp_1202 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001525\033[0m| Optional field lane_id = " << *_tmp_1202;
                                        char* _tmp_1203 = (char*) buffer++;
                                        *_tmp_1203 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001526\033[0m| Optional field connection_id = " << *_tmp_1203;
                                        char* _tmp_1204 = (char*) buffer++;
                                        *_tmp_1204 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->print() << "|\033[38;5;94m001527\033[0m| Optional field longitudinal_lane_position = " << *_tmp_1204;
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_17 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_17 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001528\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_1205 = (char*) buffer++;
                                                    *_tmp_1205 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m001529\033[0m| Optional field region = " << *_tmp_1205;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m001530\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_1206 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_1206 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001531\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_1207 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_1207 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_17 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001532\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_1208 = (char*) buffer++;
                                                    *_tmp_1208 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->print() << "|\033[38;5;94m001533\033[0m| Optional field region = " << *_tmp_1208;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->print() << "|\033[38;5;94m001534\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_1209 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_1209 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->print() << "|\033[38;5;94m001535\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_1210 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_1210 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_17) << ") selected in CHOICE MapReference in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001536\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_1211 = (uint8_t*) buffer++;
                                            *_tmp_1211 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value; 
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->print() << "|\033[38;5;94m001537\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_1212 = (uint8_t*) buffer++;
                                            *_tmp_1212 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value; 
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001538\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_1214 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_1214 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1214);
                                                uint16_t* _tmp_1213 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1213 = static_cast<uint16_t>(_tmp_1214);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->print() << "|\033[38;5;94m001539\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_1216 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_1216 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_1216);
                                                uint16_t* _tmp_1215 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_1215 = static_cast<uint16_t>(_tmp_1216);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_867) {
                                        }
                                }
                                
                                if(*_ext_flag_752) {
                                }
                            
                            if(ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0) {
                                // Field:  type(StationId) name(object_station_id) extGroup(0)
                                // Integer
                                
                                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001540\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].object_station_id[0].value) << 
                                                 " denm.alacarte[0].precrash[0].object_station_id[0].value: " << ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                }
                                
                                uint32_t* _tmp_1219 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_1219 = ros->denm.alacarte[0].precrash[0].object_station_id[0].value; 
                                __aux64__ = ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0) {
                                // Field:  type(DeltaTimeMilliSecondPositive) name(time_to_collision) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001541\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].time_to_collision[0].value) << 
                                                 " denm.alacarte[0].precrash[0].time_to_collision[0].value: " << ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                }
                                
                                float _tmp_1221 = ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                _tmp_1221 *= 1000.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_1221);
                                _tmp_1221 -= 1;
                                uint16_t* _tmp_1220 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_1220 = static_cast<uint16_t>(_tmp_1221);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 10000) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' (" << __aux64__ << ") exceeds max allowable (10000); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].impact_section.size() != 0) {
                                // Field:  type(ObjectFace) name(impact_section) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(5) span(6) dataType(Int32)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001542\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].impact_section[0].value) << 
                                                 " denm.alacarte[0].precrash[0].impact_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].impact_section[0].value);
                                }
                                
                                uint8_t* _tmp_1222 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_1222 = ros->denm.alacarte[0].precrash[0].impact_section[0].value; 
                                __aux64__ = ros->denm.alacarte[0].precrash[0].impact_section[0].value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 5) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' (" << __aux64__ << ") exceeds max allowable (5); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0) {
                                // Field:  type(StandardLength12b) name(estimated_braking_distance) extGroup(0)
                                // Real
                                
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                if(debug) {
                                    logger->print() << "|\033[38;5;94m001543\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value) << 
                                                 " denm.alacarte[0].precrash[0].estimated_braking_distance[0].value: " << ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                }
                                
                                float _tmp_1224 = ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                _tmp_1224 *= 10.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_1224);
                                uint16_t* _tmp_1223 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_1223 = static_cast<uint16_t>(_tmp_1224);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(*_ext_flag_751) {
                            }
                    }
                    
                    *_tmp_887_openType = buffer - _tmp_888_start;  // OpenType length
                }
        }
    
	
            return buffer - start;
        }
    } 
}