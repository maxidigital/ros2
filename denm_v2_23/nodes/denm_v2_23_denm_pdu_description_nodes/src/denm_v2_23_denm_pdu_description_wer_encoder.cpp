/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:denm_v2_23:1.0
 * 
 * Module: DENM_PDU_Description {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) denmPduRelease2(103831) major-version-2(2) minor-version-2(2)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <denm_v2_23_denm_pdu_description_wer_encoder.h>

namespace wind
{
    namespace encoder_denm_v2_23_denm_pdu_description
    {
        WerEncoder::WerEncoder(ScreenLogger* logger, bool debug) 
            : logger(logger), debug(debug) {
        }

        WerEncoder::~WerEncoder() {            
        }
        

        #if WIND_ROS_VERSION == 1
          int WerEncoder::encode(const denm_v2_23_denm_pdu_description_msgs::DENM::ConstPtr& ros, const uint8_t *buffer)
		#else
		  int WerEncoder::encode(const std::shared_ptr<denm_v2_23_denm_pdu_description_msgs::msg::DENM>& ros, const uint8_t *buffer)
          //int WerEncoder::encode(const denm_v2_23_denm_pdu_description_msgs::msg::DENM* ros, const uint8_t *buffer)
		#endif
		{
            const uint8_t *start = buffer;
            int64_t __aux64__;

    // DENM  SEQUENCE
        //  header     ItsPduHeader     
        //  denm       DenmPayload      
    // Optional fields bytemap
    
    // Field:  type(ItsPduHeader) name(hheader) extGroup(0)
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        // Optional fields bytemap
        
        // Field:  type(OrdinalNumber1B) name(protocol_version) extGroup(0)
        // Integer
        
        // UINT8  min(0) max(255) span(256) dataType(UInt8)
        if(debug) {
            logger->debug() << "|\033[38;5;94m011761\033[0m| " << tools::getTypeName(ros->hheader.protocol_version.value) << 
                         " hheader.protocol_version.value: " << static_cast<int>(ros->hheader.protocol_version.value);
        }
        
        uint8_t* _tmp_13199 = (uint8_t*) buffer++;
        *_tmp_13199 = ros->hheader.protocol_version.value; 
        __aux64__ = ros->hheader.protocol_version.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.protocol_version.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'hheader.protocol_version.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
            return -1;
        }
        
        // Field:  type(MessageId) name(message_id) extGroup(0)
        // Integer
        
        // UINT8  min(0) max(255) span(256) dataType(UInt8)
        if(debug) {
            logger->debug() << "|\033[38;5;94m011762\033[0m| " << tools::getTypeName(ros->hheader.message_id.value) << 
                         " hheader.message_id.value: " << static_cast<int>(ros->hheader.message_id.value);
        }
        
        uint8_t* _tmp_13200 = (uint8_t*) buffer++;
        *_tmp_13200 = ros->hheader.message_id.value; 
        __aux64__ = ros->hheader.message_id.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.message_id.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'hheader.message_id.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
            return -1;
        }
        
        // Field:  type(StationId) name(station_id) extGroup(0)
        // Integer
        
        // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
        if(debug) {
            logger->debug() << "|\033[38;5;94m011763\033[0m| " << tools::getTypeName(ros->hheader.station_id.value) << 
                         " hheader.station_id.value: " << ros->hheader.station_id.value;
        }
        
        uint32_t* _tmp_13201 = (uint32_t*) buffer; buffer += 4;
        *_tmp_13201 = ros->hheader.station_id.value; 
        __aux64__ = ros->hheader.station_id.value;
        
        // MIN validator
        if (VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'hheader.station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
            return -1;
        }
        // MAX validator
        if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'hheader.station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
            return -1;
        }
    
    // Field:  type(DenmPayload) name(denm) extGroup(0)
        // DenmPayload  SEQUENCE
            //  management ManagementContainer     
            //  situation  SituationContainer    OPTIONAL  
            //  location   LocationContainer     OPTIONAL  
            //  alacarte   AlacarteContainer     OPTIONAL  
        // Optional fields bytemap
        char* _tmp_13202 = (char*) buffer++;
        *_tmp_13202 = (ros->denm.situation.size() != 0 ? 1 : 0);
        if(debug)
            logger->debug() << "|\033[38;5;94m011764\033[0m| Optional field situation = " << *_tmp_13202;
        char* _tmp_13203 = (char*) buffer++;
        *_tmp_13203 = (ros->denm.location.size() != 0 ? 1 : 0);
        if(debug)
            logger->debug() << "|\033[38;5;94m011765\033[0m| Optional field location = " << *_tmp_13203;
        char* _tmp_13204 = (char*) buffer++;
        *_tmp_13204 = (ros->denm.alacarte.size() != 0 ? 1 : 0);
        if(debug)
            logger->debug() << "|\033[38;5;94m011766\033[0m| Optional field alacarte = " << *_tmp_13204;
        
        // Field:  type(ManagementContainer) name(management) extGroup(0)
            // ManagementContainer  SEQUENCE
                //  actionId             ActionId                         
                //  detectionTime        TimestampIts                     
                //  referenceTime        TimestampIts                     
                //  termination          Termination                    OPTIONAL  
                //  eventPosition        ReferencePosition                
                //  awarenessDistance    StandardLength3b               OPTIONAL  
                //  trafficDirection     TrafficDirection               OPTIONAL  
                //  validityDuration     DeltaTimeSecond                  
                //  transmissionInterval DeltaTimeMilliSecondPositive   OPTIONAL  
                //  stationType          StationType                      
                //  ...
            uint8_t* _ext_flag_5827 = (uint8_t*) buffer++;  // Write extension flag for ManagementContainer
            *_ext_flag_5827 = 0;  
            
            // Optional fields bytemap
            char* _tmp_13205 = (char*) buffer++;
            *_tmp_13205 = (ros->denm.management.termination.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m011767\033[0m| Optional field termination = " << *_tmp_13205;
            char* _tmp_13206 = (char*) buffer++;
            *_tmp_13206 = (ros->denm.management.awareness_distance.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m011768\033[0m| Optional field awareness_distance = " << *_tmp_13206;
            char* _tmp_13207 = (char*) buffer++;
            *_tmp_13207 = (ros->denm.management.traffic_direction.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m011769\033[0m| Optional field traffic_direction = " << *_tmp_13207;
            char* _tmp_13208 = (char*) buffer++;
            *_tmp_13208 = (ros->denm.management.transmission_interval.size() != 0 ? 1 : 0);
            if(debug)
                logger->debug() << "|\033[38;5;94m011770\033[0m| Optional field transmission_interval = " << *_tmp_13208;
            
            // Field:  type(ActionId) name(action_id) extGroup(0)
                // ActionId  SEQUENCE
                    //  originatingStationId StationId          
                    //  sequenceNumber       SequenceNumber     
                // Optional fields bytemap
                
                // Field:  type(StationId) name(originating_station_id) extGroup(0)
                // Integer
                
                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011771\033[0m| " << tools::getTypeName(ros->denm.management.action_id.originating_station_id.value) << 
                                 " denm.management.action_id.originating_station_id.value: " << ros->denm.management.action_id.originating_station_id.value;
                }
                
                uint32_t* _tmp_13209 = (uint32_t*) buffer; buffer += 4;
                *_tmp_13209 = ros->denm.management.action_id.originating_station_id.value; 
                __aux64__ = ros->denm.management.action_id.originating_station_id.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                    return -1;
                }
                
                // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                // Integer
                
                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011772\033[0m| " << tools::getTypeName(ros->denm.management.action_id.sequence_number.value) << 
                                 " denm.management.action_id.sequence_number.value: " << ros->denm.management.action_id.sequence_number.value;
                }
                
                uint16_t* _tmp_13210 = (uint16_t*) buffer; buffer += 2;
                *_tmp_13210 = ros->denm.management.action_id.sequence_number.value; 
                __aux64__ = ros->denm.management.action_id.sequence_number.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                    logger->warning() << "Error: Value in 'denm.management.action_id.sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                    return -1;
                }
            
            // Field:  type(TimestampIts) name(detection_time) extGroup(0)
            // Real
            
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            if(debug) {
                logger->debug() << "|\033[38;5;94m011773\033[0m| " << tools::getTypeName(ros->denm.management.detection_time.value) << 
                             " denm.management.detection_time.value: " << ros->denm.management.detection_time.value;
            }
            
            float _tmp_13212 = ros->denm.management.detection_time.value;
            _tmp_13212 *= 1000.0;
            __aux64__ = static_cast<uint64_t>(_tmp_13212);
            uint64_t* _tmp_13211 = (uint64_t*) buffer; buffer += 8;
            *_tmp_13211 = static_cast<uint64_t>(_tmp_13212);
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.detection_time.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'denm.management.detection_time.value' (" << __aux64__ << ") exceeds max allowable (4398046511103); message dropped.";
                return -1;
            }
            
            // Field:  type(TimestampIts) name(reference_time) extGroup(0)
            // Real
            
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            if(debug) {
                logger->debug() << "|\033[38;5;94m011774\033[0m| " << tools::getTypeName(ros->denm.management.reference_time.value) << 
                             " denm.management.reference_time.value: " << ros->denm.management.reference_time.value;
            }
            
            float _tmp_13214 = ros->denm.management.reference_time.value;
            _tmp_13214 *= 1000.0;
            __aux64__ = static_cast<uint64_t>(_tmp_13214);
            uint64_t* _tmp_13213 = (uint64_t*) buffer; buffer += 8;
            *_tmp_13213 = static_cast<uint64_t>(_tmp_13214);
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.reference_time.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'denm.management.reference_time.value' (" << __aux64__ << ") exceeds max allowable (4398046511103); message dropped.";
                return -1;
            }
            
            if(ros->denm.management.termination.size() != 0) {
                // Field:  type(Termination) name(termination) extGroup(0)
                // Enumerated
                // INT32  min(0) max(1) span(2) dataType(Int32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011775\033[0m| " << tools::getTypeName(ros->denm.management.termination[0].value) << 
                                 " denm.management.termination[0].value: " << static_cast<int>(ros->denm.management.termination[0].value);
                }
                
                uint8_t* _tmp_13215 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_13215 = ros->denm.management.termination[0].value; 
                __aux64__ = ros->denm.management.termination[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.termination[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 1) {
                    logger->warning() << "Error: Value in 'denm.management.termination[0].value' (" << __aux64__ << ") exceeds max allowable (1); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(ReferencePosition) name(event_position) extGroup(0)
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                // Optional fields bytemap
                
                // Field:  type(Latitude) name(latitude) extGroup(0)
                // Real
                
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011776\033[0m| " << tools::getTypeName(ros->denm.management.event_position.latitude.value) << 
                                 " denm.management.event_position.latitude.value: " << ros->denm.management.event_position.latitude.value;
                }
                
                double _tmp_13217 = ros->denm.management.event_position.latitude.value;
                _tmp_13217 *= 1.0E7;
                __aux64__ = static_cast<uint64_t>(_tmp_13217);
                _tmp_13217 -= -900000000;
                uint32_t* _tmp_13216 = (uint32_t*) buffer; buffer += 4;
                *_tmp_13216 = static_cast<uint32_t>(_tmp_13217);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                    return -1;
                }
                
                // Field:  type(Longitude) name(longitude) extGroup(0)
                // Real
                
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011777\033[0m| " << tools::getTypeName(ros->denm.management.event_position.longitude.value) << 
                                 " denm.management.event_position.longitude.value: " << ros->denm.management.event_position.longitude.value;
                }
                
                double _tmp_13219 = ros->denm.management.event_position.longitude.value;
                _tmp_13219 *= 1.0E7;
                __aux64__ = static_cast<uint64_t>(_tmp_13219);
                _tmp_13219 -= -1800000000;
                uint32_t* _tmp_13218 = (uint32_t*) buffer; buffer += 4;
                *_tmp_13218 = static_cast<uint32_t>(_tmp_13219);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'denm.management.event_position.longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                    return -1;
                }
                
                // Field:  type(PosConfidenceEllipse) name(position_confidence_ellipse) extGroup(0)
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    // Optional fields bytemap
                    
                    // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m011778\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    }
                    
                    float _tmp_13221 = ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    _tmp_13221 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_13221);
                    uint16_t* _tmp_13220 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_13220 = static_cast<uint16_t>(_tmp_13221);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m011779\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    }
                    
                    float _tmp_13223 = ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    _tmp_13223 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_13223);
                    uint16_t* _tmp_13222 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_13222 = static_cast<uint16_t>(_tmp_13223);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                    // Real
                    
                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m011780\033[0m| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    float _tmp_13225 = ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    _tmp_13225 *= 10.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_13225);
                    uint16_t* _tmp_13224 = (uint16_t*) buffer; buffer += 2;
                    *_tmp_13224 = static_cast<uint16_t>(_tmp_13225);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                        return -1;
                    }
                
                // Field:  type(Altitude) name(altitude) extGroup(0)
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    // Optional fields bytemap
                    
                    // Field:  type(AltitudeValue) name(altitude_value) extGroup(0)
                    // Real
                    
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m011781\033[0m| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_value.value) << 
                                     " denm.management.event_position.altitude.altitude_value.value: " << ros->denm.management.event_position.altitude.altitude_value.value;
                    }
                    
                    float _tmp_13227 = ros->denm.management.event_position.altitude.altitude_value.value;
                    _tmp_13227 *= 100.0;
                    __aux64__ = static_cast<uint64_t>(_tmp_13227);
                    _tmp_13227 -= -100000;
                    uint32_t* _tmp_13226 = (uint32_t*) buffer; buffer += 4;
                    *_tmp_13226 = static_cast<uint32_t>(_tmp_13227);
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                        return -1;
                    }
                    
                    // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(15) span(16) dataType(Int32)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m011782\033[0m| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_confidence.value) << 
                                     " denm.management.event_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.management.event_position.altitude.altitude_confidence.value);
                    }
                    
                    uint8_t* _tmp_13228 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_13228 = ros->denm.management.event_position.altitude.altitude_confidence.value; 
                    __aux64__ = ros->denm.management.event_position.altitude.altitude_confidence.value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                        return -1;
                    }
            
            if(ros->denm.management.awareness_distance.size() != 0) {
                // Field:  type(StandardLength3b) name(awareness_distance) extGroup(0)
                // Enumerated
                // INT32  min(0) max(7) span(8) dataType(Int32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011783\033[0m| " << tools::getTypeName(ros->denm.management.awareness_distance[0].value) << 
                                 " denm.management.awareness_distance[0].value: " << static_cast<int>(ros->denm.management.awareness_distance[0].value);
                }
                
                uint8_t* _tmp_13229 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_13229 = ros->denm.management.awareness_distance[0].value; 
                __aux64__ = ros->denm.management.awareness_distance[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.awareness_distance[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->warning() << "Error: Value in 'denm.management.awareness_distance[0].value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                    return -1;
                }
            }
            
            if(ros->denm.management.traffic_direction.size() != 0) {
                // Field:  type(TrafficDirection) name(traffic_direction) extGroup(0)
                // Enumerated
                // INT32  min(0) max(3) span(4) dataType(Int32)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011784\033[0m| " << tools::getTypeName(ros->denm.management.traffic_direction[0].value) << 
                                 " denm.management.traffic_direction[0].value: " << static_cast<int>(ros->denm.management.traffic_direction[0].value);
                }
                
                uint8_t* _tmp_13230 = (uint8_t*)buffer;
                buffer += 1;
                *_tmp_13230 = ros->denm.management.traffic_direction[0].value; 
                __aux64__ = ros->denm.management.traffic_direction[0].value; 
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.management.traffic_direction[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 3) {
                    logger->warning() << "Error: Value in 'denm.management.traffic_direction[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(DeltaTimeSecond) name(validity_duration) extGroup(0)
            // Integer
            
            // UINT32  min(0) max(86400) span(86401) dataType(UInt32)
            if(debug) {
                logger->debug() << "|\033[38;5;94m011785\033[0m| " << tools::getTypeName(ros->denm.management.validity_duration.value) << 
                             " denm.management.validity_duration.value: " << ros->denm.management.validity_duration.value;
            }
            
            uint32_t* _tmp_13231 = (uint32_t*) buffer; buffer += 4;
            *_tmp_13231 = ros->denm.management.validity_duration.value; 
            __aux64__ = ros->denm.management.validity_duration.value;
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.validity_duration.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 86400) {
                logger->warning() << "Error: Value in 'denm.management.validity_duration.value' (" << __aux64__ << ") exceeds max allowable (86400); message dropped.";
                return -1;
            }
            
            if(ros->denm.management.transmission_interval.size() != 0) {
                // Field:  type(DeltaTimeMilliSecondPositive) name(transmission_interval) extGroup(0)
                // Real
                
                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011786\033[0m| " << tools::getTypeName(ros->denm.management.transmission_interval[0].value) << 
                                 " denm.management.transmission_interval[0].value: " << ros->denm.management.transmission_interval[0].value;
                }
                
                float _tmp_13233 = ros->denm.management.transmission_interval[0].value;
                _tmp_13233 *= 1000.0;
                __aux64__ = static_cast<uint64_t>(_tmp_13233);
                _tmp_13233 -= 1;
                uint16_t* _tmp_13232 = (uint16_t*) buffer; buffer += 2;
                *_tmp_13232 = static_cast<uint16_t>(_tmp_13233);
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'denm.management.transmission_interval[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 10000) {
                    logger->warning() << "Error: Value in 'denm.management.transmission_interval[0].value' (" << __aux64__ << ") exceeds max allowable (10000); message dropped.";
                    return -1;
                }
            }
            
            // Field:  type(StationType) name(station_type) extGroup(0)
            // Integer
            
            // UINT8  min(0) max(255) span(256) dataType(UInt8)
            if(debug) {
                logger->debug() << "|\033[38;5;94m011787\033[0m| " << tools::getTypeName(ros->denm.management.station_type.value) << 
                             " denm.management.station_type.value: " << static_cast<int>(ros->denm.management.station_type.value);
            }
            
            uint8_t* _tmp_13234 = (uint8_t*) buffer++;
            *_tmp_13234 = ros->denm.management.station_type.value; 
            __aux64__ = ros->denm.management.station_type.value;
            
            // MIN validator
            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'denm.management.station_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                return -1;
            }
            // MAX validator
            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                logger->warning() << "Error: Value in 'denm.management.station_type.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                return -1;
            }
            
            if(*_ext_flag_5827) {
            }
        
        if(ros->denm.situation.size() != 0) {
            // Field:  type(SituationContainer) name(situation) extGroup(0)
                // SituationContainer  SEQUENCE
                    //  informationQuality InformationQuality     
                    //  eventType          CauseCodeV2            
                    //  linkedCause        CauseCodeV2          OPTIONAL  
                    //  eventZone          EventZone            OPTIONAL  
                    //  linkedDenms        ActionIdList         OPTIONAL  Extension group #1
                    //  eventEnd           Position1d           OPTIONAL  Extension group #1
                uint8_t* _ext_flag_5845 = (uint8_t*) buffer++;  // Write extension flag for SituationContainer
                *_ext_flag_5845 = (ros->denm.situation[0].linked_denms.size() != 0 || ros->denm.situation[0].event_end.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_13236 = (char*) buffer++;
                *_tmp_13236 = (ros->denm.situation[0].linked_cause.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m011788\033[0m| Optional field linked_cause = " << *_tmp_13236;
                char* _tmp_13237 = (char*) buffer++;
                *_tmp_13237 = (ros->denm.situation[0].event_zone.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m011789\033[0m| Optional field event_zone = " << *_tmp_13237;
                
                // Field:  type(InformationQuality) name(information_quality) extGroup(0)
                // Integer
                
                // UINT8  min(0) max(7) span(8) dataType(UInt8)
                if(debug) {
                    logger->debug() << "|\033[38;5;94m011790\033[0m| " << tools::getTypeName(ros->denm.situation[0].information_quality.value) << 
                                 " denm.situation[0].information_quality.value: " << static_cast<int>(ros->denm.situation[0].information_quality.value);
                }
                
                uint8_t* _tmp_13238 = (uint8_t*) buffer++;
                *_tmp_13238 = ros->denm.situation[0].information_quality.value; 
                __aux64__ = ros->denm.situation[0].information_quality.value;
                
                // MIN validator
                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->warning() << "Error: Value in 'denm.situation[0].information_quality.value' (" << __aux64__ << ") less than (0); message dropped.";
                    return -1;
                }
                // MAX validator
                if (VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->warning() << "Error: Value in 'denm.situation[0].information_quality.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                    return -1;
                }
                
                // Field:  type(CauseCodeV2) name(event_type) extGroup(0)
                    // CauseCodeV2  SEQUENCE
                        //  ccAndScc   CauseCodeChoice     
                        //  ...
                    uint8_t* _ext_flag_5847 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                    *_ext_flag_5847 = 0;  
                    
                    // Optional fields bytemap
                    
                    // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                    // Choice
                       // #0  reserved0   SubCauseCodeType
                       // #1  trafficCondition1   TrafficConditionSubCauseCode
                       // #2  accident2   AccidentSubCauseCode
                       // #3  roadworks3   RoadworksSubCauseCode
                       // #4  reserved4   SubCauseCodeType
                       // #5  impassability5   ImpassabilitySubCauseCode
                       // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                       // #7  aquaplaning7   SubCauseCodeType
                       // #8  reserved8   SubCauseCodeType
                       // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                       // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                       // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                       // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                       // #13  reserved13   SubCauseCodeType
                       // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                       // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                       // #16  reserved16   SubCauseCodeType
                       // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                       // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                       // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                       // #20  violence20   SubCauseCodeType
                       // #21  reserved21   SubCauseCodeType
                       // #22  reserved22   SubCauseCodeType
                       // #23  reserved23   SubCauseCodeType
                       // #24  reserved24   SubCauseCodeType
                       // #25  reserved25   SubCauseCodeType
                       // #26  slowVehicle26   SlowVehicleSubCauseCode
                       // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                       // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                       // #29  reserved29   SubCauseCodeType
                       // #30  reserved30   SubCauseCodeType
                       // #31  reserved31   SubCauseCodeType
                       // #32  reserved32   SubCauseCodeType
                       // #33  reserved33   SubCauseCodeType
                       // #34  reserved34   SubCauseCodeType
                       // #35  reserved35   SubCauseCodeType
                       // #36  reserved36   SubCauseCodeType
                       // #37  reserved37   SubCauseCodeType
                       // #38  reserved38   SubCauseCodeType
                       // #39  reserved39   SubCauseCodeType
                       // #40  reserved40   SubCauseCodeType
                       // #41  reserved41   SubCauseCodeType
                       // #42  reserved42   SubCauseCodeType
                       // #43  reserved43   SubCauseCodeType
                       // #44  reserved44   SubCauseCodeType
                       // #45  reserved45   SubCauseCodeType
                       // #46  reserved46   SubCauseCodeType
                       // #47  reserved47   SubCauseCodeType
                       // #48  reserved48   SubCauseCodeType
                       // #49  reserved49   SubCauseCodeType
                       // #50  reserved50   SubCauseCodeType
                       // #51  reserved51   SubCauseCodeType
                       // #52  reserved52   SubCauseCodeType
                       // #53  reserved53   SubCauseCodeType
                       // #54  reserved54   SubCauseCodeType
                       // #55  reserved55   SubCauseCodeType
                       // #56  reserved56   SubCauseCodeType
                       // #57  reserved57   SubCauseCodeType
                       // #58  reserved58   SubCauseCodeType
                       // #59  reserved59   SubCauseCodeType
                       // #60  reserved60   SubCauseCodeType
                       // #61  reserved61   SubCauseCodeType
                       // #62  reserved62   SubCauseCodeType
                       // #63  reserved63   SubCauseCodeType
                       // #64  reserved64   SubCauseCodeType
                       // #65  reserved65   SubCauseCodeType
                       // #66  reserved66   SubCauseCodeType
                       // #67  reserved67   SubCauseCodeType
                       // #68  reserved68   SubCauseCodeType
                       // #69  reserved69   SubCauseCodeType
                       // #70  reserved70   SubCauseCodeType
                       // #71  reserved71   SubCauseCodeType
                       // #72  reserved72   SubCauseCodeType
                       // #73  reserved73   SubCauseCodeType
                       // #74  reserved74   SubCauseCodeType
                       // #75  reserved75   SubCauseCodeType
                       // #76  reserved76   SubCauseCodeType
                       // #77  reserved77   SubCauseCodeType
                       // #78  reserved78   SubCauseCodeType
                       // #79  reserved79   SubCauseCodeType
                       // #80  reserved80   SubCauseCodeType
                       // #81  reserved81   SubCauseCodeType
                       // #82  reserved82   SubCauseCodeType
                       // #83  reserved83   SubCauseCodeType
                       // #84  reserved84   SubCauseCodeType
                       // #85  reserved85   SubCauseCodeType
                       // #86  reserved86   SubCauseCodeType
                       // #87  reserved87   SubCauseCodeType
                       // #88  reserved88   SubCauseCodeType
                       // #89  reserved89   SubCauseCodeType
                       // #90  reserved90   SubCauseCodeType
                       // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                       // #92  postCrash92   PostCrashSubCauseCode
                       // #93  humanProblem93   HumanProblemSubCauseCode
                       // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                       // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                       // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                       // #97  collisionRisk97   CollisionRiskSubCauseCode
                       // #98  signalViolation98   SignalViolationSubCauseCode
                       // #99  dangerousSituation99   DangerousSituationSubCauseCode
                       // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                       // #101  reserved101   SubCauseCodeType
                       // #102  reserved102   SubCauseCodeType
                       // #103  reserved103   SubCauseCodeType
                       // #104  reserved104   SubCauseCodeType
                       // #105  reserved105   SubCauseCodeType
                       // #106  reserved106   SubCauseCodeType
                       // #107  reserved107   SubCauseCodeType
                       // #108  reserved108   SubCauseCodeType
                       // #109  reserved109   SubCauseCodeType
                       // #110  reserved110   SubCauseCodeType
                       // #111  reserved111   SubCauseCodeType
                       // #112  reserved112   SubCauseCodeType
                       // #113  reserved113   SubCauseCodeType
                       // #114  reserved114   SubCauseCodeType
                       // #115  reserved115   SubCauseCodeType
                       // #116  reserved116   SubCauseCodeType
                       // #117  reserved117   SubCauseCodeType
                       // #118  reserved118   SubCauseCodeType
                       // #119  reserved119   SubCauseCodeType
                       // #120  reserved120   SubCauseCodeType
                       // #121  reserved121   SubCauseCodeType
                       // #122  reserved122   SubCauseCodeType
                       // #123  reserved123   SubCauseCodeType
                       // #124  reserved124   SubCauseCodeType
                       // #125  reserved125   SubCauseCodeType
                       // #126  reserved126   SubCauseCodeType
                       // #127  reserved127   SubCauseCodeType
                       // #128  reserved128   SubCauseCodeType
                    uint8_t* _choice_351 = (uint8_t*) buffer;
                    buffer++;
                    
                    if(ros->denm.situation[0].event_type.cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                        *_choice_351 = 0;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011791\033[0m| Choice selection: 0";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011792\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value);
                        }
                        
                        uint8_t* _tmp_13239 = (uint8_t*) buffer++;
                        *_tmp_13239 = ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 1;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011793\033[0m| Choice selection: 1";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011794\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value);
                        }
                        
                        uint8_t* _tmp_13240 = (uint8_t*) buffer++;
                        *_tmp_13240 = ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 2;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011795\033[0m| Choice selection: 2";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011796\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value);
                        }
                        
                        uint8_t* _tmp_13241 = (uint8_t*) buffer++;
                        *_tmp_13241 = ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 3;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011797\033[0m| Choice selection: 3";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011798\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value);
                        }
                        
                        uint8_t* _tmp_13242 = (uint8_t*) buffer++;
                        *_tmp_13242 = ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 4;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011799\033[0m| Choice selection: 4";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011800\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value);
                        }
                        
                        uint8_t* _tmp_13243 = (uint8_t*) buffer++;
                        *_tmp_13243 = ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 5;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011801\033[0m| Choice selection: 5";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011802\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value);
                        }
                        
                        uint8_t* _tmp_13244 = (uint8_t*) buffer++;
                        *_tmp_13244 = ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 6;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011803\033[0m| Choice selection: 6";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011804\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                        }
                        
                        uint8_t* _tmp_13245 = (uint8_t*) buffer++;
                        *_tmp_13245 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 7;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011805\033[0m| Choice selection: 7";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011806\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value);
                        }
                        
                        uint8_t* _tmp_13246 = (uint8_t*) buffer++;
                        *_tmp_13246 = ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 8;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011807\033[0m| Choice selection: 8";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011808\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value);
                        }
                        
                        uint8_t* _tmp_13247 = (uint8_t*) buffer++;
                        *_tmp_13247 = ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 9;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011809\033[0m| Choice selection: 9";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011810\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value);
                        }
                        
                        uint8_t* _tmp_13248 = (uint8_t*) buffer++;
                        *_tmp_13248 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 10;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011811\033[0m| Choice selection: 10";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011812\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                        }
                        
                        uint8_t* _tmp_13249 = (uint8_t*) buffer++;
                        *_tmp_13249 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 11;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011813\033[0m| Choice selection: 11";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011814\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                        }
                        
                        uint8_t* _tmp_13250 = (uint8_t*) buffer++;
                        *_tmp_13250 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 12;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011815\033[0m| Choice selection: 12";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011816\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value);
                        }
                        
                        uint8_t* _tmp_13251 = (uint8_t*) buffer++;
                        *_tmp_13251 = ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 13;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011817\033[0m| Choice selection: 13";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011818\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value);
                        }
                        
                        uint8_t* _tmp_13252 = (uint8_t*) buffer++;
                        *_tmp_13252 = ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 14;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011819\033[0m| Choice selection: 14";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011820\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value);
                        }
                        
                        uint8_t* _tmp_13253 = (uint8_t*) buffer++;
                        *_tmp_13253 = ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 15;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011821\033[0m| Choice selection: 15";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011822\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                        }
                        
                        uint8_t* _tmp_13254 = (uint8_t*) buffer++;
                        *_tmp_13254 = ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 16;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011823\033[0m| Choice selection: 16";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011824\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value);
                        }
                        
                        uint8_t* _tmp_13255 = (uint8_t*) buffer++;
                        *_tmp_13255 = ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 17;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011825\033[0m| Choice selection: 17";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011826\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                        }
                        
                        uint8_t* _tmp_13256 = (uint8_t*) buffer++;
                        *_tmp_13256 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 18;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011827\033[0m| Choice selection: 18";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011828\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value);
                        }
                        
                        uint8_t* _tmp_13257 = (uint8_t*) buffer++;
                        *_tmp_13257 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 19;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011829\033[0m| Choice selection: 19";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011830\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                        }
                        
                        uint8_t* _tmp_13258 = (uint8_t*) buffer++;
                        *_tmp_13258 = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 20;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011831\033[0m| Choice selection: 20";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011832\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value);
                        }
                        
                        uint8_t* _tmp_13259 = (uint8_t*) buffer++;
                        *_tmp_13259 = ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 21;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011833\033[0m| Choice selection: 21";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011834\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value);
                        }
                        
                        uint8_t* _tmp_13260 = (uint8_t*) buffer++;
                        *_tmp_13260 = ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 22;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011835\033[0m| Choice selection: 22";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011836\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value);
                        }
                        
                        uint8_t* _tmp_13261 = (uint8_t*) buffer++;
                        *_tmp_13261 = ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 23;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011837\033[0m| Choice selection: 23";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011838\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value);
                        }
                        
                        uint8_t* _tmp_13262 = (uint8_t*) buffer++;
                        *_tmp_13262 = ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 24;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011839\033[0m| Choice selection: 24";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011840\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value);
                        }
                        
                        uint8_t* _tmp_13263 = (uint8_t*) buffer++;
                        *_tmp_13263 = ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 25;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011841\033[0m| Choice selection: 25";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011842\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value);
                        }
                        
                        uint8_t* _tmp_13264 = (uint8_t*) buffer++;
                        *_tmp_13264 = ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 26;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011843\033[0m| Choice selection: 26";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011844\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value);
                        }
                        
                        uint8_t* _tmp_13265 = (uint8_t*) buffer++;
                        *_tmp_13265 = ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 27;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011845\033[0m| Choice selection: 27";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011846\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value);
                        }
                        
                        uint8_t* _tmp_13266 = (uint8_t*) buffer++;
                        *_tmp_13266 = ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 28;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011847\033[0m| Choice selection: 28";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011848\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value);
                        }
                        
                        uint8_t* _tmp_13267 = (uint8_t*) buffer++;
                        *_tmp_13267 = ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 29;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011849\033[0m| Choice selection: 29";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011850\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value);
                        }
                        
                        uint8_t* _tmp_13268 = (uint8_t*) buffer++;
                        *_tmp_13268 = ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 30;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011851\033[0m| Choice selection: 30";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011852\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value);
                        }
                        
                        uint8_t* _tmp_13269 = (uint8_t*) buffer++;
                        *_tmp_13269 = ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 31;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011853\033[0m| Choice selection: 31";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011854\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value);
                        }
                        
                        uint8_t* _tmp_13270 = (uint8_t*) buffer++;
                        *_tmp_13270 = ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 32;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011855\033[0m| Choice selection: 32";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011856\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value);
                        }
                        
                        uint8_t* _tmp_13271 = (uint8_t*) buffer++;
                        *_tmp_13271 = ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 33;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011857\033[0m| Choice selection: 33";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011858\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value);
                        }
                        
                        uint8_t* _tmp_13272 = (uint8_t*) buffer++;
                        *_tmp_13272 = ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 34;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011859\033[0m| Choice selection: 34";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011860\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value);
                        }
                        
                        uint8_t* _tmp_13273 = (uint8_t*) buffer++;
                        *_tmp_13273 = ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 35;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011861\033[0m| Choice selection: 35";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011862\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value);
                        }
                        
                        uint8_t* _tmp_13274 = (uint8_t*) buffer++;
                        *_tmp_13274 = ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 36;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011863\033[0m| Choice selection: 36";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011864\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value);
                        }
                        
                        uint8_t* _tmp_13275 = (uint8_t*) buffer++;
                        *_tmp_13275 = ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 37;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011865\033[0m| Choice selection: 37";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011866\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value);
                        }
                        
                        uint8_t* _tmp_13276 = (uint8_t*) buffer++;
                        *_tmp_13276 = ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 38;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011867\033[0m| Choice selection: 38";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011868\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value);
                        }
                        
                        uint8_t* _tmp_13277 = (uint8_t*) buffer++;
                        *_tmp_13277 = ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 39;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011869\033[0m| Choice selection: 39";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011870\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value);
                        }
                        
                        uint8_t* _tmp_13278 = (uint8_t*) buffer++;
                        *_tmp_13278 = ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 40;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011871\033[0m| Choice selection: 40";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011872\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value);
                        }
                        
                        uint8_t* _tmp_13279 = (uint8_t*) buffer++;
                        *_tmp_13279 = ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 41;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011873\033[0m| Choice selection: 41";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011874\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value);
                        }
                        
                        uint8_t* _tmp_13280 = (uint8_t*) buffer++;
                        *_tmp_13280 = ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 42;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011875\033[0m| Choice selection: 42";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011876\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value);
                        }
                        
                        uint8_t* _tmp_13281 = (uint8_t*) buffer++;
                        *_tmp_13281 = ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 43;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011877\033[0m| Choice selection: 43";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011878\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value);
                        }
                        
                        uint8_t* _tmp_13282 = (uint8_t*) buffer++;
                        *_tmp_13282 = ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 44;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011879\033[0m| Choice selection: 44";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011880\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value);
                        }
                        
                        uint8_t* _tmp_13283 = (uint8_t*) buffer++;
                        *_tmp_13283 = ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 45;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011881\033[0m| Choice selection: 45";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011882\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value);
                        }
                        
                        uint8_t* _tmp_13284 = (uint8_t*) buffer++;
                        *_tmp_13284 = ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 46;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011883\033[0m| Choice selection: 46";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011884\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value);
                        }
                        
                        uint8_t* _tmp_13285 = (uint8_t*) buffer++;
                        *_tmp_13285 = ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 47;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011885\033[0m| Choice selection: 47";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011886\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value);
                        }
                        
                        uint8_t* _tmp_13286 = (uint8_t*) buffer++;
                        *_tmp_13286 = ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 48;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011887\033[0m| Choice selection: 48";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011888\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value);
                        }
                        
                        uint8_t* _tmp_13287 = (uint8_t*) buffer++;
                        *_tmp_13287 = ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 49;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011889\033[0m| Choice selection: 49";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011890\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value);
                        }
                        
                        uint8_t* _tmp_13288 = (uint8_t*) buffer++;
                        *_tmp_13288 = ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 50;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011891\033[0m| Choice selection: 50";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011892\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value);
                        }
                        
                        uint8_t* _tmp_13289 = (uint8_t*) buffer++;
                        *_tmp_13289 = ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 51;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011893\033[0m| Choice selection: 51";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011894\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value);
                        }
                        
                        uint8_t* _tmp_13290 = (uint8_t*) buffer++;
                        *_tmp_13290 = ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 52;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011895\033[0m| Choice selection: 52";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011896\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value);
                        }
                        
                        uint8_t* _tmp_13291 = (uint8_t*) buffer++;
                        *_tmp_13291 = ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 53;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011897\033[0m| Choice selection: 53";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011898\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value);
                        }
                        
                        uint8_t* _tmp_13292 = (uint8_t*) buffer++;
                        *_tmp_13292 = ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 54;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011899\033[0m| Choice selection: 54";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011900\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value);
                        }
                        
                        uint8_t* _tmp_13293 = (uint8_t*) buffer++;
                        *_tmp_13293 = ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 55;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011901\033[0m| Choice selection: 55";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011902\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value);
                        }
                        
                        uint8_t* _tmp_13294 = (uint8_t*) buffer++;
                        *_tmp_13294 = ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 56;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011903\033[0m| Choice selection: 56";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011904\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value);
                        }
                        
                        uint8_t* _tmp_13295 = (uint8_t*) buffer++;
                        *_tmp_13295 = ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 57;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011905\033[0m| Choice selection: 57";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011906\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value);
                        }
                        
                        uint8_t* _tmp_13296 = (uint8_t*) buffer++;
                        *_tmp_13296 = ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 58;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011907\033[0m| Choice selection: 58";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011908\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value);
                        }
                        
                        uint8_t* _tmp_13297 = (uint8_t*) buffer++;
                        *_tmp_13297 = ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 59;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011909\033[0m| Choice selection: 59";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011910\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value);
                        }
                        
                        uint8_t* _tmp_13298 = (uint8_t*) buffer++;
                        *_tmp_13298 = ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 60;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011911\033[0m| Choice selection: 60";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011912\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value);
                        }
                        
                        uint8_t* _tmp_13299 = (uint8_t*) buffer++;
                        *_tmp_13299 = ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 61;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011913\033[0m| Choice selection: 61";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011914\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value);
                        }
                        
                        uint8_t* _tmp_13300 = (uint8_t*) buffer++;
                        *_tmp_13300 = ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 62;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011915\033[0m| Choice selection: 62";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011916\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value);
                        }
                        
                        uint8_t* _tmp_13301 = (uint8_t*) buffer++;
                        *_tmp_13301 = ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 63;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011917\033[0m| Choice selection: 63";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011918\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value);
                        }
                        
                        uint8_t* _tmp_13302 = (uint8_t*) buffer++;
                        *_tmp_13302 = ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 64;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011919\033[0m| Choice selection: 64";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011920\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value);
                        }
                        
                        uint8_t* _tmp_13303 = (uint8_t*) buffer++;
                        *_tmp_13303 = ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 65;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011921\033[0m| Choice selection: 65";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011922\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value);
                        }
                        
                        uint8_t* _tmp_13304 = (uint8_t*) buffer++;
                        *_tmp_13304 = ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 66;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011923\033[0m| Choice selection: 66";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011924\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value);
                        }
                        
                        uint8_t* _tmp_13305 = (uint8_t*) buffer++;
                        *_tmp_13305 = ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 67;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011925\033[0m| Choice selection: 67";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011926\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value);
                        }
                        
                        uint8_t* _tmp_13306 = (uint8_t*) buffer++;
                        *_tmp_13306 = ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 68;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011927\033[0m| Choice selection: 68";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011928\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value);
                        }
                        
                        uint8_t* _tmp_13307 = (uint8_t*) buffer++;
                        *_tmp_13307 = ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 69;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011929\033[0m| Choice selection: 69";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011930\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value);
                        }
                        
                        uint8_t* _tmp_13308 = (uint8_t*) buffer++;
                        *_tmp_13308 = ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 70;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011931\033[0m| Choice selection: 70";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011932\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value);
                        }
                        
                        uint8_t* _tmp_13309 = (uint8_t*) buffer++;
                        *_tmp_13309 = ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 71;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011933\033[0m| Choice selection: 71";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011934\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value);
                        }
                        
                        uint8_t* _tmp_13310 = (uint8_t*) buffer++;
                        *_tmp_13310 = ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 72;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011935\033[0m| Choice selection: 72";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011936\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value);
                        }
                        
                        uint8_t* _tmp_13311 = (uint8_t*) buffer++;
                        *_tmp_13311 = ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 73;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011937\033[0m| Choice selection: 73";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011938\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value);
                        }
                        
                        uint8_t* _tmp_13312 = (uint8_t*) buffer++;
                        *_tmp_13312 = ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 74;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011939\033[0m| Choice selection: 74";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011940\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value);
                        }
                        
                        uint8_t* _tmp_13313 = (uint8_t*) buffer++;
                        *_tmp_13313 = ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 75;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011941\033[0m| Choice selection: 75";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011942\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value);
                        }
                        
                        uint8_t* _tmp_13314 = (uint8_t*) buffer++;
                        *_tmp_13314 = ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 76;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011943\033[0m| Choice selection: 76";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011944\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value);
                        }
                        
                        uint8_t* _tmp_13315 = (uint8_t*) buffer++;
                        *_tmp_13315 = ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 77;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011945\033[0m| Choice selection: 77";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011946\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value);
                        }
                        
                        uint8_t* _tmp_13316 = (uint8_t*) buffer++;
                        *_tmp_13316 = ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 78;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011947\033[0m| Choice selection: 78";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011948\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value);
                        }
                        
                        uint8_t* _tmp_13317 = (uint8_t*) buffer++;
                        *_tmp_13317 = ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 79;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011949\033[0m| Choice selection: 79";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011950\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value);
                        }
                        
                        uint8_t* _tmp_13318 = (uint8_t*) buffer++;
                        *_tmp_13318 = ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 80;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011951\033[0m| Choice selection: 80";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011952\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value);
                        }
                        
                        uint8_t* _tmp_13319 = (uint8_t*) buffer++;
                        *_tmp_13319 = ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 81;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011953\033[0m| Choice selection: 81";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011954\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value);
                        }
                        
                        uint8_t* _tmp_13320 = (uint8_t*) buffer++;
                        *_tmp_13320 = ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 82;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011955\033[0m| Choice selection: 82";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011956\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value);
                        }
                        
                        uint8_t* _tmp_13321 = (uint8_t*) buffer++;
                        *_tmp_13321 = ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 83;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011957\033[0m| Choice selection: 83";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011958\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value);
                        }
                        
                        uint8_t* _tmp_13322 = (uint8_t*) buffer++;
                        *_tmp_13322 = ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 84;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011959\033[0m| Choice selection: 84";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011960\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value);
                        }
                        
                        uint8_t* _tmp_13323 = (uint8_t*) buffer++;
                        *_tmp_13323 = ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 85;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011961\033[0m| Choice selection: 85";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011962\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value);
                        }
                        
                        uint8_t* _tmp_13324 = (uint8_t*) buffer++;
                        *_tmp_13324 = ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 86;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011963\033[0m| Choice selection: 86";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011964\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value);
                        }
                        
                        uint8_t* _tmp_13325 = (uint8_t*) buffer++;
                        *_tmp_13325 = ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 87;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011965\033[0m| Choice selection: 87";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011966\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value);
                        }
                        
                        uint8_t* _tmp_13326 = (uint8_t*) buffer++;
                        *_tmp_13326 = ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 88;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011967\033[0m| Choice selection: 88";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011968\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value);
                        }
                        
                        uint8_t* _tmp_13327 = (uint8_t*) buffer++;
                        *_tmp_13327 = ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 89;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011969\033[0m| Choice selection: 89";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011970\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value);
                        }
                        
                        uint8_t* _tmp_13328 = (uint8_t*) buffer++;
                        *_tmp_13328 = ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 90;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011971\033[0m| Choice selection: 90";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011972\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value);
                        }
                        
                        uint8_t* _tmp_13329 = (uint8_t*) buffer++;
                        *_tmp_13329 = ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 91;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011973\033[0m| Choice selection: 91";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011974\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value);
                        }
                        
                        uint8_t* _tmp_13330 = (uint8_t*) buffer++;
                        *_tmp_13330 = ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 92;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011975\033[0m| Choice selection: 92";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011976\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value);
                        }
                        
                        uint8_t* _tmp_13331 = (uint8_t*) buffer++;
                        *_tmp_13331 = ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 93;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011977\033[0m| Choice selection: 93";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011978\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value);
                        }
                        
                        uint8_t* _tmp_13332 = (uint8_t*) buffer++;
                        *_tmp_13332 = ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 94;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011979\033[0m| Choice selection: 94";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011980\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value);
                        }
                        
                        uint8_t* _tmp_13333 = (uint8_t*) buffer++;
                        *_tmp_13333 = ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 95;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011981\033[0m| Choice selection: 95";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011982\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value);
                        }
                        
                        uint8_t* _tmp_13334 = (uint8_t*) buffer++;
                        *_tmp_13334 = ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 96;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011983\033[0m| Choice selection: 96";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011984\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                        }
                        
                        uint8_t* _tmp_13335 = (uint8_t*) buffer++;
                        *_tmp_13335 = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 97;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011985\033[0m| Choice selection: 97";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011986\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value);
                        }
                        
                        uint8_t* _tmp_13336 = (uint8_t*) buffer++;
                        *_tmp_13336 = ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 98;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011987\033[0m| Choice selection: 98";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011988\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value);
                        }
                        
                        uint8_t* _tmp_13337 = (uint8_t*) buffer++;
                        *_tmp_13337 = ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 99;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011989\033[0m| Choice selection: 99";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011990\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value);
                        }
                        
                        uint8_t* _tmp_13338 = (uint8_t*) buffer++;
                        *_tmp_13338 = ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 100;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011991\033[0m| Choice selection: 100";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011992\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value);
                        }
                        
                        uint8_t* _tmp_13339 = (uint8_t*) buffer++;
                        *_tmp_13339 = ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 101;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011993\033[0m| Choice selection: 101";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011994\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value);
                        }
                        
                        uint8_t* _tmp_13340 = (uint8_t*) buffer++;
                        *_tmp_13340 = ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 102;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011995\033[0m| Choice selection: 102";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011996\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value);
                        }
                        
                        uint8_t* _tmp_13341 = (uint8_t*) buffer++;
                        *_tmp_13341 = ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 103;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011997\033[0m| Choice selection: 103";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m011998\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value);
                        }
                        
                        uint8_t* _tmp_13342 = (uint8_t*) buffer++;
                        *_tmp_13342 = ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 104;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m011999\033[0m| Choice selection: 104";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012000\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value);
                        }
                        
                        uint8_t* _tmp_13343 = (uint8_t*) buffer++;
                        *_tmp_13343 = ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 105;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012001\033[0m| Choice selection: 105";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012002\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value);
                        }
                        
                        uint8_t* _tmp_13344 = (uint8_t*) buffer++;
                        *_tmp_13344 = ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 106;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012003\033[0m| Choice selection: 106";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012004\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value);
                        }
                        
                        uint8_t* _tmp_13345 = (uint8_t*) buffer++;
                        *_tmp_13345 = ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 107;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012005\033[0m| Choice selection: 107";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012006\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value);
                        }
                        
                        uint8_t* _tmp_13346 = (uint8_t*) buffer++;
                        *_tmp_13346 = ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 108;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012007\033[0m| Choice selection: 108";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012008\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value);
                        }
                        
                        uint8_t* _tmp_13347 = (uint8_t*) buffer++;
                        *_tmp_13347 = ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 109;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012009\033[0m| Choice selection: 109";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012010\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value);
                        }
                        
                        uint8_t* _tmp_13348 = (uint8_t*) buffer++;
                        *_tmp_13348 = ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 110;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012011\033[0m| Choice selection: 110";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012012\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value);
                        }
                        
                        uint8_t* _tmp_13349 = (uint8_t*) buffer++;
                        *_tmp_13349 = ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 111;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012013\033[0m| Choice selection: 111";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012014\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value);
                        }
                        
                        uint8_t* _tmp_13350 = (uint8_t*) buffer++;
                        *_tmp_13350 = ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 112;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012015\033[0m| Choice selection: 112";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012016\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value);
                        }
                        
                        uint8_t* _tmp_13351 = (uint8_t*) buffer++;
                        *_tmp_13351 = ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 113;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012017\033[0m| Choice selection: 113";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012018\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value);
                        }
                        
                        uint8_t* _tmp_13352 = (uint8_t*) buffer++;
                        *_tmp_13352 = ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 114;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012019\033[0m| Choice selection: 114";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012020\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value);
                        }
                        
                        uint8_t* _tmp_13353 = (uint8_t*) buffer++;
                        *_tmp_13353 = ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 115;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012021\033[0m| Choice selection: 115";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012022\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value);
                        }
                        
                        uint8_t* _tmp_13354 = (uint8_t*) buffer++;
                        *_tmp_13354 = ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 116;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012023\033[0m| Choice selection: 116";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012024\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value);
                        }
                        
                        uint8_t* _tmp_13355 = (uint8_t*) buffer++;
                        *_tmp_13355 = ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 117;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012025\033[0m| Choice selection: 117";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012026\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value);
                        }
                        
                        uint8_t* _tmp_13356 = (uint8_t*) buffer++;
                        *_tmp_13356 = ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 118;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012027\033[0m| Choice selection: 118";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012028\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value);
                        }
                        
                        uint8_t* _tmp_13357 = (uint8_t*) buffer++;
                        *_tmp_13357 = ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 119;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012029\033[0m| Choice selection: 119";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012030\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value);
                        }
                        
                        uint8_t* _tmp_13358 = (uint8_t*) buffer++;
                        *_tmp_13358 = ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 120;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012031\033[0m| Choice selection: 120";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012032\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value);
                        }
                        
                        uint8_t* _tmp_13359 = (uint8_t*) buffer++;
                        *_tmp_13359 = ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 121;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012033\033[0m| Choice selection: 121";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012034\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value);
                        }
                        
                        uint8_t* _tmp_13360 = (uint8_t*) buffer++;
                        *_tmp_13360 = ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 122;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012035\033[0m| Choice selection: 122";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012036\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value);
                        }
                        
                        uint8_t* _tmp_13361 = (uint8_t*) buffer++;
                        *_tmp_13361 = ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 123;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012037\033[0m| Choice selection: 123";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012038\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value);
                        }
                        
                        uint8_t* _tmp_13362 = (uint8_t*) buffer++;
                        *_tmp_13362 = ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 124;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012039\033[0m| Choice selection: 124";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012040\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value);
                        }
                        
                        uint8_t* _tmp_13363 = (uint8_t*) buffer++;
                        *_tmp_13363 = ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 125;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012041\033[0m| Choice selection: 125";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012042\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value);
                        }
                        
                        uint8_t* _tmp_13364 = (uint8_t*) buffer++;
                        *_tmp_13364 = ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 126;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012043\033[0m| Choice selection: 126";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012044\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value);
                        }
                        
                        uint8_t* _tmp_13365 = (uint8_t*) buffer++;
                        *_tmp_13365 = ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 127;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012045\033[0m| Choice selection: 127";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012046\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value);
                        }
                        
                        uint8_t* _tmp_13366 = (uint8_t*) buffer++;
                        *_tmp_13366 = ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else if(ros->denm.situation[0].event_type.cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                    {
                        *_choice_351 = 128;  // Setting choice selection
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012047\033[0m| Choice selection: 128";
                    
                        // Integer
                        
                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012048\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value);
                        }
                        
                        uint8_t* _tmp_13367 = (uint8_t*) buffer++;
                        *_tmp_13367 = ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value; 
                        __aux64__ = ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                    
                    }
                    else
                    {
                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_351) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].event_type.cc_and_scc'; message dropped.";
                        return -1;
                    }
                    
                    if(*_ext_flag_5847) {
                    }
                
                if(ros->denm.situation[0].linked_cause.size() != 0) {
                    // Field:  type(CauseCodeV2) name(linked_cause) extGroup(0)
                        // CauseCodeV2  SEQUENCE
                            //  ccAndScc   CauseCodeChoice     
                            //  ...
                        uint8_t* _ext_flag_5978 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                        *_ext_flag_5978 = 0;  
                        
                        // Optional fields bytemap
                        
                        // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                        // Choice
                           // #0  reserved0   SubCauseCodeType
                           // #1  trafficCondition1   TrafficConditionSubCauseCode
                           // #2  accident2   AccidentSubCauseCode
                           // #3  roadworks3   RoadworksSubCauseCode
                           // #4  reserved4   SubCauseCodeType
                           // #5  impassability5   ImpassabilitySubCauseCode
                           // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                           // #7  aquaplaning7   SubCauseCodeType
                           // #8  reserved8   SubCauseCodeType
                           // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                           // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                           // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                           // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                           // #13  reserved13   SubCauseCodeType
                           // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                           // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                           // #16  reserved16   SubCauseCodeType
                           // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                           // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                           // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                           // #20  violence20   SubCauseCodeType
                           // #21  reserved21   SubCauseCodeType
                           // #22  reserved22   SubCauseCodeType
                           // #23  reserved23   SubCauseCodeType
                           // #24  reserved24   SubCauseCodeType
                           // #25  reserved25   SubCauseCodeType
                           // #26  slowVehicle26   SlowVehicleSubCauseCode
                           // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                           // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                           // #29  reserved29   SubCauseCodeType
                           // #30  reserved30   SubCauseCodeType
                           // #31  reserved31   SubCauseCodeType
                           // #32  reserved32   SubCauseCodeType
                           // #33  reserved33   SubCauseCodeType
                           // #34  reserved34   SubCauseCodeType
                           // #35  reserved35   SubCauseCodeType
                           // #36  reserved36   SubCauseCodeType
                           // #37  reserved37   SubCauseCodeType
                           // #38  reserved38   SubCauseCodeType
                           // #39  reserved39   SubCauseCodeType
                           // #40  reserved40   SubCauseCodeType
                           // #41  reserved41   SubCauseCodeType
                           // #42  reserved42   SubCauseCodeType
                           // #43  reserved43   SubCauseCodeType
                           // #44  reserved44   SubCauseCodeType
                           // #45  reserved45   SubCauseCodeType
                           // #46  reserved46   SubCauseCodeType
                           // #47  reserved47   SubCauseCodeType
                           // #48  reserved48   SubCauseCodeType
                           // #49  reserved49   SubCauseCodeType
                           // #50  reserved50   SubCauseCodeType
                           // #51  reserved51   SubCauseCodeType
                           // #52  reserved52   SubCauseCodeType
                           // #53  reserved53   SubCauseCodeType
                           // #54  reserved54   SubCauseCodeType
                           // #55  reserved55   SubCauseCodeType
                           // #56  reserved56   SubCauseCodeType
                           // #57  reserved57   SubCauseCodeType
                           // #58  reserved58   SubCauseCodeType
                           // #59  reserved59   SubCauseCodeType
                           // #60  reserved60   SubCauseCodeType
                           // #61  reserved61   SubCauseCodeType
                           // #62  reserved62   SubCauseCodeType
                           // #63  reserved63   SubCauseCodeType
                           // #64  reserved64   SubCauseCodeType
                           // #65  reserved65   SubCauseCodeType
                           // #66  reserved66   SubCauseCodeType
                           // #67  reserved67   SubCauseCodeType
                           // #68  reserved68   SubCauseCodeType
                           // #69  reserved69   SubCauseCodeType
                           // #70  reserved70   SubCauseCodeType
                           // #71  reserved71   SubCauseCodeType
                           // #72  reserved72   SubCauseCodeType
                           // #73  reserved73   SubCauseCodeType
                           // #74  reserved74   SubCauseCodeType
                           // #75  reserved75   SubCauseCodeType
                           // #76  reserved76   SubCauseCodeType
                           // #77  reserved77   SubCauseCodeType
                           // #78  reserved78   SubCauseCodeType
                           // #79  reserved79   SubCauseCodeType
                           // #80  reserved80   SubCauseCodeType
                           // #81  reserved81   SubCauseCodeType
                           // #82  reserved82   SubCauseCodeType
                           // #83  reserved83   SubCauseCodeType
                           // #84  reserved84   SubCauseCodeType
                           // #85  reserved85   SubCauseCodeType
                           // #86  reserved86   SubCauseCodeType
                           // #87  reserved87   SubCauseCodeType
                           // #88  reserved88   SubCauseCodeType
                           // #89  reserved89   SubCauseCodeType
                           // #90  reserved90   SubCauseCodeType
                           // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                           // #92  postCrash92   PostCrashSubCauseCode
                           // #93  humanProblem93   HumanProblemSubCauseCode
                           // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                           // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                           // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                           // #97  collisionRisk97   CollisionRiskSubCauseCode
                           // #98  signalViolation98   SignalViolationSubCauseCode
                           // #99  dangerousSituation99   DangerousSituationSubCauseCode
                           // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                           // #101  reserved101   SubCauseCodeType
                           // #102  reserved102   SubCauseCodeType
                           // #103  reserved103   SubCauseCodeType
                           // #104  reserved104   SubCauseCodeType
                           // #105  reserved105   SubCauseCodeType
                           // #106  reserved106   SubCauseCodeType
                           // #107  reserved107   SubCauseCodeType
                           // #108  reserved108   SubCauseCodeType
                           // #109  reserved109   SubCauseCodeType
                           // #110  reserved110   SubCauseCodeType
                           // #111  reserved111   SubCauseCodeType
                           // #112  reserved112   SubCauseCodeType
                           // #113  reserved113   SubCauseCodeType
                           // #114  reserved114   SubCauseCodeType
                           // #115  reserved115   SubCauseCodeType
                           // #116  reserved116   SubCauseCodeType
                           // #117  reserved117   SubCauseCodeType
                           // #118  reserved118   SubCauseCodeType
                           // #119  reserved119   SubCauseCodeType
                           // #120  reserved120   SubCauseCodeType
                           // #121  reserved121   SubCauseCodeType
                           // #122  reserved122   SubCauseCodeType
                           // #123  reserved123   SubCauseCodeType
                           // #124  reserved124   SubCauseCodeType
                           // #125  reserved125   SubCauseCodeType
                           // #126  reserved126   SubCauseCodeType
                           // #127  reserved127   SubCauseCodeType
                           // #128  reserved128   SubCauseCodeType
                        uint8_t* _choice_352 = (uint8_t*) buffer;
                        buffer++;
                        
                        if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                            *_choice_352 = 0;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012049\033[0m| Choice selection: 0";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012050\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value);
                            }
                            
                            uint8_t* _tmp_13369 = (uint8_t*) buffer++;
                            *_tmp_13369 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 1;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012051\033[0m| Choice selection: 1";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012052\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value);
                            }
                            
                            uint8_t* _tmp_13370 = (uint8_t*) buffer++;
                            *_tmp_13370 = ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 2;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012053\033[0m| Choice selection: 2";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012054\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value);
                            }
                            
                            uint8_t* _tmp_13371 = (uint8_t*) buffer++;
                            *_tmp_13371 = ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 3;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012055\033[0m| Choice selection: 3";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012056\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value);
                            }
                            
                            uint8_t* _tmp_13372 = (uint8_t*) buffer++;
                            *_tmp_13372 = ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 4;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012057\033[0m| Choice selection: 4";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012058\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value);
                            }
                            
                            uint8_t* _tmp_13373 = (uint8_t*) buffer++;
                            *_tmp_13373 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 5;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012059\033[0m| Choice selection: 5";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012060\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value);
                            }
                            
                            uint8_t* _tmp_13374 = (uint8_t*) buffer++;
                            *_tmp_13374 = ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 6;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012061\033[0m| Choice selection: 6";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012062\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                            }
                            
                            uint8_t* _tmp_13375 = (uint8_t*) buffer++;
                            *_tmp_13375 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 7;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012063\033[0m| Choice selection: 7";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012064\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value);
                            }
                            
                            uint8_t* _tmp_13376 = (uint8_t*) buffer++;
                            *_tmp_13376 = ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 8;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012065\033[0m| Choice selection: 8";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012066\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value);
                            }
                            
                            uint8_t* _tmp_13377 = (uint8_t*) buffer++;
                            *_tmp_13377 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 9;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012067\033[0m| Choice selection: 9";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012068\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                            }
                            
                            uint8_t* _tmp_13378 = (uint8_t*) buffer++;
                            *_tmp_13378 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 10;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012069\033[0m| Choice selection: 10";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012070\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                            }
                            
                            uint8_t* _tmp_13379 = (uint8_t*) buffer++;
                            *_tmp_13379 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 11;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012071\033[0m| Choice selection: 11";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012072\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                            }
                            
                            uint8_t* _tmp_13380 = (uint8_t*) buffer++;
                            *_tmp_13380 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 12;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012073\033[0m| Choice selection: 12";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012074\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                            }
                            
                            uint8_t* _tmp_13381 = (uint8_t*) buffer++;
                            *_tmp_13381 = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 13;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012075\033[0m| Choice selection: 13";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012076\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value);
                            }
                            
                            uint8_t* _tmp_13382 = (uint8_t*) buffer++;
                            *_tmp_13382 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 14;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012077\033[0m| Choice selection: 14";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012078\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                            }
                            
                            uint8_t* _tmp_13383 = (uint8_t*) buffer++;
                            *_tmp_13383 = ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 15;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012079\033[0m| Choice selection: 15";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012080\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                            }
                            
                            uint8_t* _tmp_13384 = (uint8_t*) buffer++;
                            *_tmp_13384 = ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 16;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012081\033[0m| Choice selection: 16";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012082\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value);
                            }
                            
                            uint8_t* _tmp_13385 = (uint8_t*) buffer++;
                            *_tmp_13385 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 17;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012083\033[0m| Choice selection: 17";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012084\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                            }
                            
                            uint8_t* _tmp_13386 = (uint8_t*) buffer++;
                            *_tmp_13386 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 18;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012085\033[0m| Choice selection: 18";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012086\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                            }
                            
                            uint8_t* _tmp_13387 = (uint8_t*) buffer++;
                            *_tmp_13387 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 19;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012087\033[0m| Choice selection: 19";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012088\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                            }
                            
                            uint8_t* _tmp_13388 = (uint8_t*) buffer++;
                            *_tmp_13388 = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 20;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012089\033[0m| Choice selection: 20";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012090\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value);
                            }
                            
                            uint8_t* _tmp_13389 = (uint8_t*) buffer++;
                            *_tmp_13389 = ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 21;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012091\033[0m| Choice selection: 21";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012092\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value);
                            }
                            
                            uint8_t* _tmp_13390 = (uint8_t*) buffer++;
                            *_tmp_13390 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 22;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012093\033[0m| Choice selection: 22";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012094\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value);
                            }
                            
                            uint8_t* _tmp_13391 = (uint8_t*) buffer++;
                            *_tmp_13391 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 23;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012095\033[0m| Choice selection: 23";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012096\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value);
                            }
                            
                            uint8_t* _tmp_13392 = (uint8_t*) buffer++;
                            *_tmp_13392 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 24;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012097\033[0m| Choice selection: 24";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012098\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value);
                            }
                            
                            uint8_t* _tmp_13393 = (uint8_t*) buffer++;
                            *_tmp_13393 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 25;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012099\033[0m| Choice selection: 25";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012100\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value);
                            }
                            
                            uint8_t* _tmp_13394 = (uint8_t*) buffer++;
                            *_tmp_13394 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 26;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012101\033[0m| Choice selection: 26";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012102\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value);
                            }
                            
                            uint8_t* _tmp_13395 = (uint8_t*) buffer++;
                            *_tmp_13395 = ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 27;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012103\033[0m| Choice selection: 27";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012104\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                            }
                            
                            uint8_t* _tmp_13396 = (uint8_t*) buffer++;
                            *_tmp_13396 = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 28;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012105\033[0m| Choice selection: 28";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012106\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                            }
                            
                            uint8_t* _tmp_13397 = (uint8_t*) buffer++;
                            *_tmp_13397 = ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 29;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012107\033[0m| Choice selection: 29";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012108\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value);
                            }
                            
                            uint8_t* _tmp_13398 = (uint8_t*) buffer++;
                            *_tmp_13398 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 30;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012109\033[0m| Choice selection: 30";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012110\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value);
                            }
                            
                            uint8_t* _tmp_13399 = (uint8_t*) buffer++;
                            *_tmp_13399 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 31;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012111\033[0m| Choice selection: 31";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012112\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value);
                            }
                            
                            uint8_t* _tmp_13400 = (uint8_t*) buffer++;
                            *_tmp_13400 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 32;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012113\033[0m| Choice selection: 32";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012114\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value);
                            }
                            
                            uint8_t* _tmp_13401 = (uint8_t*) buffer++;
                            *_tmp_13401 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 33;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012115\033[0m| Choice selection: 33";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012116\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value);
                            }
                            
                            uint8_t* _tmp_13402 = (uint8_t*) buffer++;
                            *_tmp_13402 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 34;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012117\033[0m| Choice selection: 34";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012118\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value);
                            }
                            
                            uint8_t* _tmp_13403 = (uint8_t*) buffer++;
                            *_tmp_13403 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 35;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012119\033[0m| Choice selection: 35";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012120\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value);
                            }
                            
                            uint8_t* _tmp_13404 = (uint8_t*) buffer++;
                            *_tmp_13404 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 36;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012121\033[0m| Choice selection: 36";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012122\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value);
                            }
                            
                            uint8_t* _tmp_13405 = (uint8_t*) buffer++;
                            *_tmp_13405 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 37;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012123\033[0m| Choice selection: 37";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012124\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value);
                            }
                            
                            uint8_t* _tmp_13406 = (uint8_t*) buffer++;
                            *_tmp_13406 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 38;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012125\033[0m| Choice selection: 38";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012126\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value);
                            }
                            
                            uint8_t* _tmp_13407 = (uint8_t*) buffer++;
                            *_tmp_13407 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 39;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012127\033[0m| Choice selection: 39";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012128\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value);
                            }
                            
                            uint8_t* _tmp_13408 = (uint8_t*) buffer++;
                            *_tmp_13408 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 40;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012129\033[0m| Choice selection: 40";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012130\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value);
                            }
                            
                            uint8_t* _tmp_13409 = (uint8_t*) buffer++;
                            *_tmp_13409 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 41;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012131\033[0m| Choice selection: 41";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012132\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value);
                            }
                            
                            uint8_t* _tmp_13410 = (uint8_t*) buffer++;
                            *_tmp_13410 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 42;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012133\033[0m| Choice selection: 42";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012134\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value);
                            }
                            
                            uint8_t* _tmp_13411 = (uint8_t*) buffer++;
                            *_tmp_13411 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 43;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012135\033[0m| Choice selection: 43";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012136\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value);
                            }
                            
                            uint8_t* _tmp_13412 = (uint8_t*) buffer++;
                            *_tmp_13412 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 44;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012137\033[0m| Choice selection: 44";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012138\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value);
                            }
                            
                            uint8_t* _tmp_13413 = (uint8_t*) buffer++;
                            *_tmp_13413 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 45;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012139\033[0m| Choice selection: 45";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012140\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value);
                            }
                            
                            uint8_t* _tmp_13414 = (uint8_t*) buffer++;
                            *_tmp_13414 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 46;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012141\033[0m| Choice selection: 46";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012142\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value);
                            }
                            
                            uint8_t* _tmp_13415 = (uint8_t*) buffer++;
                            *_tmp_13415 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 47;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012143\033[0m| Choice selection: 47";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012144\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value);
                            }
                            
                            uint8_t* _tmp_13416 = (uint8_t*) buffer++;
                            *_tmp_13416 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 48;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012145\033[0m| Choice selection: 48";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012146\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value);
                            }
                            
                            uint8_t* _tmp_13417 = (uint8_t*) buffer++;
                            *_tmp_13417 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 49;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012147\033[0m| Choice selection: 49";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012148\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value);
                            }
                            
                            uint8_t* _tmp_13418 = (uint8_t*) buffer++;
                            *_tmp_13418 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 50;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012149\033[0m| Choice selection: 50";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012150\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value);
                            }
                            
                            uint8_t* _tmp_13419 = (uint8_t*) buffer++;
                            *_tmp_13419 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 51;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012151\033[0m| Choice selection: 51";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012152\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value);
                            }
                            
                            uint8_t* _tmp_13420 = (uint8_t*) buffer++;
                            *_tmp_13420 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 52;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012153\033[0m| Choice selection: 52";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012154\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value);
                            }
                            
                            uint8_t* _tmp_13421 = (uint8_t*) buffer++;
                            *_tmp_13421 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 53;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012155\033[0m| Choice selection: 53";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012156\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value);
                            }
                            
                            uint8_t* _tmp_13422 = (uint8_t*) buffer++;
                            *_tmp_13422 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 54;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012157\033[0m| Choice selection: 54";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012158\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value);
                            }
                            
                            uint8_t* _tmp_13423 = (uint8_t*) buffer++;
                            *_tmp_13423 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 55;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012159\033[0m| Choice selection: 55";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012160\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value);
                            }
                            
                            uint8_t* _tmp_13424 = (uint8_t*) buffer++;
                            *_tmp_13424 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 56;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012161\033[0m| Choice selection: 56";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012162\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value);
                            }
                            
                            uint8_t* _tmp_13425 = (uint8_t*) buffer++;
                            *_tmp_13425 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 57;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012163\033[0m| Choice selection: 57";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012164\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value);
                            }
                            
                            uint8_t* _tmp_13426 = (uint8_t*) buffer++;
                            *_tmp_13426 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 58;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012165\033[0m| Choice selection: 58";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012166\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value);
                            }
                            
                            uint8_t* _tmp_13427 = (uint8_t*) buffer++;
                            *_tmp_13427 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 59;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012167\033[0m| Choice selection: 59";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012168\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value);
                            }
                            
                            uint8_t* _tmp_13428 = (uint8_t*) buffer++;
                            *_tmp_13428 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 60;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012169\033[0m| Choice selection: 60";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012170\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value);
                            }
                            
                            uint8_t* _tmp_13429 = (uint8_t*) buffer++;
                            *_tmp_13429 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 61;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012171\033[0m| Choice selection: 61";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012172\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value);
                            }
                            
                            uint8_t* _tmp_13430 = (uint8_t*) buffer++;
                            *_tmp_13430 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 62;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012173\033[0m| Choice selection: 62";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012174\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value);
                            }
                            
                            uint8_t* _tmp_13431 = (uint8_t*) buffer++;
                            *_tmp_13431 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 63;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012175\033[0m| Choice selection: 63";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012176\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value);
                            }
                            
                            uint8_t* _tmp_13432 = (uint8_t*) buffer++;
                            *_tmp_13432 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 64;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012177\033[0m| Choice selection: 64";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012178\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value);
                            }
                            
                            uint8_t* _tmp_13433 = (uint8_t*) buffer++;
                            *_tmp_13433 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 65;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012179\033[0m| Choice selection: 65";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012180\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value);
                            }
                            
                            uint8_t* _tmp_13434 = (uint8_t*) buffer++;
                            *_tmp_13434 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 66;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012181\033[0m| Choice selection: 66";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012182\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value);
                            }
                            
                            uint8_t* _tmp_13435 = (uint8_t*) buffer++;
                            *_tmp_13435 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 67;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012183\033[0m| Choice selection: 67";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012184\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value);
                            }
                            
                            uint8_t* _tmp_13436 = (uint8_t*) buffer++;
                            *_tmp_13436 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 68;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012185\033[0m| Choice selection: 68";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012186\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value);
                            }
                            
                            uint8_t* _tmp_13437 = (uint8_t*) buffer++;
                            *_tmp_13437 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 69;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012187\033[0m| Choice selection: 69";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012188\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value);
                            }
                            
                            uint8_t* _tmp_13438 = (uint8_t*) buffer++;
                            *_tmp_13438 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 70;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012189\033[0m| Choice selection: 70";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012190\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value);
                            }
                            
                            uint8_t* _tmp_13439 = (uint8_t*) buffer++;
                            *_tmp_13439 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 71;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012191\033[0m| Choice selection: 71";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012192\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value);
                            }
                            
                            uint8_t* _tmp_13440 = (uint8_t*) buffer++;
                            *_tmp_13440 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 72;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012193\033[0m| Choice selection: 72";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012194\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value);
                            }
                            
                            uint8_t* _tmp_13441 = (uint8_t*) buffer++;
                            *_tmp_13441 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 73;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012195\033[0m| Choice selection: 73";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012196\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value);
                            }
                            
                            uint8_t* _tmp_13442 = (uint8_t*) buffer++;
                            *_tmp_13442 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 74;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012197\033[0m| Choice selection: 74";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012198\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value);
                            }
                            
                            uint8_t* _tmp_13443 = (uint8_t*) buffer++;
                            *_tmp_13443 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 75;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012199\033[0m| Choice selection: 75";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012200\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value);
                            }
                            
                            uint8_t* _tmp_13444 = (uint8_t*) buffer++;
                            *_tmp_13444 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 76;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012201\033[0m| Choice selection: 76";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012202\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value);
                            }
                            
                            uint8_t* _tmp_13445 = (uint8_t*) buffer++;
                            *_tmp_13445 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 77;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012203\033[0m| Choice selection: 77";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012204\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value);
                            }
                            
                            uint8_t* _tmp_13446 = (uint8_t*) buffer++;
                            *_tmp_13446 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 78;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012205\033[0m| Choice selection: 78";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012206\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value);
                            }
                            
                            uint8_t* _tmp_13447 = (uint8_t*) buffer++;
                            *_tmp_13447 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 79;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012207\033[0m| Choice selection: 79";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012208\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value);
                            }
                            
                            uint8_t* _tmp_13448 = (uint8_t*) buffer++;
                            *_tmp_13448 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 80;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012209\033[0m| Choice selection: 80";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012210\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value);
                            }
                            
                            uint8_t* _tmp_13449 = (uint8_t*) buffer++;
                            *_tmp_13449 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 81;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012211\033[0m| Choice selection: 81";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012212\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value);
                            }
                            
                            uint8_t* _tmp_13450 = (uint8_t*) buffer++;
                            *_tmp_13450 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 82;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012213\033[0m| Choice selection: 82";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012214\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value);
                            }
                            
                            uint8_t* _tmp_13451 = (uint8_t*) buffer++;
                            *_tmp_13451 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 83;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012215\033[0m| Choice selection: 83";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012216\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value);
                            }
                            
                            uint8_t* _tmp_13452 = (uint8_t*) buffer++;
                            *_tmp_13452 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 84;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012217\033[0m| Choice selection: 84";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012218\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value);
                            }
                            
                            uint8_t* _tmp_13453 = (uint8_t*) buffer++;
                            *_tmp_13453 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 85;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012219\033[0m| Choice selection: 85";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012220\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value);
                            }
                            
                            uint8_t* _tmp_13454 = (uint8_t*) buffer++;
                            *_tmp_13454 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 86;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012221\033[0m| Choice selection: 86";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012222\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value);
                            }
                            
                            uint8_t* _tmp_13455 = (uint8_t*) buffer++;
                            *_tmp_13455 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 87;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012223\033[0m| Choice selection: 87";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012224\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value);
                            }
                            
                            uint8_t* _tmp_13456 = (uint8_t*) buffer++;
                            *_tmp_13456 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 88;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012225\033[0m| Choice selection: 88";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012226\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value);
                            }
                            
                            uint8_t* _tmp_13457 = (uint8_t*) buffer++;
                            *_tmp_13457 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 89;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012227\033[0m| Choice selection: 89";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012228\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value);
                            }
                            
                            uint8_t* _tmp_13458 = (uint8_t*) buffer++;
                            *_tmp_13458 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 90;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012229\033[0m| Choice selection: 90";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012230\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value);
                            }
                            
                            uint8_t* _tmp_13459 = (uint8_t*) buffer++;
                            *_tmp_13459 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 91;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012231\033[0m| Choice selection: 91";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012232\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                            }
                            
                            uint8_t* _tmp_13460 = (uint8_t*) buffer++;
                            *_tmp_13460 = ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 92;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012233\033[0m| Choice selection: 92";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012234\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value);
                            }
                            
                            uint8_t* _tmp_13461 = (uint8_t*) buffer++;
                            *_tmp_13461 = ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 93;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012235\033[0m| Choice selection: 93";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012236\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value);
                            }
                            
                            uint8_t* _tmp_13462 = (uint8_t*) buffer++;
                            *_tmp_13462 = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 94;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012237\033[0m| Choice selection: 94";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012238\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                            }
                            
                            uint8_t* _tmp_13463 = (uint8_t*) buffer++;
                            *_tmp_13463 = ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 95;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012239\033[0m| Choice selection: 95";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012240\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                            }
                            
                            uint8_t* _tmp_13464 = (uint8_t*) buffer++;
                            *_tmp_13464 = ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 96;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012241\033[0m| Choice selection: 96";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012242\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                            }
                            
                            uint8_t* _tmp_13465 = (uint8_t*) buffer++;
                            *_tmp_13465 = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 97;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012243\033[0m| Choice selection: 97";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012244\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value);
                            }
                            
                            uint8_t* _tmp_13466 = (uint8_t*) buffer++;
                            *_tmp_13466 = ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 98;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012245\033[0m| Choice selection: 98";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012246\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value);
                            }
                            
                            uint8_t* _tmp_13467 = (uint8_t*) buffer++;
                            *_tmp_13467 = ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 99;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012247\033[0m| Choice selection: 99";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012248\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value);
                            }
                            
                            uint8_t* _tmp_13468 = (uint8_t*) buffer++;
                            *_tmp_13468 = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 100;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012249\033[0m| Choice selection: 100";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012250\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                            }
                            
                            uint8_t* _tmp_13469 = (uint8_t*) buffer++;
                            *_tmp_13469 = ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 101;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012251\033[0m| Choice selection: 101";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012252\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value);
                            }
                            
                            uint8_t* _tmp_13470 = (uint8_t*) buffer++;
                            *_tmp_13470 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 102;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012253\033[0m| Choice selection: 102";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012254\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value);
                            }
                            
                            uint8_t* _tmp_13471 = (uint8_t*) buffer++;
                            *_tmp_13471 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 103;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012255\033[0m| Choice selection: 103";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012256\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value);
                            }
                            
                            uint8_t* _tmp_13472 = (uint8_t*) buffer++;
                            *_tmp_13472 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 104;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012257\033[0m| Choice selection: 104";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012258\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value);
                            }
                            
                            uint8_t* _tmp_13473 = (uint8_t*) buffer++;
                            *_tmp_13473 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 105;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012259\033[0m| Choice selection: 105";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012260\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value);
                            }
                            
                            uint8_t* _tmp_13474 = (uint8_t*) buffer++;
                            *_tmp_13474 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 106;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012261\033[0m| Choice selection: 106";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012262\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value);
                            }
                            
                            uint8_t* _tmp_13475 = (uint8_t*) buffer++;
                            *_tmp_13475 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 107;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012263\033[0m| Choice selection: 107";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012264\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value);
                            }
                            
                            uint8_t* _tmp_13476 = (uint8_t*) buffer++;
                            *_tmp_13476 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 108;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012265\033[0m| Choice selection: 108";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012266\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value);
                            }
                            
                            uint8_t* _tmp_13477 = (uint8_t*) buffer++;
                            *_tmp_13477 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 109;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012267\033[0m| Choice selection: 109";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012268\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value);
                            }
                            
                            uint8_t* _tmp_13478 = (uint8_t*) buffer++;
                            *_tmp_13478 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 110;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012269\033[0m| Choice selection: 110";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012270\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value);
                            }
                            
                            uint8_t* _tmp_13479 = (uint8_t*) buffer++;
                            *_tmp_13479 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 111;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012271\033[0m| Choice selection: 111";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012272\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value);
                            }
                            
                            uint8_t* _tmp_13480 = (uint8_t*) buffer++;
                            *_tmp_13480 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 112;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012273\033[0m| Choice selection: 112";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012274\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value);
                            }
                            
                            uint8_t* _tmp_13481 = (uint8_t*) buffer++;
                            *_tmp_13481 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 113;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012275\033[0m| Choice selection: 113";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012276\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value);
                            }
                            
                            uint8_t* _tmp_13482 = (uint8_t*) buffer++;
                            *_tmp_13482 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 114;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012277\033[0m| Choice selection: 114";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012278\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value);
                            }
                            
                            uint8_t* _tmp_13483 = (uint8_t*) buffer++;
                            *_tmp_13483 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 115;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012279\033[0m| Choice selection: 115";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012280\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value);
                            }
                            
                            uint8_t* _tmp_13484 = (uint8_t*) buffer++;
                            *_tmp_13484 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 116;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012281\033[0m| Choice selection: 116";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012282\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value);
                            }
                            
                            uint8_t* _tmp_13485 = (uint8_t*) buffer++;
                            *_tmp_13485 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 117;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012283\033[0m| Choice selection: 117";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012284\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value);
                            }
                            
                            uint8_t* _tmp_13486 = (uint8_t*) buffer++;
                            *_tmp_13486 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 118;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012285\033[0m| Choice selection: 118";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012286\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value);
                            }
                            
                            uint8_t* _tmp_13487 = (uint8_t*) buffer++;
                            *_tmp_13487 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 119;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012287\033[0m| Choice selection: 119";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012288\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value);
                            }
                            
                            uint8_t* _tmp_13488 = (uint8_t*) buffer++;
                            *_tmp_13488 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 120;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012289\033[0m| Choice selection: 120";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012290\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value);
                            }
                            
                            uint8_t* _tmp_13489 = (uint8_t*) buffer++;
                            *_tmp_13489 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 121;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012291\033[0m| Choice selection: 121";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012292\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value);
                            }
                            
                            uint8_t* _tmp_13490 = (uint8_t*) buffer++;
                            *_tmp_13490 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 122;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012293\033[0m| Choice selection: 122";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012294\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value);
                            }
                            
                            uint8_t* _tmp_13491 = (uint8_t*) buffer++;
                            *_tmp_13491 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 123;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012295\033[0m| Choice selection: 123";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012296\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value);
                            }
                            
                            uint8_t* _tmp_13492 = (uint8_t*) buffer++;
                            *_tmp_13492 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 124;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012297\033[0m| Choice selection: 124";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012298\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value);
                            }
                            
                            uint8_t* _tmp_13493 = (uint8_t*) buffer++;
                            *_tmp_13493 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 125;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012299\033[0m| Choice selection: 125";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012300\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value);
                            }
                            
                            uint8_t* _tmp_13494 = (uint8_t*) buffer++;
                            *_tmp_13494 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 126;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012301\033[0m| Choice selection: 126";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012302\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value);
                            }
                            
                            uint8_t* _tmp_13495 = (uint8_t*) buffer++;
                            *_tmp_13495 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 127;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012303\033[0m| Choice selection: 127";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012304\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value);
                            }
                            
                            uint8_t* _tmp_13496 = (uint8_t*) buffer++;
                            *_tmp_13496 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else if(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                        {
                            *_choice_352 = 128;  // Setting choice selection
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012305\033[0m| Choice selection: 128";
                        
                            // Integer
                            
                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012306\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value);
                            }
                            
                            uint8_t* _tmp_13497 = (uint8_t*) buffer++;
                            *_tmp_13497 = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value; 
                            __aux64__ = ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_352) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].linked_cause[0].cc_and_scc'; message dropped.";
                            return -1;
                        }
                        
                        if(*_ext_flag_5978) {
                        }
                }
                
                if(ros->denm.situation[0].event_zone.size() != 0) {
                    // Field:  type(EventZone) name(event_zone) extGroup(0)
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(1) max(23) span(23) ext(false)
                    __aux64__ = ros->denm.situation[0].event_zone[0].elements.size();
                    if(__aux64__ > 23) __aux64__ = 23;
                    uint16_t* _tmp_13499 = (uint16_t*)buffer;
                    buffer += 2;
                    *_tmp_13499 = __aux64__ - 1;
                    
                    int __ifg = __aux64__;
                    for(int g = 0; g < __ifg; g++) { 
                        
                            // EventPoint  SEQUENCE
                                //  eventPosition      DeltaReferencePosition     
                                //  eventDeltaTime     PathDeltaTime            OPTIONAL  
                                //  informationQuality InformationQuality         
                            // Optional fields bytemap
                            char* _tmp_13500 = (char*) buffer++;
                            *_tmp_13500 = (ros->denm.situation[0].event_zone[0].elements[g].event_delta_time.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012308\033[0m| Optional field event_delta_time = " << *_tmp_13500;
                            
                            // Field:  type(DeltaReferencePosition) name(event_position) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012309\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_latitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[g].event_position.delta_latitude.value: " << ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_latitude.value;
                                }
                                
                                double _tmp_13502 = ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_latitude.value;
                                _tmp_13502 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_13502);
                                _tmp_13502 -= -131071;
                                uint32_t* _tmp_13501 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13501 = static_cast<uint32_t>(_tmp_13502);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].event_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].event_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012310\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_longitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[g].event_position.delta_longitude.value: " << ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_longitude.value;
                                }
                                
                                double _tmp_13504 = ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_longitude.value;
                                _tmp_13504 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_13504);
                                _tmp_13504 -= -131071;
                                uint32_t* _tmp_13503 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13503 = static_cast<uint32_t>(_tmp_13504);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].event_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].event_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012311\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_altitude.value) << 
                                                 " denm.situation[0].event_zone[0].elements[g].event_position.delta_altitude.value: " << ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_altitude.value;
                                }
                                
                                float _tmp_13506 = ros->denm.situation[0].event_zone[0].elements[g].event_position.delta_altitude.value;
                                _tmp_13506 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_13506);
                                _tmp_13506 -= -12700;
                                uint16_t* _tmp_13505 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_13505 = static_cast<uint16_t>(_tmp_13506);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].event_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].event_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                            
                            if(ros->denm.situation[0].event_zone[0].elements[g].event_delta_time.size() != 0) {
                                // Field:  type(PathDeltaTime) name(event_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012312\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value) << 
                                                 " denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value: " << ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value;
                                }
                                
                                uint8_t* _ext_flag_6112 = (uint8_t*) buffer++; // Extension flag for ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].
                                float _tmp_13507 = ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value;
                                _tmp_13507 *= 100.0;
                                __aux64__ = static_cast<int64_t>(_tmp_13507);
                                *_ext_flag_6112 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                
                                if(*_ext_flag_6112) {
                                    uint8_t* _tmp_13508 = (uint8_t*) buffer++; 
                                
                                    if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                        *_tmp_13508 = 0;
                                
                                        float _tmp_13510 = ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value;
                                        _tmp_13510 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13510);
                                        _tmp_13510 -= INT32_MIN;
                                        uint32_t* _tmp_13509 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13509 = static_cast<uint32_t>(_tmp_13510);
                                    }
                                    else
                                    {
                                        *_tmp_13508 = 1;
                                
                                        float _tmp_13512 = ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value;
                                        _tmp_13512 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13512);
                                        _tmp_13512 -= INT64_MIN;
                                        uint32_t* _tmp_13511 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13511 = static_cast<uint32_t>(_tmp_13512);
                                    }
                                }
                                else
                                {
                                    float _tmp_13514 = ros->denm.situation[0].event_zone[0].elements[g].event_delta_time[0].value;
                                    _tmp_13514 *= 100.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_13514);
                                    _tmp_13514 -= 1;
                                    uint16_t* _tmp_13513 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_13513 = static_cast<uint16_t>(_tmp_13514);
                                }
                            }
                            
                            // Field:  type(InformationQuality) name(information_quality) extGroup(0)
                            // Integer
                            
                            // UINT8  min(0) max(7) span(8) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012313\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[g].information_quality.value) << 
                                             " denm.situation[0].event_zone[0].elements[g].information_quality.value: " << static_cast<int>(ros->denm.situation[0].event_zone[0].elements[g].information_quality.value);
                            }
                            
                            uint8_t* _tmp_13515 = (uint8_t*) buffer++;
                            *_tmp_13515 = ros->denm.situation[0].event_zone[0].elements[g].information_quality.value; 
                            __aux64__ = ros->denm.situation[0].event_zone[0].elements[g].information_quality.value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].information_quality.value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 7) {
                                logger->warning() << "Error: Value in 'denm.situation[0].event_zone[0].elements[g].information_quality.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                                return -1;
                            }
                            
                    }
                }
                
                if(*_ext_flag_5845) {
                    // Write number of extensions 
                    uint8_t* _tmp_13516 = (uint8_t*) buffer++;
                    *_tmp_13516 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_13517 = (uint8_t*) buffer++;
                    *_tmp_13517 = (ros->denm.situation[0].linked_denms.size() != 0 || ros->denm.situation[0].event_end.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_13518_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_13519_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_13520 = (uint8_t*)buffer++;
                    *_tmp_13520 = (ros->denm.situation[0].linked_denms.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_13521 = (uint8_t*)buffer++;
                    *_tmp_13521 = (ros->denm.situation[0].event_end.size() != 0 ? 1: 0);
                    
                    if(ros->denm.situation[0].linked_denms.size() != 0) {
                        // Field:  type(ActionIdList) name(linked_denms) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_6114 = (uint8_t*) buffer++; // Write extension flag for ros->denm.situation[0].linked_denms[0].
                        *_ext_flag_6114 = 0; 
                        
                        __aux64__ = ros->denm.situation[0].linked_denms[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_13522 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13522 = __aux64__ - 1;
                        
                        int __ifh = __aux64__;
                        for(int h = 0; h < __ifh; h++) { 
                            
                                // ActionId  SEQUENCE
                                    //  originatingStationId StationId          
                                    //  sequenceNumber       SequenceNumber     
                                // Optional fields bytemap
                                
                                // Field:  type(StationId) name(originating_station_id) extGroup(0)
                                // Integer
                                
                                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012315\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[h].originating_station_id.value) << 
                                                 " denm.situation[0].linked_denms[0].elements[h].originating_station_id.value: " << ros->denm.situation[0].linked_denms[0].elements[h].originating_station_id.value;
                                }
                                
                                uint32_t* _tmp_13523 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13523 = ros->denm.situation[0].linked_denms[0].elements[h].originating_station_id.value; 
                                __aux64__ = ros->denm.situation[0].linked_denms[0].elements[h].originating_station_id.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[h].originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[h].originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012316\033[0m| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[h].sequence_number.value) << 
                                                 " denm.situation[0].linked_denms[0].elements[h].sequence_number.value: " << ros->denm.situation[0].linked_denms[0].elements[h].sequence_number.value;
                                }
                                
                                uint16_t* _tmp_13524 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_13524 = ros->denm.situation[0].linked_denms[0].elements[h].sequence_number.value; 
                                __aux64__ = ros->denm.situation[0].linked_denms[0].elements[h].sequence_number.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[h].sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[h].sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                    return -1;
                                }
                                
                        }
                    }
                    
                    if(ros->denm.situation[0].event_end.size() != 0) {
                        // Field:  type(Position1d) name(event_end) extGroup(1)
                        // Integer
                        
                        // INT16  min(-8190) max(8191) span(16382) dataType(Int16)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012317\033[0m| " << tools::getTypeName(ros->denm.situation[0].event_end[0].value) << 
                                         " denm.situation[0].event_end[0].value: " << ros->denm.situation[0].event_end[0].value;
                        }
                        
                        uint16_t* _tmp_13525 = (uint16_t*) buffer; buffer += 2;
                        __aux64__ = ros->denm.situation[0].event_end[0].value - -8190;
                        *_tmp_13525 = __aux64__;
                        __aux64__ = ros->denm.situation[0].event_end[0].value;
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < -8190) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_end[0].value' (" << __aux64__ << ") less than (-8190); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 8191) {
                            logger->warning() << "Error: Value in 'denm.situation[0].event_end[0].value' (" << __aux64__ << ") exceeds max allowable (8191); message dropped.";
                            return -1;
                        }
                    }
                    
                    *_tmp_13518_openType = buffer - _tmp_13519_start;  // OpenType length
                }
        }
        
        if(ros->denm.location.size() != 0) {
            // Field:  type(LocationContainer) name(location) extGroup(0)
                // LocationContainer  SEQUENCE
                    //  eventSpeed                          Speed                         OPTIONAL  
                    //  eventPositionHeading                Wgs84Angle                    OPTIONAL  
                    //  detectionZonesToEventPosition       Traces                          
                    //  roadType                            RoadType                      OPTIONAL  
                    //  lanePositions                       GeneralizedLanePositions      OPTIONAL  Extension group #1
                    //  occupiedLanes                       OccupiedLanesWithConfidence   OPTIONAL  Extension group #1
                    //  linkedIvims                         IvimReferences                OPTIONAL  Extension group #1
                    //  linkedMapems                        MapReferences                 OPTIONAL  Extension group #1
                    //  detectionZonesToSpecifiedEventPoint TracesExtended                OPTIONAL  Extension group #1
                    //  predictedPaths                      PathPredictedList             OPTIONAL  Extension group #1
                uint8_t* _ext_flag_6118 = (uint8_t*) buffer++;  // Write extension flag for LocationContainer
                *_ext_flag_6118 = (ros->denm.location[0].lane_positions.size() != 0 || ros->denm.location[0].occupied_lanes.size() != 0 || ros->denm.location[0].linked_ivims.size() != 0 || ros->denm.location[0].linked_mapems.size() != 0 || ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 || ros->denm.location[0].predicted_paths.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_13526 = (char*) buffer++;
                *_tmp_13526 = (ros->denm.location[0].event_speed.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012318\033[0m| Optional field event_speed = " << *_tmp_13526;
                char* _tmp_13527 = (char*) buffer++;
                *_tmp_13527 = (ros->denm.location[0].event_position_heading.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012319\033[0m| Optional field event_position_heading = " << *_tmp_13527;
                char* _tmp_13528 = (char*) buffer++;
                *_tmp_13528 = (ros->denm.location[0].road_type.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012320\033[0m| Optional field road_type = " << *_tmp_13528;
                
                if(ros->denm.location[0].event_speed.size() != 0) {
                    // Field:  type(Speed) name(event_speed) extGroup(0)
                        // Speed  SEQUENCE
                            //  speedValue      SpeedValue          
                            //  speedConfidence SpeedConfidence     
                        // Optional fields bytemap
                        
                        // Field:  type(SpeedValue) name(speed_value) extGroup(0)
                        // Real
                        
                        // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012321\033[0m| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_value.value) << 
                                         " denm.location[0].event_speed[0].speed_value.value: " << ros->denm.location[0].event_speed[0].speed_value.value;
                        }
                        
                        float _tmp_13530 = ros->denm.location[0].event_speed[0].speed_value.value;
                        _tmp_13530 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13530);
                        uint16_t* _tmp_13529 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_13529 = static_cast<uint16_t>(_tmp_13530);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(SpeedConfidence) name(speed_confidence) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012322\033[0m| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_confidence.value) << 
                                         " denm.location[0].event_speed[0].speed_confidence.value: " << static_cast<int>(ros->denm.location[0].event_speed[0].speed_confidence.value);
                        }
                        
                        float _tmp_13532 = ros->denm.location[0].event_speed[0].speed_confidence.value;
                        _tmp_13532 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13532);
                        _tmp_13532 -= 1;
                        uint8_t* _tmp_13531 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13531 = static_cast<uint8_t>(_tmp_13532);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                }
                
                if(ros->denm.location[0].event_position_heading.size() != 0) {
                    // Field:  type(Wgs84Angle) name(event_position_heading) extGroup(0)
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        // Optional fields bytemap
                        
                        // Field:  type(Wgs84AngleValue) name(value) extGroup(0)
                        // Real
                        
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012323\033[0m| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].value.value) << 
                                         " denm.location[0].event_position_heading[0].value.value: " << ros->denm.location[0].event_position_heading[0].value.value;
                        }
                        
                        float _tmp_13534 = ros->denm.location[0].event_position_heading[0].value.value;
                        _tmp_13534 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13534);
                        uint16_t* _tmp_13533 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_13533 = static_cast<uint16_t>(_tmp_13534);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(Wgs84AngleConfidence) name(confidence) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012324\033[0m| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].confidence.value) << 
                                         " denm.location[0].event_position_heading[0].confidence.value: " << static_cast<int>(ros->denm.location[0].event_position_heading[0].confidence.value);
                        }
                        
                        float _tmp_13536 = ros->denm.location[0].event_position_heading[0].confidence.value;
                        _tmp_13536 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13536);
                        _tmp_13536 -= 1;
                        uint8_t* _tmp_13535 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13535 = static_cast<uint8_t>(_tmp_13536);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                }
                
                // Field:  type(Traces) name(detection_zones_to_event_position) extGroup(0)
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(7) span(7) ext(false)
                __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements.size();
                if(__aux64__ > 7) __aux64__ = 7;
                uint16_t* _tmp_13537 = (uint16_t*)buffer;
                buffer += 2;
                *_tmp_13537 = __aux64__ - 1;
                
                int __ifi = __aux64__;
                for(int i = 0; i < __ifi; i++) { 
                    
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(40) span(41) ext(false)
                    __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements.size();
                    if(__aux64__ > 40) __aux64__ = 40;
                    uint16_t* _tmp_13538 = (uint16_t*)buffer;
                    buffer += 2;
                    *_tmp_13538 = __aux64__;
                    
                    int __ifj = __aux64__;
                    for(int j = 0; j < __ifj; j++) { 
                        
                            // PathPoint  SEQUENCE
                                //  pathPosition  DeltaReferencePosition     
                                //  pathDeltaTime PathDeltaTime            OPTIONAL  
                            // Optional fields bytemap
                            char* _tmp_13539 = (char*) buffer++;
                            *_tmp_13539 = (ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012327\033[0m| Optional field path_delta_time = " << *_tmp_13539;
                            
                            // Field:  type(DeltaReferencePosition) name(path_position) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012328\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_latitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_latitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_latitude.value;
                                }
                                
                                double _tmp_13541 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_latitude.value;
                                _tmp_13541 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_13541);
                                _tmp_13541 -= -131071;
                                uint32_t* _tmp_13540 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13540 = static_cast<uint32_t>(_tmp_13541);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012329\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_longitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_longitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_longitude.value;
                                }
                                
                                double _tmp_13543 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_longitude.value;
                                _tmp_13543 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_13543);
                                _tmp_13543 -= -131071;
                                uint32_t* _tmp_13542 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13542 = static_cast<uint32_t>(_tmp_13543);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012330\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_altitude.value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_altitude.value: " << ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_altitude.value;
                                }
                                
                                float _tmp_13545 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_altitude.value;
                                _tmp_13545 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_13545);
                                _tmp_13545 -= -12700;
                                uint16_t* _tmp_13544 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_13544 = static_cast<uint16_t>(_tmp_13545);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                            
                            if(ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time.size() != 0) {
                                // Field:  type(PathDeltaTime) name(path_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012331\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value) << 
                                                 " denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value: " << ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value;
                                }
                                
                                uint8_t* _ext_flag_6126 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].
                                float _tmp_13546 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value;
                                _tmp_13546 *= 100.0;
                                __aux64__ = static_cast<int64_t>(_tmp_13546);
                                *_ext_flag_6126 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                
                                if(*_ext_flag_6126) {
                                    uint8_t* _tmp_13547 = (uint8_t*) buffer++; 
                                
                                    if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                        *_tmp_13547 = 0;
                                
                                        float _tmp_13549 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value;
                                        _tmp_13549 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13549);
                                        _tmp_13549 -= INT32_MIN;
                                        uint32_t* _tmp_13548 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13548 = static_cast<uint32_t>(_tmp_13549);
                                    }
                                    else
                                    {
                                        *_tmp_13547 = 1;
                                
                                        float _tmp_13551 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value;
                                        _tmp_13551 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13551);
                                        _tmp_13551 -= INT64_MIN;
                                        uint32_t* _tmp_13550 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13550 = static_cast<uint32_t>(_tmp_13551);
                                    }
                                }
                                else
                                {
                                    float _tmp_13553 = ros->denm.location[0].detection_zones_to_event_position.elements[i].elements[j].path_delta_time[0].value;
                                    _tmp_13553 *= 100.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_13553);
                                    _tmp_13553 -= 1;
                                    uint16_t* _tmp_13552 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_13552 = static_cast<uint16_t>(_tmp_13553);
                                }
                            }
                            
                    }
                    
                }
                
                if(ros->denm.location[0].road_type.size() != 0) {
                    // Field:  type(RoadType) name(road_type) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(3) span(4) dataType(Int32)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m012332\033[0m| " << tools::getTypeName(ros->denm.location[0].road_type[0].value) << 
                                     " denm.location[0].road_type[0].value: " << static_cast<int>(ros->denm.location[0].road_type[0].value);
                    }
                    
                    uint8_t* _tmp_13554 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_13554 = ros->denm.location[0].road_type[0].value; 
                    __aux64__ = ros->denm.location[0].road_type[0].value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.location[0].road_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 3) {
                        logger->warning() << "Error: Value in 'denm.location[0].road_type[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                        return -1;
                    }
                }
                
                if(*_ext_flag_6118) {
                    // Write number of extensions 
                    uint8_t* _tmp_13555 = (uint8_t*) buffer++;
                    *_tmp_13555 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_13556 = (uint8_t*) buffer++;
                    *_tmp_13556 = (ros->denm.location[0].lane_positions.size() != 0 || ros->denm.location[0].occupied_lanes.size() != 0 || ros->denm.location[0].linked_ivims.size() != 0 || ros->denm.location[0].linked_mapems.size() != 0 || ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 || ros->denm.location[0].predicted_paths.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_13557_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_13558_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_13559 = (uint8_t*)buffer++;
                    *_tmp_13559 = (ros->denm.location[0].lane_positions.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_13560 = (uint8_t*)buffer++;
                    *_tmp_13560 = (ros->denm.location[0].occupied_lanes.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_13561 = (uint8_t*)buffer++;
                    *_tmp_13561 = (ros->denm.location[0].linked_ivims.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_13562 = (uint8_t*)buffer++;
                    *_tmp_13562 = (ros->denm.location[0].linked_mapems.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_13563 = (uint8_t*)buffer++;
                    *_tmp_13563 = (ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_13564 = (uint8_t*)buffer++;
                    *_tmp_13564 = (ros->denm.location[0].predicted_paths.size() != 0 ? 1: 0);
                    
                    if(ros->denm.location[0].lane_positions.size() != 0) {
                        // Field:  type(GeneralizedLanePositions) name(lane_positions) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                        __aux64__ = ros->denm.location[0].lane_positions[0].elements.size();
                        if(__aux64__ > 4) __aux64__ = 4;
                        uint16_t* _tmp_13565 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13565 = __aux64__ - 1;
                        
                        int __ifk = __aux64__;
                        for(int k = 0; k < __ifk; k++) { 
                            
                                // GeneralizedLanePosition  SEQUENCE
                                    //  lanePositionBased LanePositionOptions     
                                    //  mapBased          MapPosition           OPTIONAL  
                                    //  confidence        MetaInformation         
                                    //  ...
                                uint8_t* _ext_flag_6128 = (uint8_t*) buffer++;  // Write extension flag for GeneralizedLanePosition
                                *_ext_flag_6128 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_13566 = (char*) buffer++;
                                *_tmp_13566 = (ros->denm.location[0].lane_positions[0].elements[k].map_based.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012334\033[0m| Optional field map_based = " << *_tmp_13566;
                                
                                // Field:  type(LanePositionOptions) name(lane_position_based) extGroup(0)
                                // Choice
                                   // #0  simplelanePosition   LanePosition
                                   // #1  simpleLaneType   LaneType
                                   // #2  detailedlanePosition   LanePositionAndType
                                   // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails
                                   // #4  trafficIslandPosition   TrafficIslandPosition
                                uint8_t* _ext_flag_6129 = (uint8_t*) buffer; 
                                buffer++;
                                *_ext_flag_6129 = 0; 
                                
                                uint8_t* _choice_353 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position.size() != 0) {  // CHOICE 0  fieldType(LanePositionOptions) 
                                    *_choice_353 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012335\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012336\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value) << 
                                                     " denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13567 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value - -1;
                                    *_tmp_13567 = __aux64__;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.simplelane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type.size() != 0)  // CHOICE 1  fieldType(LanePositionOptions) 
                                {
                                    *_choice_353 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012337\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012338\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value) << 
                                                     " denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13568 = (uint8_t*) buffer++;
                                    *_tmp_13568 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value; 
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.simple_lane_type[0].value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position.size() != 0)  // CHOICE 2  fieldType(LanePositionOptions) 
                                {
                                    *_choice_353 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012339\033[0m| Choice selection: 2";
                                
                                        // LanePositionAndType  SEQUENCE
                                            //  transversalPosition LanePosition     
                                            //  laneType            LaneType         
                                            //  direction           Direction        
                                            //  ...
                                        uint8_t* _ext_flag_6132 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                        *_ext_flag_6132 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012340\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_13569 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value - -1;
                                        *_tmp_13569 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012341\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_13570 = (uint8_t*) buffer++;
                                        *_tmp_13570 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012342\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_13571 = (uint8_t*) buffer++;
                                        *_tmp_13571 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.detailedlane_position[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_6132) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details.size() != 0)  // CHOICE 3  fieldType(LanePositionOptions) 
                                {
                                    *_choice_353 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012343\033[0m| Choice selection: 3";
                                
                                        // LanePositionWithLateralDetails  SEQUENCE
                                            //  transversalPosition   LanePosition         
                                            //  laneType              LaneType             
                                            //  direction             Direction            
                                            //  distanceToLeftBorder  StandardLength9b     
                                            //  distanceToRightBorder StandardLength9b     
                                            //  ...
                                        uint8_t* _ext_flag_6136 = (uint8_t*) buffer++;  // Write extension flag for LanePositionWithLateralDetails
                                        *_ext_flag_6136 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012344\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_13573 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value - -1;
                                        *_tmp_13573 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012345\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_13574 = (uint8_t*) buffer++;
                                        *_tmp_13574 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012346\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_13575 = (uint8_t*) buffer++;
                                        *_tmp_13575 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_left_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012347\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value: " << ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        }
                                        
                                        float _tmp_13577 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        _tmp_13577 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13577);
                                        uint16_t* _tmp_13576 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13576 = static_cast<uint16_t>(_tmp_13577);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_right_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012348\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value: " << ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        }
                                        
                                        float _tmp_13579 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        _tmp_13579 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13579);
                                        uint16_t* _tmp_13578 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13578 = static_cast<uint16_t>(_tmp_13579);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_6136) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position.size() != 0)  // CHOICE 4  fieldType(LanePositionOptions) 
                                {
                                    *_choice_353 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012349\033[0m| Choice selection: 4";
                                
                                        // TrafficIslandPosition  SEQUENCE
                                            //  oneSide    LanePositionAndType     
                                            //  otherSide  LanePositionAndType     
                                            //  ...
                                        uint8_t* _ext_flag_6142 = (uint8_t*) buffer++;  // Write extension flag for TrafficIslandPosition
                                        *_ext_flag_6142 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePositionAndType) name(one_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_6143 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_6143 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012350\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_13581 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value - -1;
                                            *_tmp_13581 = __aux64__;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012351\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_13582 = (uint8_t*) buffer++;
                                            *_tmp_13582 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012352\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_13583 = (uint8_t*) buffer++;
                                            *_tmp_13583 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_6143) {
                                            }
                                        
                                        // Field:  type(LanePositionAndType) name(other_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_6147 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_6147 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012353\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_13585 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value - -1;
                                            *_tmp_13585 = __aux64__;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012354\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_13586 = (uint8_t*) buffer++;
                                            *_tmp_13586 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012355\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_13587 = (uint8_t*) buffer++;
                                            *_tmp_13587 = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].lane_position_based.traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_6147) {
                                            }
                                        
                                        if(*_ext_flag_6142) {
                                        }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_353) << ") selected in CHOICE LanePositionOptions in 'denm.location[0].lane_positions[0].elements[k].lane_position_based'; message dropped.";
                                    return -1;
                                }
                                
                                if(ros->denm.location[0].lane_positions[0].elements[k].map_based.size() != 0) {
                                    // Field:  type(MapPosition) name(map_based) extGroup(0)
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_6151 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_6151 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_13590 = (char*) buffer++;
                                        *_tmp_13590 = (ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012356\033[0m| Optional field map_reference = " << *_tmp_13590;
                                        char* _tmp_13591 = (char*) buffer++;
                                        *_tmp_13591 = (ros->denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012357\033[0m| Optional field lane_id = " << *_tmp_13591;
                                        char* _tmp_13592 = (char*) buffer++;
                                        *_tmp_13592 = (ros->denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012358\033[0m| Optional field connection_id = " << *_tmp_13592;
                                        char* _tmp_13593 = (char*) buffer++;
                                        *_tmp_13593 = (ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012359\033[0m| Optional field longitudinal_lane_position = " << *_tmp_13593;
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_354 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_354 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m012360\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_13594 = (char*) buffer++;
                                                    *_tmp_13594 = (ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m012361\033[0m| Optional field region = " << *_tmp_13594;
                                                    
                                                    if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m012362\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_13595 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_13595 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m012363\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_13596 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_13596 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_354 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m012364\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_13597 = (char*) buffer++;
                                                    *_tmp_13597 = (ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m012365\033[0m| Optional field region = " << *_tmp_13597;
                                                    
                                                    if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m012366\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_13598 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_13598 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m012367\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_13599 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_13599 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_354) << ") selected in CHOICE MapReference in 'denm.location[0].lane_positions[0].elements[k].map_based[0].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012368\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_13600 = (uint8_t*) buffer++;
                                            *_tmp_13600 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012369\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_13601 = (uint8_t*) buffer++;
                                            *_tmp_13601 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value; 
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012370\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_13603 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_13603 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13603);
                                                uint16_t* _tmp_13602 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13602 = static_cast<uint16_t>(_tmp_13603);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012371\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_13605 = ros->denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_13605 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13605);
                                                uint16_t* _tmp_13604 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13604 = static_cast<uint16_t>(_tmp_13605);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_6151) {
                                        }
                                }
                                
                                // Field:  type(MetaInformation) name(confidence) extGroup(0)
                                    // MetaInformation  SEQUENCE
                                        //  usedDetectionInformation SensorTypes               
                                        //  usedStoredInformation    StoredInformationType     
                                        //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_6161 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                    *_ext_flag_6161 = 0;  
                                    
                                    // Optional fields bytemap
                                    char* _tmp_13607 = (char*) buffer++;
                                    *_tmp_13607 = (ros->denm.location[0].lane_positions[0].elements[k].confidence.confidence_value.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012372\033[0m| Optional field confidence_value = " << *_tmp_13607;
                                    
                                    // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(16) max(16) span(1)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012373\033[0m| denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values.size());
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values.size() < 16) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.value' " << (ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values.size() > 16) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.value' " << (ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _ext_flag_6162 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.
                                    *_ext_flag_6162 = 0; 
                                    
                                    uint8_t* _tmp_13608 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values.size();
                                    if(__aux64__ > 16) __aux64__ = 16;
                                    *_tmp_13608 = __aux64__ - 16;
                                    buffer += 1;
                                    
                                    int __ifl = __aux64__;
                                    for(int l = 0; l < __ifl; l++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].lane_positions[0].elements[k].confidence.used_detection_information.values[l]? 1: 0);
                                    }
                                    
                                    // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(1) max(168) span(168)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012374\033[0m| denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values.size());
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values.size() < 1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.value' " << (ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values.size() > 168) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.value' " << (ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _ext_flag_6163 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.
                                    *_ext_flag_6163 = 0; 
                                    
                                    uint8_t* _tmp_13609 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values.size();
                                    if(__aux64__ > 168) __aux64__ = 168;
                                    *_tmp_13609 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifm = __aux64__;
                                    for(int m = 0; m < __ifm; m++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].lane_positions[0].elements[k].confidence.used_stored_information.values[m]? 1: 0);
                                    }
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[k].confidence.confidence_value.size() != 0) {
                                        // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012375\033[0m| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value) << 
                                                         " denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value);
                                        }
                                        
                                        uint8_t* _tmp_13610 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value - 1;
                                        *_tmp_13610 = __aux64__;
                                        __aux64__ = ros->denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'denm.location[0].lane_positions[0].elements[k].confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    if(*_ext_flag_6161) {
                                    }
                                
                                if(*_ext_flag_6128) {
                                }
                        }
                    }
                    
                    if(ros->denm.location[0].occupied_lanes.size() != 0) {
                        // Field:  type(OccupiedLanesWithConfidence) name(occupied_lanes) extGroup(1)
                            // OccupiedLanesWithConfidence  SEQUENCE
                                //  lanePositionBased OccupiedLanesWithConfidence_lanePositionBased     
                                //  mapBased          OccupiedLanesWithConfidence_mapBased            OPTIONAL  
                                //  confidence        MetaInformation                                   
                                //  ...
                            uint8_t* _ext_flag_6165 = (uint8_t*) buffer++;  // Write extension flag for OccupiedLanesWithConfidence
                            *_ext_flag_6165 = 0;  
                            
                            // Optional fields bytemap
                            char* _tmp_13613 = (char*) buffer++;
                            *_tmp_13613 = (ros->denm.location[0].occupied_lanes[0].map_based.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012376\033[0m| Optional field map_based = " << *_tmp_13613;
                            
                            // Field:  type(OccupiedLanesWithConfidence_lanePositionBased) name(lane_position_based) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements.size();
                            if(__aux64__ > 4) __aux64__ = 4;
                            uint16_t* _tmp_13614 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_13614 = __aux64__ - 1;
                            
                            int __ifn = __aux64__;
                            for(int n = 0; n < __ifn; n++) { 
                                
                                // Choice
                                   // #0  simplelanePosition   LanePosition
                                   // #1  simpleLaneType   LaneType
                                   // #2  detailedlanePosition   LanePositionAndType
                                   // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails
                                   // #4  trafficIslandPosition   TrafficIslandPosition
                                uint8_t* _ext_flag_6166 = (uint8_t*) buffer; 
                                buffer++;
                                *_ext_flag_6166 = 0; 
                                
                                uint8_t* _choice_355 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position.size() != 0) {  // CHOICE 0  fieldType(LanePositionOptions) 
                                    *_choice_355 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012378\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012379\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13615 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value - -1;
                                    *_tmp_13615 = __aux64__;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simplelane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type.size() != 0)  // CHOICE 1  fieldType(LanePositionOptions) 
                                {
                                    *_choice_355 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012380\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012381\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13616 = (uint8_t*) buffer++;
                                    *_tmp_13616 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value; 
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].simple_lane_type[0].value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position.size() != 0)  // CHOICE 2  fieldType(LanePositionOptions) 
                                {
                                    *_choice_355 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012382\033[0m| Choice selection: 2";
                                
                                        // LanePositionAndType  SEQUENCE
                                            //  transversalPosition LanePosition     
                                            //  laneType            LaneType         
                                            //  direction           Direction        
                                            //  ...
                                        uint8_t* _ext_flag_6169 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                        *_ext_flag_6169 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012383\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_13617 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value - -1;
                                        *_tmp_13617 = __aux64__;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012384\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_13618 = (uint8_t*) buffer++;
                                        *_tmp_13618 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012385\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_13619 = (uint8_t*) buffer++;
                                        *_tmp_13619 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].detailedlane_position[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_6169) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details.size() != 0)  // CHOICE 3  fieldType(LanePositionOptions) 
                                {
                                    *_choice_355 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012386\033[0m| Choice selection: 3";
                                
                                        // LanePositionWithLateralDetails  SEQUENCE
                                            //  transversalPosition   LanePosition         
                                            //  laneType              LaneType             
                                            //  direction             Direction            
                                            //  distanceToLeftBorder  StandardLength9b     
                                            //  distanceToRightBorder StandardLength9b     
                                            //  ...
                                        uint8_t* _ext_flag_6173 = (uint8_t*) buffer++;  // Write extension flag for LanePositionWithLateralDetails
                                        *_ext_flag_6173 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                        // Integer
                                        
                                        // INT8  min(-1) max(14) span(16) dataType(Int8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012387\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value);
                                        }
                                        
                                        uint8_t* _tmp_13621 = (uint8_t*) buffer++;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value - -1;
                                        *_tmp_13621 = __aux64__;
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(LaneType) name(lane_type) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012388\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value);
                                        }
                                        
                                        uint8_t* _tmp_13622 = (uint8_t*) buffer++;
                                        *_tmp_13622 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(Direction) name(direction) extGroup(0)
                                        // Integer
                                        
                                        // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012389\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value);
                                        }
                                        
                                        uint8_t* _tmp_13623 = (uint8_t*) buffer++;
                                        *_tmp_13623 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value; 
                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_left_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012390\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_left_border.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_left_border.value: " << ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        }
                                        
                                        float _tmp_13625 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                        _tmp_13625 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13625);
                                        uint16_t* _tmp_13624 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13624 = static_cast<uint16_t>(_tmp_13625);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_left_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(StandardLength9b) name(distance_to_right_border) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012391\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_right_border.value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_right_border.value: " << ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        }
                                        
                                        float _tmp_13627 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                        _tmp_13627 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13627);
                                        uint16_t* _tmp_13626 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13626 = static_cast<uint16_t>(_tmp_13627);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].lane_position_with_lateral_details[0].distance_to_right_border.value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(*_ext_flag_6173) {
                                        }
                                
                                }
                                else if(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position.size() != 0)  // CHOICE 4  fieldType(LanePositionOptions) 
                                {
                                    *_choice_355 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012392\033[0m| Choice selection: 4";
                                
                                        // TrafficIslandPosition  SEQUENCE
                                            //  oneSide    LanePositionAndType     
                                            //  otherSide  LanePositionAndType     
                                            //  ...
                                        uint8_t* _ext_flag_6179 = (uint8_t*) buffer++;  // Write extension flag for TrafficIslandPosition
                                        *_ext_flag_6179 = 0;  
                                        
                                        // Optional fields bytemap
                                        
                                        // Field:  type(LanePositionAndType) name(one_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_6180 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_6180 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012393\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_13629 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value - -1;
                                            *_tmp_13629 = __aux64__;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012394\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_13630 = (uint8_t*) buffer++;
                                            *_tmp_13630 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012395\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_13631 = (uint8_t*) buffer++;
                                            *_tmp_13631 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].one_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_6180) {
                                            }
                                        
                                        // Field:  type(LanePositionAndType) name(other_side) extGroup(0)
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_6184 = (uint8_t*) buffer++;  // Write extension flag for LanePositionAndType
                                            *_ext_flag_6184 = 0;  
                                            
                                            // Optional fields bytemap
                                            
                                            // Field:  type(LanePosition) name(transversal_position) extGroup(0)
                                            // Integer
                                            
                                            // INT8  min(-1) max(14) span(16) dataType(Int8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012396\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value);
                                            }
                                            
                                            uint8_t* _tmp_13633 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value - -1;
                                            *_tmp_13633 = __aux64__;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.transversal_position.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(LaneType) name(lane_type) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(31) span(32) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012397\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value);
                                            }
                                            
                                            uint8_t* _tmp_13634 = (uint8_t*) buffer++;
                                            *_tmp_13634 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.lane_type.value' (" << __aux64__ << ") exceeds max allowable (31); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Direction) name(direction) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012398\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value);
                                            }
                                            
                                            uint8_t* _tmp_13635 = (uint8_t*) buffer++;
                                            *_tmp_13635 = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n].traffic_island_position[0].other_side.direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                return -1;
                                            }
                                            
                                            if(*_ext_flag_6184) {
                                            }
                                        
                                        if(*_ext_flag_6179) {
                                        }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_355) << ") selected in CHOICE LanePositionOptions in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[n]'; message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.location[0].occupied_lanes[0].map_based.size() != 0) {
                                // Field:  type(OccupiedLanesWithConfidence_mapBased) name(map_based) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements.size();
                                if(__aux64__ > 4) __aux64__ = 4;
                                uint16_t* _tmp_13638 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_13638 = __aux64__ - 1;
                                
                                int __ifo = __aux64__;
                                for(int o = 0; o < __ifo; o++) { 
                                    
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_6188 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_6188 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_13639 = (char*) buffer++;
                                        *_tmp_13639 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012400\033[0m| Optional field map_reference = " << *_tmp_13639;
                                        char* _tmp_13640 = (char*) buffer++;
                                        *_tmp_13640 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012401\033[0m| Optional field lane_id = " << *_tmp_13640;
                                        char* _tmp_13641 = (char*) buffer++;
                                        *_tmp_13641 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012402\033[0m| Optional field connection_id = " << *_tmp_13641;
                                        char* _tmp_13642 = (char*) buffer++;
                                        *_tmp_13642 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012403\033[0m| Optional field longitudinal_lane_position = " << *_tmp_13642;
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_356 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_356 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m012404\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_13643 = (char*) buffer++;
                                                    *_tmp_13643 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m012405\033[0m| Optional field region = " << *_tmp_13643;
                                                    
                                                    if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m012406\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_13644 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_13644 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m012407\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_13645 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_13645 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_356 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m012408\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_13646 = (char*) buffer++;
                                                    *_tmp_13646 = (ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m012409\033[0m| Optional field region = " << *_tmp_13646;
                                                    
                                                    if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m012410\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_13647 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_13647 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m012411\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_13648 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_13648 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_356) << ") selected in CHOICE MapReference in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012412\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value) << 
                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_13649 = (uint8_t*) buffer++;
                                            *_tmp_13649 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012413\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value) << 
                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_13650 = (uint8_t*) buffer++;
                                            *_tmp_13650 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value; 
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012414\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_13652 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_13652 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13652);
                                                uint16_t* _tmp_13651 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13651 = static_cast<uint16_t>(_tmp_13652);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012415\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_13654 = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_13654 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13654);
                                                uint16_t* _tmp_13653 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13653 = static_cast<uint16_t>(_tmp_13654);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[o].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_6188) {
                                        }
                                }
                            }
                            
                            // Field:  type(MetaInformation) name(confidence) extGroup(0)
                                // MetaInformation  SEQUENCE
                                    //  usedDetectionInformation SensorTypes               
                                    //  usedStoredInformation    StoredInformationType     
                                    //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_6198 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                *_ext_flag_6198 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_13656 = (char*) buffer++;
                                *_tmp_13656 = (ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012416\033[0m| Optional field confidence_value = " << *_tmp_13656;
                                
                                // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(16) max(16) span(1)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012417\033[0m| denm.location[0].occupied_lanes[0].confidence.used_detection_information.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size());
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size() < 16) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_6199 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.
                                *_ext_flag_6199 = 0; 
                                
                                uint8_t* _tmp_13657 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                *_tmp_13657 = __aux64__ - 16;
                                buffer += 1;
                                
                                int __ifp = __aux64__;
                                for(int p = 0; p < __ifp; p++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values[p]? 1: 0);
                                }
                                
                                // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(1) max(168) span(168)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012418\033[0m| denm.location[0].occupied_lanes[0].confidence.used_stored_information.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size());
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size() < 1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size() > 168) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_6200 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.
                                *_ext_flag_6200 = 0; 
                                
                                uint8_t* _tmp_13658 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.size();
                                if(__aux64__ > 168) __aux64__ = 168;
                                *_tmp_13658 = __aux64__ - 1;
                                buffer += 1;
                                
                                int __ifq = __aux64__;
                                for(int q = 0; q < __ifq; q++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values[q]? 1: 0);
                                }
                                
                                if(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0) {
                                    // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012419\033[0m| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value) << 
                                                     " denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13659 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value - 1;
                                    *_tmp_13659 = __aux64__;
                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->warning() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(*_ext_flag_6198) {
                                }
                            
                            if(*_ext_flag_6165) {
                            }
                    }
                    
                    if(ros->denm.location[0].linked_ivims.size() != 0) {
                        // Field:  type(IvimReferences) name(linked_ivims) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_6202 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].linked_ivims[0].
                        *_ext_flag_6202 = 0; 
                        
                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_13662 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13662 = __aux64__ - 1;
                        
                        int __ifr = __aux64__;
                        for(int r = 0; r < __ifr; r++) { 
                            
                                // IvimReference  SEQUENCE
                                    //  serviceProviderId       Provider                    
                                    //  iviIdentificationNumber IviIdentificationNumber     
                                // Optional fields bytemap
                                
                                // Field:  type(Provider) name(service_provider_id) extGroup(0)
                                    // Provider  SEQUENCE
                                        //  countryCode        CountryCode          
                                        //  providerIdentifier IssuerIdentifier     
                                    // Optional fields bytemap
                                    
                                    // Field:  type(CountryCode) name(country_code) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(10) max(10) span(1)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012421\033[0m| denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.value: " << static_cast<int>(ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values.size());
                                    
                                    if(ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values.size() < 10) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.value' " << (ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values.size()) << " is less than allowable (10); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values.size() > 10) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.value' " << (ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values.size()) << " exceeds max allowable (10); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _tmp_13663 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values.size();
                                    if(__aux64__ > 10) __aux64__ = 10;
                                    *_tmp_13663 = __aux64__ - 10;
                                    buffer += 1;
                                    
                                    int __ifs = __aux64__;
                                    for(int s = 0; s < __ifs; s++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.country_code.values[s]? 1: 0);
                                    }
                                    
                                    // Field:  type(IssuerIdentifier) name(provider_identifier) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(16383) span(16384) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012422\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value) << 
                                                     " denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value: " << ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value;
                                    }
                                    
                                    uint16_t* _tmp_13664 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_13664 = ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value; 
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[r].service_provider_id.provider_identifier.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                        return -1;
                                    }
                                
                                // Field:  type(IviIdentificationNumber) name(ivi_identification_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(1) max(32767) span(32767) dataType(UInt16)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012423\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value) << 
                                                 " denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value: " << ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value;
                                }
                                
                                uint8_t* _ext_flag_6204 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.
                                *_ext_flag_6204 = (ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value >= 1 && ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value <= 32767) ? 0 : 1;
                                
                                if(*_ext_flag_6204) {
                                    uint8_t* _tmp_13666 = (uint8_t*) buffer++; 
                                    if(ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value >= 0 && ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value <= INT32_MAX) {
                                        *_tmp_13666 = 0;
                                    
                                        uint32_t* _tmp_13665 = (uint32_t*)buffer; buffer += 4;
                                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value;
                                        __aux64__ -= INT32_MIN;
                                        *_tmp_13665 = __aux64__;
                                    } 
                                    else
                                    {
                                        *_tmp_13666 = 1;
                                    
                                        uint64_t* _tmp_13665 = (uint64_t*)buffer; buffer += 8;
                                        __aux64__ = ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value;
                                        __aux64__ -= INT64_MIN;
                                        *_tmp_13665 = __aux64__;
                                    }
                                } else {
                                    uint16_t* _tmp_13665 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value - 1;
                                    *_tmp_13665 = __aux64__;
                                    __aux64__ = ros->denm.location[0].linked_ivims[0].elements[r].ivi_identification_number.value;
                                }
                                
                        }
                    }
                    
                    if(ros->denm.location[0].linked_mapems.size() != 0) {
                        // Field:  type(MapReferences) name(linked_mapems) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                        uint8_t* _ext_flag_6205 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].linked_mapems[0].
                        *_ext_flag_6205 = 0; 
                        
                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements.size();
                        if(__aux64__ > 8) __aux64__ = 8;
                        uint16_t* _tmp_13667 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13667 = __aux64__ - 1;
                        
                        int __ift = __aux64__;
                        for(int t = 0; t < __ift; t++) { 
                            
                            // Choice
                               // #0  roadsegment   RoadSegmentReferenceId
                               // #1  intersection   IntersectionReferenceId
                            uint8_t* _choice_357 = (uint8_t*) buffer;
                            buffer++;
                            
                            if(ros->denm.location[0].linked_mapems[0].elements[t].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                *_choice_357 = 0;  // Setting choice selection
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012425\033[0m| Choice selection: 0";
                            
                                    // RoadSegmentReferenceId  SEQUENCE
                                        //  region     Identifier2B   OPTIONAL  
                                        //  id         Identifier2B     
                                    // Optional fields bytemap
                                    char* _tmp_13668 = (char*) buffer++;
                                    *_tmp_13668 = (ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012426\033[0m| Optional field region = " << *_tmp_13668;
                                    
                                    if(ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region.size() != 0) {
                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                        // Integer
                                        
                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012427\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value) << 
                                                         " denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value;
                                        }
                                        
                                        uint16_t* _tmp_13669 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13669 = ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value; 
                                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012428\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value) << 
                                                     " denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value;
                                    }
                                    
                                    uint16_t* _tmp_13670 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_13670 = ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value; 
                                    __aux64__ = ros->denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                            
                            }
                            else if(ros->denm.location[0].linked_mapems[0].elements[t].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                            {
                                *_choice_357 = 1;  // Setting choice selection
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012429\033[0m| Choice selection: 1";
                            
                                    // IntersectionReferenceId  SEQUENCE
                                        //  region     Identifier2B   OPTIONAL  
                                        //  id         Identifier2B     
                                    // Optional fields bytemap
                                    char* _tmp_13671 = (char*) buffer++;
                                    *_tmp_13671 = (ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].region.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012430\033[0m| Optional field region = " << *_tmp_13671;
                                    
                                    if(ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].region.size() != 0) {
                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                        // Integer
                                        
                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012431\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value) << 
                                                         " denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value;
                                        }
                                        
                                        uint16_t* _tmp_13672 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13672 = ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value; 
                                        __aux64__ = ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012432\033[0m| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value) << 
                                                     " denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value;
                                    }
                                    
                                    uint16_t* _tmp_13673 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_13673 = ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value; 
                                    __aux64__ = ros->denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[t].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                            
                            }
                            else
                            {
                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_357) << ") selected in CHOICE MapReference in 'denm.location[0].linked_mapems[0].elements[t]'; message dropped.";
                                return -1;
                            }
                        }
                    }
                    
                    if(ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0) {
                        // Field:  type(TracesExtended) name(detection_zones_to_specified_event_point) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(7) span(7) ext(false)
                        __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements.size();
                        if(__aux64__ > 7) __aux64__ = 7;
                        uint16_t* _tmp_13674 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13674 = __aux64__ - 1;
                        
                        int __ifu = __aux64__;
                        for(int u = 0; u < __ifu; u++) { 
                            
                                // PathExtended  SEQUENCE
                                    //  pointOfEventZone PathExtended_pointOfEventZone     
                                    //  path             Path                              
                                // Optional fields bytemap
                                
                                // Field:  type(PathExtended_pointOfEventZone) name(point_of_event_zone) extGroup(0)
                                // Integer
                                
                                // UINT8  min(1) max(23) span(23) dataType(UInt8)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012434\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value) << 
                                                 " denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value: " << static_cast<int>(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value);
                                }
                                
                                uint8_t* _tmp_13675 = (uint8_t*) buffer++;
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value - 1;
                                *_tmp_13675 = __aux64__;
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 23) {
                                    logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].point_of_event_zone.value' (" << __aux64__ << ") exceeds max allowable (23); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(Path) name(path) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(0) max(40) span(41) ext(false)
                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements.size();
                                if(__aux64__ > 40) __aux64__ = 40;
                                uint16_t* _tmp_13676 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_13676 = __aux64__;
                                
                                int __ifv = __aux64__;
                                for(int v = 0; v < __ifv; v++) { 
                                    
                                        // PathPoint  SEQUENCE
                                            //  pathPosition  DeltaReferencePosition     
                                            //  pathDeltaTime PathDeltaTime            OPTIONAL  
                                        // Optional fields bytemap
                                        char* _tmp_13677 = (char*) buffer++;
                                        *_tmp_13677 = (ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012436\033[0m| Optional field path_delta_time = " << *_tmp_13677;
                                        
                                        // Field:  type(DeltaReferencePosition) name(path_position) extGroup(0)
                                            // DeltaReferencePosition  SEQUENCE
                                                //  deltaLatitude  DeltaLatitude      
                                                //  deltaLongitude DeltaLongitude     
                                                //  deltaAltitude  DeltaAltitude      
                                            // Optional fields bytemap
                                            
                                            // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012437\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_latitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_latitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_latitude.value;
                                            }
                                            
                                            double _tmp_13679 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_latitude.value;
                                            _tmp_13679 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13679);
                                            _tmp_13679 -= -131071;
                                            uint32_t* _tmp_13678 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_13678 = static_cast<uint32_t>(_tmp_13679);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012438\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_longitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_longitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_longitude.value;
                                            }
                                            
                                            double _tmp_13681 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_longitude.value;
                                            _tmp_13681 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13681);
                                            _tmp_13681 -= -131071;
                                            uint32_t* _tmp_13680 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_13680 = static_cast<uint32_t>(_tmp_13681);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012439\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_altitude.value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_altitude.value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_altitude.value;
                                            }
                                            
                                            float _tmp_13683 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_altitude.value;
                                            _tmp_13683 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13683);
                                            _tmp_13683 -= -12700;
                                            uint16_t* _tmp_13682 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_13682 = static_cast<uint16_t>(_tmp_13683);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                                logger->warning() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_position.delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time.size() != 0) {
                                            // Field:  type(PathDeltaTime) name(path_delta_time) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012440\033[0m| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value) << 
                                                             " denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value: " << ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value;
                                            }
                                            
                                            uint8_t* _ext_flag_6215 = (uint8_t*) buffer++; // Extension flag for ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].
                                            float _tmp_13684 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value;
                                            _tmp_13684 *= 100.0;
                                            __aux64__ = static_cast<int64_t>(_tmp_13684);
                                            *_ext_flag_6215 = (__aux64__ >= 1 && __aux64__ <= 65535) ? 0 : 1;
                                            
                                            if(*_ext_flag_6215) {
                                                uint8_t* _tmp_13685 = (uint8_t*) buffer++; 
                                            
                                                if(__aux64__ >= INT32_MIN && __aux64__ <= INT32_MAX) {
                                                    *_tmp_13685 = 0;
                                            
                                                    float _tmp_13687 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value;
                                                    _tmp_13687 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_13687);
                                                    _tmp_13687 -= INT32_MIN;
                                                    uint32_t* _tmp_13686 = (uint32_t*) buffer; buffer += 4;
                                                    *_tmp_13686 = static_cast<uint32_t>(_tmp_13687);
                                                }
                                                else
                                                {
                                                    *_tmp_13685 = 1;
                                            
                                                    float _tmp_13689 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value;
                                                    _tmp_13689 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_13689);
                                                    _tmp_13689 -= INT64_MIN;
                                                    uint32_t* _tmp_13688 = (uint32_t*) buffer; buffer += 4;
                                                    *_tmp_13688 = static_cast<uint32_t>(_tmp_13689);
                                                }
                                            }
                                            else
                                            {
                                                float _tmp_13691 = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[u].path.elements[v].path_delta_time[0].value;
                                                _tmp_13691 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13691);
                                                _tmp_13691 -= 1;
                                                uint16_t* _tmp_13690 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13690 = static_cast<uint16_t>(_tmp_13691);
                                            }
                                        }
                                        
                                }
                                
                        }
                    }
                    
                    if(ros->denm.location[0].predicted_paths.size() != 0) {
                        // Field:  type(PathPredictedList) name(predicted_paths) extGroup(1)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                        uint8_t* _ext_flag_6216 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].
                        *_ext_flag_6216 = 0; 
                        
                        __aux64__ = ros->denm.location[0].predicted_paths[0].elements.size();
                        if(__aux64__ > 16) __aux64__ = 16;
                        uint16_t* _tmp_13692 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13692 = __aux64__ - 1;
                        
                        int __ifw = __aux64__;
                        for(int w = 0; w < __ifw; w++) { 
                            
                                // PathPredicted2  SEQUENCE
                                    //  pathPredicted   PathPredicted       
                                    //  usageIndication UsageIndication     
                                    //  confidenceLevel ConfidenceLevel     
                                    //  ...
                                uint8_t* _ext_flag_6217 = (uint8_t*) buffer++;  // Write extension flag for PathPredicted2
                                *_ext_flag_6217 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(PathPredicted) name(path_predicted) extGroup(0)
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                uint8_t* _ext_flag_6218 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.
                                *_ext_flag_6218 = 0; 
                                
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                uint16_t* _tmp_13693 = (uint16_t*)buffer;
                                buffer += 2;
                                *_tmp_13693 = __aux64__ - 1;
                                
                                int __ifx = __aux64__;
                                for(int x = 0; x < __ifx; x++) { 
                                    
                                        // PathPointPredicted  SEQUENCE
                                            //  deltaLatitude                DeltaLatitude            
                                            //  deltaLongitude               DeltaLongitude           
                                            //  horizontalPositionConfidence PosConfidenceEllipse   OPTIONAL  
                                            //  deltaAltitude                DeltaAltitude            
                                            //  altitudeConfidence           AltitudeConfidence       
                                            //  pathDeltaTime                PathDeltaTimeChoice      
                                            //  symmetricAreaOffset          StandardLength9b       OPTIONAL  
                                            //  asymmetricAreaOffset         StandardLength9b       OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_6219 = (uint8_t*) buffer++;  // Write extension flag for PathPointPredicted
                                        *_ext_flag_6219 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_13694 = (char*) buffer++;
                                        *_tmp_13694 = (ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012443\033[0m| Optional field horizontal_position_confidence = " << *_tmp_13694;
                                        char* _tmp_13695 = (char*) buffer++;
                                        *_tmp_13695 = (ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012444\033[0m| Optional field symmetric_area_offset = " << *_tmp_13695;
                                        char* _tmp_13696 = (char*) buffer++;
                                        *_tmp_13696 = (ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m012445\033[0m| Optional field asymmetric_area_offset = " << *_tmp_13696;
                                        
                                        // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                        // Real
                                        
                                        // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012446\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_latitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_latitude.value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_latitude.value;
                                        }
                                        
                                        double _tmp_13698 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_latitude.value;
                                        _tmp_13698 *= 1.0E7;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13698);
                                        _tmp_13698 -= -131071;
                                        uint32_t* _tmp_13697 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13697 = static_cast<uint32_t>(_tmp_13698);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                        // Real
                                        
                                        // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012447\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_longitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_longitude.value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_longitude.value;
                                        }
                                        
                                        double _tmp_13700 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_longitude.value;
                                        _tmp_13700 *= 1.0E7;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13700);
                                        _tmp_13700 -= -131071;
                                        uint32_t* _tmp_13699 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13699 = static_cast<uint32_t>(_tmp_13700);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                            return -1;
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence.size() != 0) {
                                            // Field:  type(PosConfidenceEllipse) name(horizontal_position_confidence) extGroup(0)
                                                // PosConfidenceEllipse  SEQUENCE
                                                    //  semiMajorConfidence  SemiAxisLength     
                                                    //  semiMinorConfidence  SemiAxisLength     
                                                    //  semiMajorOrientation HeadingValue       
                                                // Optional fields bytemap
                                                
                                                // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012448\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_confidence.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_confidence.value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_confidence.value;
                                                }
                                                
                                                float _tmp_13702 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_confidence.value;
                                                _tmp_13702 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13702);
                                                uint16_t* _tmp_13701 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13701 = static_cast<uint16_t>(_tmp_13702);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012449\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_minor_confidence.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_minor_confidence.value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                }
                                                
                                                float _tmp_13704 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                _tmp_13704 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13704);
                                                uint16_t* _tmp_13703 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13703 = static_cast<uint16_t>(_tmp_13704);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m012450\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_orientation.value) << 
                                                                 " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_orientation.value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_orientation.value;
                                                }
                                                
                                                float _tmp_13706 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_orientation.value;
                                                _tmp_13706 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_13706);
                                                uint16_t* _tmp_13705 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_13705 = static_cast<uint16_t>(_tmp_13706);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].horizontal_position_confidence[0].semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012451\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_altitude.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_altitude.value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_altitude.value;
                                        }
                                        
                                        float _tmp_13708 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_altitude.value;
                                        _tmp_13708 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13708);
                                        _tmp_13708 -= -12700;
                                        uint16_t* _tmp_13707 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13707 = static_cast<uint16_t>(_tmp_13708);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012452\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value) << 
                                                         " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_13709 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_13709 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value; 
                                        __aux64__ = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(PathDeltaTimeChoice) name(path_delta_time) extGroup(0)
                                        // Choice
                                           // #0  deltaTimeHighPrecision   DeltaTimeTenthOfSecond
                                           // #1  deltaTimeBigRange   DeltaTimeTenSeconds
                                        uint8_t* _choice_358 = (uint8_t*) buffer;
                                        buffer++;
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision.size() != 0) {  // CHOICE 0  fieldType(PathDeltaTimeChoice) 
                                            *_choice_358 = 0;  // Setting choice selection
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m012453\033[0m| Choice selection: 0";
                                        
                                            // Real
                                            
                                            // FLOAT  min(0) max(127) span(128) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012454\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision[0].value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision[0].value);
                                            }
                                            
                                            float _tmp_13711 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision[0].value;
                                            _tmp_13711 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13711);
                                            uint8_t* _tmp_13710 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_13710 = static_cast<uint8_t>(_tmp_13711);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_high_precision[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        }
                                        else if(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range.size() != 0)  // CHOICE 1  fieldType(PathDeltaTimeChoice) 
                                        {
                                            *_choice_358 = 1;  // Setting choice selection
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m012455\033[0m| Choice selection: 1";
                                        
                                            // Real
                                            
                                            // FLOAT  min(0) max(127) span(128) scaleDivisor(0.1) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012456\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range[0].value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range[0].value);
                                            }
                                            
                                            float _tmp_13713 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range[0].value;
                                            _tmp_13713 *= 0.1;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13713);
                                            uint8_t* _tmp_13712 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_13712 = static_cast<uint8_t>(_tmp_13713);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time.delta_time_big_range[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_358) << ") selected in CHOICE PathDeltaTimeChoice in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].path_delta_time'; message dropped.";
                                            return -1;
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset.size() != 0) {
                                            // Field:  type(StandardLength9b) name(symmetric_area_offset) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012457\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset[0].value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset[0].value;
                                            }
                                            
                                            float _tmp_13715 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset[0].value;
                                            _tmp_13715 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13715);
                                            uint16_t* _tmp_13714 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_13714 = static_cast<uint16_t>(_tmp_13715);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].symmetric_area_offset[0].value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset.size() != 0) {
                                            // Field:  type(StandardLength9b) name(asymmetric_area_offset) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m012458\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset[0].value) << 
                                                             " denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset[0].value: " << ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset[0].value;
                                            }
                                            
                                            float _tmp_13717 = ros->denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset[0].value;
                                            _tmp_13717 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_13717);
                                            uint16_t* _tmp_13716 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_13716 = static_cast<uint16_t>(_tmp_13717);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].path_predicted.elements[x].asymmetric_area_offset[0].value' (" << __aux64__ << ") exceeds max allowable (511); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(*_ext_flag_6219) {
                                        }
                                }
                                
                                // Field:  type(UsageIndication) name(usage_indication) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(2) span(3) dataType(Int32)
                                uint8_t* _ext_flag_6232 = (uint8_t*) buffer++; // Write extension flag for ros->denm.location[0].predicted_paths[0].elements[w].usage_indication.
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012459\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].usage_indication.value) << 
                                                 " denm.location[0].predicted_paths[0].elements[w].usage_indication.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[w].usage_indication.value);
                                }
                                
                                uint8_t* _tmp_13719 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_13719 = ros->denm.location[0].predicted_paths[0].elements[w].usage_indication.value; 
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[w].usage_indication.value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].usage_indication.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].usage_indication.value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(ConfidenceLevel) name(confidence_level) extGroup(0)
                                // Integer
                                
                                // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012460\033[0m| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[w].confidence_level.value) << 
                                                 " denm.location[0].predicted_paths[0].elements[w].confidence_level.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[w].confidence_level.value);
                                }
                                
                                uint8_t* _tmp_13720 = (uint8_t*) buffer++;
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[w].confidence_level.value - 1;
                                *_tmp_13720 = __aux64__;
                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[w].confidence_level.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].confidence_level.value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                    logger->warning() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[w].confidence_level.value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_6217) {
                                }
                        }
                    }
                    
                    *_tmp_13557_openType = buffer - _tmp_13558_start;  // OpenType length
                }
        }
        
        if(ros->denm.alacarte.size() != 0) {
            // Field:  type(AlacarteContainer) name(alacarte) extGroup(0)
                // AlacarteContainer  SEQUENCE
                    //  lanePosition        LanePosition                 OPTIONAL  
                    //  impactReduction     ImpactReductionContainer     OPTIONAL  
                    //  externalTemperature Temperature                  OPTIONAL  
                    //  roadWorks           RoadWorksContainerExtended   OPTIONAL  
                    //  positioningSolution PositioningSolutionType      OPTIONAL  
                    //  stationaryVehicle   StationaryVehicleContainer   OPTIONAL  
                    //  roadConfiguration   RoadConfigurationContainer   OPTIONAL  Extension group #1
                    //  precrash            PreCrashContainer            OPTIONAL  Extension group #1
                uint8_t* _ext_flag_6234 = (uint8_t*) buffer++;  // Write extension flag for AlacarteContainer
                *_ext_flag_6234 = (ros->denm.alacarte[0].road_configuration.size() != 0 || ros->denm.alacarte[0].precrash.size() != 0) ? 1 : 0; 
                
                // Optional fields bytemap
                char* _tmp_13722 = (char*) buffer++;
                *_tmp_13722 = (ros->denm.alacarte[0].lane_position.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012461\033[0m| Optional field lane_position = " << *_tmp_13722;
                char* _tmp_13723 = (char*) buffer++;
                *_tmp_13723 = (ros->denm.alacarte[0].impact_reduction.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012462\033[0m| Optional field impact_reduction = " << *_tmp_13723;
                char* _tmp_13724 = (char*) buffer++;
                *_tmp_13724 = (ros->denm.alacarte[0].external_temperature.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012463\033[0m| Optional field external_temperature = " << *_tmp_13724;
                char* _tmp_13725 = (char*) buffer++;
                *_tmp_13725 = (ros->denm.alacarte[0].road_works.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012464\033[0m| Optional field road_works = " << *_tmp_13725;
                char* _tmp_13726 = (char*) buffer++;
                *_tmp_13726 = (ros->denm.alacarte[0].positioning_solution.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012465\033[0m| Optional field positioning_solution = " << *_tmp_13726;
                char* _tmp_13727 = (char*) buffer++;
                *_tmp_13727 = (ros->denm.alacarte[0].stationary_vehicle.size() != 0 ? 1 : 0);
                if(debug)
                    logger->debug() << "|\033[38;5;94m012466\033[0m| Optional field stationary_vehicle = " << *_tmp_13727;
                
                if(ros->denm.alacarte[0].lane_position.size() != 0) {
                    // Field:  type(LanePosition) name(lane_position) extGroup(0)
                    // Integer
                    
                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m012467\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].lane_position[0].value) << 
                                     " denm.alacarte[0].lane_position[0].value: " << static_cast<int>(ros->denm.alacarte[0].lane_position[0].value);
                    }
                    
                    uint8_t* _tmp_13728 = (uint8_t*) buffer++;
                    __aux64__ = ros->denm.alacarte[0].lane_position[0].value - -1;
                    *_tmp_13728 = __aux64__;
                    __aux64__ = ros->denm.alacarte[0].lane_position[0].value;
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].impact_reduction.size() != 0) {
                    // Field:  type(ImpactReductionContainer) name(impact_reduction) extGroup(0)
                        // ImpactReductionContainer  SEQUENCE
                            //  heightLonCarrLeft         HeightLonCarr                 
                            //  heightLonCarrRight        HeightLonCarr                 
                            //  posLonCarrLeft            PosLonCarr                    
                            //  posLonCarrRight           PosLonCarr                    
                            //  positionOfPillars         PositionOfPillars             
                            //  posCentMass               PosCentMass                   
                            //  wheelBaseVehicle          WheelBaseVehicle              
                            //  turningRadius             TurningRadius                 
                            //  posFrontAx                PosFrontAx                    
                            //  positionOfOccupants       PositionOfOccupants           
                            //  vehicleMass               VehicleMass                   
                            //  requestResponseIndication RequestResponseIndication     
                        // Optional fields bytemap
                        
                        // Field:  type(HeightLonCarr) name(height_lon_carr_left) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012468\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value) << 
                                         " denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value);
                        }
                        
                        float _tmp_13730 = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value;
                        _tmp_13730 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13730);
                        _tmp_13730 -= 1;
                        uint8_t* _tmp_13729 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13729 = static_cast<uint8_t>(_tmp_13730);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' (" << __aux64__ << ") exceeds max allowable (100); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(HeightLonCarr) name(height_lon_carr_right) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012469\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value) << 
                                         " denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value);
                        }
                        
                        float _tmp_13732 = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value;
                        _tmp_13732 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13732);
                        _tmp_13732 -= 1;
                        uint8_t* _tmp_13731 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13731 = static_cast<uint8_t>(_tmp_13732);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' (" << __aux64__ << ") exceeds max allowable (100); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosLonCarr) name(pos_lon_carr_left) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012470\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value);
                        }
                        
                        float _tmp_13734 = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value;
                        _tmp_13734 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13734);
                        _tmp_13734 -= 1;
                        uint8_t* _tmp_13733 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13733 = static_cast<uint8_t>(_tmp_13734);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosLonCarr) name(pos_lon_carr_right) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012471\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value);
                        }
                        
                        float _tmp_13736 = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value;
                        _tmp_13736 *= 100.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13736);
                        _tmp_13736 -= 1;
                        uint8_t* _tmp_13735 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13735 = static_cast<uint8_t>(_tmp_13736);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PositionOfPillars) name(position_of_pillars) extGroup(0)
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(3) span(3) ext(true)
                        uint8_t* _ext_flag_6240 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.
                        *_ext_flag_6240 = 0; 
                        
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements.size();
                        if(__aux64__ > 3) __aux64__ = 3;
                        uint16_t* _tmp_13737 = (uint16_t*)buffer;
                        buffer += 2;
                        *_tmp_13737 = __aux64__ - 1;
                        
                        int __ify = __aux64__;
                        for(int y = 0; y < __ify; y++) { 
                            
                            // Real
                            
                            // FLOAT  min(1) max(30) span(30) scaleDivisor(10.0) dataType(Float)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012473\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[y].value) << 
                                             " denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[y].value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[y].value);
                            }
                            
                            float _tmp_13739 = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[y].value;
                            _tmp_13739 *= 10.0;
                            __aux64__ = static_cast<uint64_t>(_tmp_13739);
                            _tmp_13739 -= 1;
                            uint8_t* _tmp_13738 = (uint8_t*) buffer; buffer += 1;
                            *_tmp_13738 = static_cast<uint8_t>(_tmp_13739);
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[y].value' (" << __aux64__ << ") less than (1); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 30) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[y].value' (" << __aux64__ << ") exceeds max allowable (30); message dropped.";
                                return -1;
                            }
                            
                        }
                        
                        // Field:  type(PosCentMass) name(pos_cent_mass) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(63) span(63) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012474\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_cent_mass.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value);
                        }
                        
                        float _tmp_13741 = ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value;
                        _tmp_13741 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13741);
                        _tmp_13741 -= 1;
                        uint8_t* _tmp_13740 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13740 = static_cast<uint8_t>(_tmp_13741);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 63) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' (" << __aux64__ << ") exceeds max allowable (63); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(WheelBaseVehicle) name(wheel_base_vehicle) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012475\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value) << 
                                         " denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value);
                        }
                        
                        float _tmp_13743 = ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value;
                        _tmp_13743 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13743);
                        _tmp_13743 -= 1;
                        uint8_t* _tmp_13742 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13742 = static_cast<uint8_t>(_tmp_13743);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(TurningRadius) name(turning_radius) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(255) span(255) scaleDivisor(2.5) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012476\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value) << 
                                         " denm.alacarte[0].impact_reduction[0].turning_radius.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value);
                        }
                        
                        float _tmp_13745 = ros->denm.alacarte[0].impact_reduction[0].turning_radius.value;
                        _tmp_13745 *= 2.5;
                        __aux64__ = static_cast<uint64_t>(_tmp_13745);
                        _tmp_13745 -= 1;
                        uint8_t* _tmp_13744 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13744 = static_cast<uint8_t>(_tmp_13745);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PosFrontAx) name(pos_front_ax) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(20) span(20) scaleDivisor(10.0) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012477\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value) << 
                                         " denm.alacarte[0].impact_reduction[0].pos_front_ax.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value);
                        }
                        
                        float _tmp_13747 = ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value;
                        _tmp_13747 *= 10.0;
                        __aux64__ = static_cast<uint64_t>(_tmp_13747);
                        _tmp_13747 -= 1;
                        uint8_t* _tmp_13746 = (uint8_t*) buffer; buffer += 1;
                        *_tmp_13746 = static_cast<uint8_t>(_tmp_13747);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 20) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' (" << __aux64__ << ") exceeds max allowable (20); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(PositionOfOccupants) name(position_of_occupants) extGroup(0)
                        // BitString
                        // BIT_STRING  min(20) max(20) span(1)
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012478\033[0m| denm.alacarte[0].impact_reduction[0].position_of_occupants.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size());
                        
                        if(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size() < 20) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size()) << " is less than allowable (20); message dropped.";
                            return -1;
                        }
                        if(ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size() > 20) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size()) << " exceeds max allowable (20); message dropped.";
                            return -1;
                        }
                        
                        uint8_t* _tmp_13748 = (uint8_t*)buffer;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.size();
                        if(__aux64__ > 20) __aux64__ = 20;
                        *_tmp_13748 = __aux64__ - 20;
                        buffer += 1;
                        
                        int __ifz = __aux64__;
                        for(int z = 0; z < __ifz; z++) {
                            uint8_t* __b__ = (uint8_t*)buffer++;
                            *__b__ = (ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values[z]? 1: 0);
                        }
                        
                        // Field:  type(VehicleMass) name(vehicle_mass) extGroup(0)
                        // Real
                        
                        // FLOAT  min(1) max(1024) span(1024) scaleDivisor(1.0E-5) dataType(Float)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012479\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].vehicle_mass.value: " << ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        }
                        
                        float _tmp_13750 = ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        _tmp_13750 *= 1.0E-5;
                        __aux64__ = static_cast<uint64_t>(_tmp_13750);
                        _tmp_13750 -= 1;
                        uint16_t* _tmp_13749 = (uint16_t*) buffer; buffer += 2;
                        *_tmp_13749 = static_cast<uint16_t>(_tmp_13750);
                        
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' (" << __aux64__ << ") less than (1); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 1024) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' (" << __aux64__ << ") exceeds max allowable (1024); message dropped.";
                            return -1;
                        }
                        
                        // Field:  type(RequestResponseIndication) name(request_response_indication) extGroup(0)
                        // Enumerated
                        // INT32  min(0) max(1) span(2) dataType(Int32)
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m012480\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value) << 
                                         " denm.alacarte[0].impact_reduction[0].request_response_indication.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value);
                        }
                        
                        uint8_t* _tmp_13751 = (uint8_t*)buffer;
                        buffer += 1;
                        *_tmp_13751 = ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value; 
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value; 
                        // MIN validator
                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' (" << __aux64__ << ") less than (0); message dropped.";
                            return -1;
                        }
                        // MAX validator
                        if (VALIDATORS_ENABLED && __aux64__ > 1) {
                            logger->warning() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' (" << __aux64__ << ") exceeds max allowable (1); message dropped.";
                            return -1;
                        }
                }
                
                if(ros->denm.alacarte[0].external_temperature.size() != 0) {
                    // Field:  type(Temperature) name(external_temperature) extGroup(0)
                    // Integer
                    
                    // INT8  min(-60) max(67) span(128) dataType(Int8)
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m012481\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].external_temperature[0].value) << 
                                     " denm.alacarte[0].external_temperature[0].value: " << static_cast<int>(ros->denm.alacarte[0].external_temperature[0].value);
                    }
                    
                    uint8_t* _tmp_13752 = (uint8_t*) buffer++;
                    __aux64__ = ros->denm.alacarte[0].external_temperature[0].value - -60;
                    *_tmp_13752 = __aux64__;
                    __aux64__ = ros->denm.alacarte[0].external_temperature[0].value;
                    
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < -60) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' (" << __aux64__ << ") less than (-60); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 67) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' (" << __aux64__ << ") exceeds max allowable (67); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].road_works.size() != 0) {
                    // Field:  type(RoadWorksContainerExtended) name(road_works) extGroup(0)
                        // RoadWorksContainerExtended  SEQUENCE
                            //  lightBarSirenInUse      LightBarSirenInUse       OPTIONAL  
                            //  closedLanes             ClosedLanes              OPTIONAL  
                            //  restriction             RestrictedTypes          OPTIONAL  
                            //  speedLimit              SpeedLimit               OPTIONAL  
                            //  incidentIndication      CauseCodeV2              OPTIONAL  
                            //  recommendedPath         ItineraryPath            OPTIONAL  
                            //  startingPointSpeedLimit DeltaReferencePosition   OPTIONAL  
                            //  trafficFlowRule         TrafficRule              OPTIONAL  
                            //  referenceDenms          ActionIdList             OPTIONAL  
                        // Optional fields bytemap
                        char* _tmp_13753 = (char*) buffer++;
                        *_tmp_13753 = (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012482\033[0m| Optional field light_bar_siren_in_use = " << *_tmp_13753;
                        char* _tmp_13754 = (char*) buffer++;
                        *_tmp_13754 = (ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012483\033[0m| Optional field closed_lanes = " << *_tmp_13754;
                        char* _tmp_13755 = (char*) buffer++;
                        *_tmp_13755 = (ros->denm.alacarte[0].road_works[0].restriction.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012484\033[0m| Optional field restriction = " << *_tmp_13755;
                        char* _tmp_13756 = (char*) buffer++;
                        *_tmp_13756 = (ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012485\033[0m| Optional field speed_limit = " << *_tmp_13756;
                        char* _tmp_13757 = (char*) buffer++;
                        *_tmp_13757 = (ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012486\033[0m| Optional field incident_indication = " << *_tmp_13757;
                        char* _tmp_13758 = (char*) buffer++;
                        *_tmp_13758 = (ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012487\033[0m| Optional field recommended_path = " << *_tmp_13758;
                        char* _tmp_13759 = (char*) buffer++;
                        *_tmp_13759 = (ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012488\033[0m| Optional field starting_point_speed_limit = " << *_tmp_13759;
                        char* _tmp_13760 = (char*) buffer++;
                        *_tmp_13760 = (ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012489\033[0m| Optional field traffic_flow_rule = " << *_tmp_13760;
                        char* _tmp_13761 = (char*) buffer++;
                        *_tmp_13761 = (ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012490\033[0m| Optional field reference_denms = " << *_tmp_13761;
                        
                        if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0) {
                            // Field:  type(LightBarSirenInUse) name(light_bar_siren_in_use) extGroup(0)
                            // BitString
                            // BIT_STRING  min(2) max(2) span(1)
                            if(debug)
                                logger->debug() << "|\033[38;5;94m012491\033[0m| denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size());
                            
                            if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size() < 2) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size()) << " is less than allowable (2); message dropped.";
                                return -1;
                            }
                            if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size() > 2) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size()) << " exceeds max allowable (2); message dropped.";
                                return -1;
                            }
                            
                            uint8_t* _tmp_13762 = (uint8_t*)buffer;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.size();
                            if(__aux64__ > 2) __aux64__ = 2;
                            *_tmp_13762 = __aux64__ - 2;
                            buffer += 1;
                            
                            int __ifa = __aux64__;
                            for(int a = 0; a < __ifa; a++) {
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                *__b__ = (ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values[a]? 1: 0);
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0) {
                            // Field:  type(ClosedLanes) name(closed_lanes) extGroup(0)
                                // ClosedLanes  SEQUENCE
                                    //  innerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  outerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  drivingLaneStatus       DrivingLaneStatus    OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_6249 = (uint8_t*) buffer++;  // Write extension flag for ClosedLanes
                                *_ext_flag_6249 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_13763 = (char*) buffer++;
                                *_tmp_13763 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012492\033[0m| Optional field innerhard_shoulder_status = " << *_tmp_13763;
                                char* _tmp_13764 = (char*) buffer++;
                                *_tmp_13764 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012493\033[0m| Optional field outerhard_shoulder_status = " << *_tmp_13764;
                                char* _tmp_13765 = (char*) buffer++;
                                *_tmp_13765 = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m012494\033[0m| Optional field driving_lane_status = " << *_tmp_13765;
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0) {
                                    // Field:  type(HardShoulderStatus) name(innerhard_shoulder_status) extGroup(0)
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) dataType(Int32)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012495\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13766 = (uint8_t*)buffer;
                                    buffer += 1;
                                    *_tmp_13766 = ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value; 
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0) {
                                    // Field:  type(HardShoulderStatus) name(outerhard_shoulder_status) extGroup(0)
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) dataType(Int32)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012496\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13767 = (uint8_t*)buffer;
                                    buffer += 1;
                                    *_tmp_13767 = ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value; 
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' (" << __aux64__ << ") exceeds max allowable (2); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0) {
                                    // Field:  type(DrivingLaneStatus) name(driving_lane_status) extGroup(0)
                                    // BitString
                                    // BIT_STRING  min(1) max(13) span(13)
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012497\033[0m| denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size());
                                    
                                    if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size() < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size()) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size() > 13) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size()) << " exceeds max allowable (13); message dropped.";
                                        return -1;
                                    }
                                    
                                    uint8_t* _tmp_13768 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.size();
                                    if(__aux64__ > 13) __aux64__ = 13;
                                    *_tmp_13768 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifb = __aux64__;
                                    for(int b = 0; b < __ifb; b++) {
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        *__b__ = (ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values[b]? 1: 0);
                                    }
                                }
                                
                                if(*_ext_flag_6249) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].restriction.size() != 0) {
                            // Field:  type(RestrictedTypes) name(restriction) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(3) span(3) ext(true)
                            uint8_t* _ext_flag_6252 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].restriction[0].
                            *_ext_flag_6252 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_works[0].restriction[0].elements.size();
                            if(__aux64__ > 3) __aux64__ = 3;
                            uint16_t* _tmp_13770 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_13770 = __aux64__ - 1;
                            
                            int __ifc = __aux64__;
                            for(int c = 0; c < __ifc; c++) { 
                                
                                // Integer
                                
                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012499\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].restriction[0].elements[c].value) << 
                                                 " denm.alacarte[0].road_works[0].restriction[0].elements[c].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].restriction[0].elements[c].value);
                                }
                                
                                uint8_t* _tmp_13771 = (uint8_t*) buffer++;
                                *_tmp_13771 = ros->denm.alacarte[0].road_works[0].restriction[0].elements[c].value; 
                                __aux64__ = ros->denm.alacarte[0].road_works[0].restriction[0].elements[c].value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[c].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[c].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                    return -1;
                                }
                                
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0) {
                            // Field:  type(SpeedLimit) name(speed_limit) extGroup(0)
                            // Integer
                            
                            // UINT8  min(1) max(255) span(255) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012500\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].speed_limit[0].value) << 
                                             " denm.alacarte[0].road_works[0].speed_limit[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].speed_limit[0].value);
                            }
                            
                            uint8_t* _tmp_13772 = (uint8_t*) buffer++;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].speed_limit[0].value - 1;
                            *_tmp_13772 = __aux64__;
                            __aux64__ = ros->denm.alacarte[0].road_works[0].speed_limit[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0) {
                            // Field:  type(CauseCodeV2) name(incident_indication) extGroup(0)
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_6255 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                                *_ext_flag_6255 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                                // Choice
                                   // #0  reserved0   SubCauseCodeType
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode
                                   // #2  accident2   AccidentSubCauseCode
                                   // #3  roadworks3   RoadworksSubCauseCode
                                   // #4  reserved4   SubCauseCodeType
                                   // #5  impassability5   ImpassabilitySubCauseCode
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                                   // #7  aquaplaning7   SubCauseCodeType
                                   // #8  reserved8   SubCauseCodeType
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                                   // #13  reserved13   SubCauseCodeType
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                                   // #16  reserved16   SubCauseCodeType
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                                   // #20  violence20   SubCauseCodeType
                                   // #21  reserved21   SubCauseCodeType
                                   // #22  reserved22   SubCauseCodeType
                                   // #23  reserved23   SubCauseCodeType
                                   // #24  reserved24   SubCauseCodeType
                                   // #25  reserved25   SubCauseCodeType
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                                   // #29  reserved29   SubCauseCodeType
                                   // #30  reserved30   SubCauseCodeType
                                   // #31  reserved31   SubCauseCodeType
                                   // #32  reserved32   SubCauseCodeType
                                   // #33  reserved33   SubCauseCodeType
                                   // #34  reserved34   SubCauseCodeType
                                   // #35  reserved35   SubCauseCodeType
                                   // #36  reserved36   SubCauseCodeType
                                   // #37  reserved37   SubCauseCodeType
                                   // #38  reserved38   SubCauseCodeType
                                   // #39  reserved39   SubCauseCodeType
                                   // #40  reserved40   SubCauseCodeType
                                   // #41  reserved41   SubCauseCodeType
                                   // #42  reserved42   SubCauseCodeType
                                   // #43  reserved43   SubCauseCodeType
                                   // #44  reserved44   SubCauseCodeType
                                   // #45  reserved45   SubCauseCodeType
                                   // #46  reserved46   SubCauseCodeType
                                   // #47  reserved47   SubCauseCodeType
                                   // #48  reserved48   SubCauseCodeType
                                   // #49  reserved49   SubCauseCodeType
                                   // #50  reserved50   SubCauseCodeType
                                   // #51  reserved51   SubCauseCodeType
                                   // #52  reserved52   SubCauseCodeType
                                   // #53  reserved53   SubCauseCodeType
                                   // #54  reserved54   SubCauseCodeType
                                   // #55  reserved55   SubCauseCodeType
                                   // #56  reserved56   SubCauseCodeType
                                   // #57  reserved57   SubCauseCodeType
                                   // #58  reserved58   SubCauseCodeType
                                   // #59  reserved59   SubCauseCodeType
                                   // #60  reserved60   SubCauseCodeType
                                   // #61  reserved61   SubCauseCodeType
                                   // #62  reserved62   SubCauseCodeType
                                   // #63  reserved63   SubCauseCodeType
                                   // #64  reserved64   SubCauseCodeType
                                   // #65  reserved65   SubCauseCodeType
                                   // #66  reserved66   SubCauseCodeType
                                   // #67  reserved67   SubCauseCodeType
                                   // #68  reserved68   SubCauseCodeType
                                   // #69  reserved69   SubCauseCodeType
                                   // #70  reserved70   SubCauseCodeType
                                   // #71  reserved71   SubCauseCodeType
                                   // #72  reserved72   SubCauseCodeType
                                   // #73  reserved73   SubCauseCodeType
                                   // #74  reserved74   SubCauseCodeType
                                   // #75  reserved75   SubCauseCodeType
                                   // #76  reserved76   SubCauseCodeType
                                   // #77  reserved77   SubCauseCodeType
                                   // #78  reserved78   SubCauseCodeType
                                   // #79  reserved79   SubCauseCodeType
                                   // #80  reserved80   SubCauseCodeType
                                   // #81  reserved81   SubCauseCodeType
                                   // #82  reserved82   SubCauseCodeType
                                   // #83  reserved83   SubCauseCodeType
                                   // #84  reserved84   SubCauseCodeType
                                   // #85  reserved85   SubCauseCodeType
                                   // #86  reserved86   SubCauseCodeType
                                   // #87  reserved87   SubCauseCodeType
                                   // #88  reserved88   SubCauseCodeType
                                   // #89  reserved89   SubCauseCodeType
                                   // #90  reserved90   SubCauseCodeType
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                                   // #92  postCrash92   PostCrashSubCauseCode
                                   // #93  humanProblem93   HumanProblemSubCauseCode
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode
                                   // #98  signalViolation98   SignalViolationSubCauseCode
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                                   // #101  reserved101   SubCauseCodeType
                                   // #102  reserved102   SubCauseCodeType
                                   // #103  reserved103   SubCauseCodeType
                                   // #104  reserved104   SubCauseCodeType
                                   // #105  reserved105   SubCauseCodeType
                                   // #106  reserved106   SubCauseCodeType
                                   // #107  reserved107   SubCauseCodeType
                                   // #108  reserved108   SubCauseCodeType
                                   // #109  reserved109   SubCauseCodeType
                                   // #110  reserved110   SubCauseCodeType
                                   // #111  reserved111   SubCauseCodeType
                                   // #112  reserved112   SubCauseCodeType
                                   // #113  reserved113   SubCauseCodeType
                                   // #114  reserved114   SubCauseCodeType
                                   // #115  reserved115   SubCauseCodeType
                                   // #116  reserved116   SubCauseCodeType
                                   // #117  reserved117   SubCauseCodeType
                                   // #118  reserved118   SubCauseCodeType
                                   // #119  reserved119   SubCauseCodeType
                                   // #120  reserved120   SubCauseCodeType
                                   // #121  reserved121   SubCauseCodeType
                                   // #122  reserved122   SubCauseCodeType
                                   // #123  reserved123   SubCauseCodeType
                                   // #124  reserved124   SubCauseCodeType
                                   // #125  reserved125   SubCauseCodeType
                                   // #126  reserved126   SubCauseCodeType
                                   // #127  reserved127   SubCauseCodeType
                                   // #128  reserved128   SubCauseCodeType
                                uint8_t* _choice_359 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                                    *_choice_359 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012501\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012502\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13773 = (uint8_t*) buffer++;
                                    *_tmp_13773 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012503\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012504\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13774 = (uint8_t*) buffer++;
                                    *_tmp_13774 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012505\033[0m| Choice selection: 2";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012506\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13775 = (uint8_t*) buffer++;
                                    *_tmp_13775 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012507\033[0m| Choice selection: 3";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012508\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13776 = (uint8_t*) buffer++;
                                    *_tmp_13776 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012509\033[0m| Choice selection: 4";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012510\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13777 = (uint8_t*) buffer++;
                                    *_tmp_13777 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 5;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012511\033[0m| Choice selection: 5";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012512\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13778 = (uint8_t*) buffer++;
                                    *_tmp_13778 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 6;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012513\033[0m| Choice selection: 6";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012514\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13779 = (uint8_t*) buffer++;
                                    *_tmp_13779 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 7;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012515\033[0m| Choice selection: 7";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012516\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13780 = (uint8_t*) buffer++;
                                    *_tmp_13780 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 8;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012517\033[0m| Choice selection: 8";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012518\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13781 = (uint8_t*) buffer++;
                                    *_tmp_13781 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 9;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012519\033[0m| Choice selection: 9";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012520\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13782 = (uint8_t*) buffer++;
                                    *_tmp_13782 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 10;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012521\033[0m| Choice selection: 10";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012522\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13783 = (uint8_t*) buffer++;
                                    *_tmp_13783 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 11;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012523\033[0m| Choice selection: 11";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012524\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13784 = (uint8_t*) buffer++;
                                    *_tmp_13784 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 12;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012525\033[0m| Choice selection: 12";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012526\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13785 = (uint8_t*) buffer++;
                                    *_tmp_13785 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 13;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012527\033[0m| Choice selection: 13";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012528\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13786 = (uint8_t*) buffer++;
                                    *_tmp_13786 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 14;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012529\033[0m| Choice selection: 14";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012530\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13787 = (uint8_t*) buffer++;
                                    *_tmp_13787 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 15;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012531\033[0m| Choice selection: 15";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012532\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13788 = (uint8_t*) buffer++;
                                    *_tmp_13788 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 16;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012533\033[0m| Choice selection: 16";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012534\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13789 = (uint8_t*) buffer++;
                                    *_tmp_13789 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 17;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012535\033[0m| Choice selection: 17";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012536\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13790 = (uint8_t*) buffer++;
                                    *_tmp_13790 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 18;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012537\033[0m| Choice selection: 18";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012538\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13791 = (uint8_t*) buffer++;
                                    *_tmp_13791 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 19;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012539\033[0m| Choice selection: 19";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012540\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13792 = (uint8_t*) buffer++;
                                    *_tmp_13792 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 20;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012541\033[0m| Choice selection: 20";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012542\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13793 = (uint8_t*) buffer++;
                                    *_tmp_13793 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 21;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012543\033[0m| Choice selection: 21";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012544\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13794 = (uint8_t*) buffer++;
                                    *_tmp_13794 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 22;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012545\033[0m| Choice selection: 22";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012546\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13795 = (uint8_t*) buffer++;
                                    *_tmp_13795 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 23;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012547\033[0m| Choice selection: 23";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012548\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13796 = (uint8_t*) buffer++;
                                    *_tmp_13796 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 24;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012549\033[0m| Choice selection: 24";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012550\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13797 = (uint8_t*) buffer++;
                                    *_tmp_13797 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 25;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012551\033[0m| Choice selection: 25";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012552\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13798 = (uint8_t*) buffer++;
                                    *_tmp_13798 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 26;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012553\033[0m| Choice selection: 26";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012554\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13799 = (uint8_t*) buffer++;
                                    *_tmp_13799 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 27;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012555\033[0m| Choice selection: 27";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012556\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13800 = (uint8_t*) buffer++;
                                    *_tmp_13800 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 28;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012557\033[0m| Choice selection: 28";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012558\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13801 = (uint8_t*) buffer++;
                                    *_tmp_13801 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 29;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012559\033[0m| Choice selection: 29";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012560\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13802 = (uint8_t*) buffer++;
                                    *_tmp_13802 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 30;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012561\033[0m| Choice selection: 30";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012562\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13803 = (uint8_t*) buffer++;
                                    *_tmp_13803 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 31;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012563\033[0m| Choice selection: 31";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012564\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13804 = (uint8_t*) buffer++;
                                    *_tmp_13804 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 32;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012565\033[0m| Choice selection: 32";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012566\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13805 = (uint8_t*) buffer++;
                                    *_tmp_13805 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 33;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012567\033[0m| Choice selection: 33";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012568\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13806 = (uint8_t*) buffer++;
                                    *_tmp_13806 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 34;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012569\033[0m| Choice selection: 34";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012570\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13807 = (uint8_t*) buffer++;
                                    *_tmp_13807 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 35;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012571\033[0m| Choice selection: 35";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012572\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13808 = (uint8_t*) buffer++;
                                    *_tmp_13808 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 36;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012573\033[0m| Choice selection: 36";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012574\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13809 = (uint8_t*) buffer++;
                                    *_tmp_13809 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 37;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012575\033[0m| Choice selection: 37";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012576\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13810 = (uint8_t*) buffer++;
                                    *_tmp_13810 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 38;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012577\033[0m| Choice selection: 38";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012578\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13811 = (uint8_t*) buffer++;
                                    *_tmp_13811 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 39;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012579\033[0m| Choice selection: 39";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012580\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13812 = (uint8_t*) buffer++;
                                    *_tmp_13812 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 40;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012581\033[0m| Choice selection: 40";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012582\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13813 = (uint8_t*) buffer++;
                                    *_tmp_13813 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 41;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012583\033[0m| Choice selection: 41";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012584\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13814 = (uint8_t*) buffer++;
                                    *_tmp_13814 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 42;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012585\033[0m| Choice selection: 42";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012586\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13815 = (uint8_t*) buffer++;
                                    *_tmp_13815 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 43;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012587\033[0m| Choice selection: 43";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012588\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13816 = (uint8_t*) buffer++;
                                    *_tmp_13816 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 44;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012589\033[0m| Choice selection: 44";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012590\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13817 = (uint8_t*) buffer++;
                                    *_tmp_13817 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 45;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012591\033[0m| Choice selection: 45";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012592\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13818 = (uint8_t*) buffer++;
                                    *_tmp_13818 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 46;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012593\033[0m| Choice selection: 46";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012594\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13819 = (uint8_t*) buffer++;
                                    *_tmp_13819 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 47;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012595\033[0m| Choice selection: 47";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012596\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13820 = (uint8_t*) buffer++;
                                    *_tmp_13820 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 48;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012597\033[0m| Choice selection: 48";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012598\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13821 = (uint8_t*) buffer++;
                                    *_tmp_13821 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 49;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012599\033[0m| Choice selection: 49";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012600\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13822 = (uint8_t*) buffer++;
                                    *_tmp_13822 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 50;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012601\033[0m| Choice selection: 50";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012602\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13823 = (uint8_t*) buffer++;
                                    *_tmp_13823 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 51;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012603\033[0m| Choice selection: 51";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012604\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13824 = (uint8_t*) buffer++;
                                    *_tmp_13824 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 52;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012605\033[0m| Choice selection: 52";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012606\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13825 = (uint8_t*) buffer++;
                                    *_tmp_13825 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 53;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012607\033[0m| Choice selection: 53";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012608\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13826 = (uint8_t*) buffer++;
                                    *_tmp_13826 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 54;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012609\033[0m| Choice selection: 54";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012610\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13827 = (uint8_t*) buffer++;
                                    *_tmp_13827 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 55;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012611\033[0m| Choice selection: 55";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012612\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13828 = (uint8_t*) buffer++;
                                    *_tmp_13828 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 56;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012613\033[0m| Choice selection: 56";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012614\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13829 = (uint8_t*) buffer++;
                                    *_tmp_13829 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 57;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012615\033[0m| Choice selection: 57";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012616\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13830 = (uint8_t*) buffer++;
                                    *_tmp_13830 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 58;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012617\033[0m| Choice selection: 58";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012618\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13831 = (uint8_t*) buffer++;
                                    *_tmp_13831 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 59;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012619\033[0m| Choice selection: 59";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012620\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13832 = (uint8_t*) buffer++;
                                    *_tmp_13832 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 60;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012621\033[0m| Choice selection: 60";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012622\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13833 = (uint8_t*) buffer++;
                                    *_tmp_13833 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 61;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012623\033[0m| Choice selection: 61";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012624\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13834 = (uint8_t*) buffer++;
                                    *_tmp_13834 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 62;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012625\033[0m| Choice selection: 62";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012626\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13835 = (uint8_t*) buffer++;
                                    *_tmp_13835 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 63;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012627\033[0m| Choice selection: 63";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012628\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13836 = (uint8_t*) buffer++;
                                    *_tmp_13836 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 64;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012629\033[0m| Choice selection: 64";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012630\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13837 = (uint8_t*) buffer++;
                                    *_tmp_13837 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 65;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012631\033[0m| Choice selection: 65";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012632\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13838 = (uint8_t*) buffer++;
                                    *_tmp_13838 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 66;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012633\033[0m| Choice selection: 66";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012634\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13839 = (uint8_t*) buffer++;
                                    *_tmp_13839 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 67;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012635\033[0m| Choice selection: 67";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012636\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13840 = (uint8_t*) buffer++;
                                    *_tmp_13840 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 68;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012637\033[0m| Choice selection: 68";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012638\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13841 = (uint8_t*) buffer++;
                                    *_tmp_13841 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 69;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012639\033[0m| Choice selection: 69";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012640\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13842 = (uint8_t*) buffer++;
                                    *_tmp_13842 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 70;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012641\033[0m| Choice selection: 70";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012642\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13843 = (uint8_t*) buffer++;
                                    *_tmp_13843 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 71;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012643\033[0m| Choice selection: 71";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012644\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13844 = (uint8_t*) buffer++;
                                    *_tmp_13844 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 72;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012645\033[0m| Choice selection: 72";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012646\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13845 = (uint8_t*) buffer++;
                                    *_tmp_13845 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 73;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012647\033[0m| Choice selection: 73";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012648\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13846 = (uint8_t*) buffer++;
                                    *_tmp_13846 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 74;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012649\033[0m| Choice selection: 74";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012650\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13847 = (uint8_t*) buffer++;
                                    *_tmp_13847 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 75;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012651\033[0m| Choice selection: 75";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012652\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13848 = (uint8_t*) buffer++;
                                    *_tmp_13848 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 76;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012653\033[0m| Choice selection: 76";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012654\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13849 = (uint8_t*) buffer++;
                                    *_tmp_13849 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 77;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012655\033[0m| Choice selection: 77";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012656\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13850 = (uint8_t*) buffer++;
                                    *_tmp_13850 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 78;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012657\033[0m| Choice selection: 78";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012658\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13851 = (uint8_t*) buffer++;
                                    *_tmp_13851 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 79;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012659\033[0m| Choice selection: 79";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012660\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13852 = (uint8_t*) buffer++;
                                    *_tmp_13852 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 80;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012661\033[0m| Choice selection: 80";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012662\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13853 = (uint8_t*) buffer++;
                                    *_tmp_13853 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 81;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012663\033[0m| Choice selection: 81";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012664\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13854 = (uint8_t*) buffer++;
                                    *_tmp_13854 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 82;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012665\033[0m| Choice selection: 82";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012666\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13855 = (uint8_t*) buffer++;
                                    *_tmp_13855 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 83;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012667\033[0m| Choice selection: 83";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012668\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13856 = (uint8_t*) buffer++;
                                    *_tmp_13856 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 84;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012669\033[0m| Choice selection: 84";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012670\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13857 = (uint8_t*) buffer++;
                                    *_tmp_13857 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 85;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012671\033[0m| Choice selection: 85";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012672\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13858 = (uint8_t*) buffer++;
                                    *_tmp_13858 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 86;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012673\033[0m| Choice selection: 86";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012674\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13859 = (uint8_t*) buffer++;
                                    *_tmp_13859 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 87;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012675\033[0m| Choice selection: 87";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012676\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13860 = (uint8_t*) buffer++;
                                    *_tmp_13860 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 88;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012677\033[0m| Choice selection: 88";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012678\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13861 = (uint8_t*) buffer++;
                                    *_tmp_13861 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 89;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012679\033[0m| Choice selection: 89";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012680\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13862 = (uint8_t*) buffer++;
                                    *_tmp_13862 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 90;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012681\033[0m| Choice selection: 90";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012682\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13863 = (uint8_t*) buffer++;
                                    *_tmp_13863 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 91;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012683\033[0m| Choice selection: 91";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012684\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13864 = (uint8_t*) buffer++;
                                    *_tmp_13864 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 92;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012685\033[0m| Choice selection: 92";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012686\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13865 = (uint8_t*) buffer++;
                                    *_tmp_13865 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 93;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012687\033[0m| Choice selection: 93";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012688\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13866 = (uint8_t*) buffer++;
                                    *_tmp_13866 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 94;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012689\033[0m| Choice selection: 94";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012690\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13867 = (uint8_t*) buffer++;
                                    *_tmp_13867 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 95;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012691\033[0m| Choice selection: 95";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012692\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13868 = (uint8_t*) buffer++;
                                    *_tmp_13868 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 96;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012693\033[0m| Choice selection: 96";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012694\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13869 = (uint8_t*) buffer++;
                                    *_tmp_13869 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 97;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012695\033[0m| Choice selection: 97";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012696\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13870 = (uint8_t*) buffer++;
                                    *_tmp_13870 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 98;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012697\033[0m| Choice selection: 98";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012698\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13871 = (uint8_t*) buffer++;
                                    *_tmp_13871 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 99;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012699\033[0m| Choice selection: 99";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012700\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13872 = (uint8_t*) buffer++;
                                    *_tmp_13872 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 100;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012701\033[0m| Choice selection: 100";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012702\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13873 = (uint8_t*) buffer++;
                                    *_tmp_13873 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 101;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012703\033[0m| Choice selection: 101";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012704\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13874 = (uint8_t*) buffer++;
                                    *_tmp_13874 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 102;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012705\033[0m| Choice selection: 102";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012706\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13875 = (uint8_t*) buffer++;
                                    *_tmp_13875 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 103;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012707\033[0m| Choice selection: 103";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012708\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13876 = (uint8_t*) buffer++;
                                    *_tmp_13876 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 104;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012709\033[0m| Choice selection: 104";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012710\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13877 = (uint8_t*) buffer++;
                                    *_tmp_13877 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 105;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012711\033[0m| Choice selection: 105";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012712\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13878 = (uint8_t*) buffer++;
                                    *_tmp_13878 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 106;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012713\033[0m| Choice selection: 106";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012714\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13879 = (uint8_t*) buffer++;
                                    *_tmp_13879 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 107;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012715\033[0m| Choice selection: 107";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012716\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13880 = (uint8_t*) buffer++;
                                    *_tmp_13880 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 108;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012717\033[0m| Choice selection: 108";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012718\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13881 = (uint8_t*) buffer++;
                                    *_tmp_13881 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 109;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012719\033[0m| Choice selection: 109";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012720\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13882 = (uint8_t*) buffer++;
                                    *_tmp_13882 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 110;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012721\033[0m| Choice selection: 110";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012722\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13883 = (uint8_t*) buffer++;
                                    *_tmp_13883 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 111;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012723\033[0m| Choice selection: 111";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012724\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13884 = (uint8_t*) buffer++;
                                    *_tmp_13884 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 112;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012725\033[0m| Choice selection: 112";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012726\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13885 = (uint8_t*) buffer++;
                                    *_tmp_13885 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 113;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012727\033[0m| Choice selection: 113";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012728\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13886 = (uint8_t*) buffer++;
                                    *_tmp_13886 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 114;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012729\033[0m| Choice selection: 114";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012730\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13887 = (uint8_t*) buffer++;
                                    *_tmp_13887 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 115;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012731\033[0m| Choice selection: 115";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012732\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13888 = (uint8_t*) buffer++;
                                    *_tmp_13888 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 116;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012733\033[0m| Choice selection: 116";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012734\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13889 = (uint8_t*) buffer++;
                                    *_tmp_13889 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 117;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012735\033[0m| Choice selection: 117";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012736\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13890 = (uint8_t*) buffer++;
                                    *_tmp_13890 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 118;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012737\033[0m| Choice selection: 118";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012738\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13891 = (uint8_t*) buffer++;
                                    *_tmp_13891 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 119;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012739\033[0m| Choice selection: 119";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012740\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13892 = (uint8_t*) buffer++;
                                    *_tmp_13892 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 120;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012741\033[0m| Choice selection: 120";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012742\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13893 = (uint8_t*) buffer++;
                                    *_tmp_13893 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 121;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012743\033[0m| Choice selection: 121";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012744\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13894 = (uint8_t*) buffer++;
                                    *_tmp_13894 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 122;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012745\033[0m| Choice selection: 122";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012746\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13895 = (uint8_t*) buffer++;
                                    *_tmp_13895 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 123;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012747\033[0m| Choice selection: 123";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012748\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13896 = (uint8_t*) buffer++;
                                    *_tmp_13896 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 124;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012749\033[0m| Choice selection: 124";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012750\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13897 = (uint8_t*) buffer++;
                                    *_tmp_13897 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 125;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012751\033[0m| Choice selection: 125";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012752\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13898 = (uint8_t*) buffer++;
                                    *_tmp_13898 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 126;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012753\033[0m| Choice selection: 126";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012754\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13899 = (uint8_t*) buffer++;
                                    *_tmp_13899 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 127;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012755\033[0m| Choice selection: 127";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012756\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13900 = (uint8_t*) buffer++;
                                    *_tmp_13900 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_359 = 128;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012757\033[0m| Choice selection: 128";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012758\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13901 = (uint8_t*) buffer++;
                                    *_tmp_13901 = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_359) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc'; message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_6255) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0) {
                            // Field:  type(ItineraryPath) name(recommended_path) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(40) span(40) ext(false)
                            __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements.size();
                            if(__aux64__ > 40) __aux64__ = 40;
                            uint16_t* _tmp_13903 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_13903 = __aux64__ - 1;
                            
                            int __ifd = __aux64__;
                            for(int d = 0; d < __ifd; d++) { 
                                
                                    // ReferencePosition  SEQUENCE
                                        //  latitude                  Latitude                 
                                        //  longitude                 Longitude                
                                        //  positionConfidenceEllipse PosConfidenceEllipse     
                                        //  altitude                  Altitude                 
                                    // Optional fields bytemap
                                    
                                    // Field:  type(Latitude) name(latitude) extGroup(0)
                                    // Real
                                    
                                    // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012760\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].latitude.value) << 
                                                     " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].latitude.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].latitude.value;
                                    }
                                    
                                    double _tmp_13905 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].latitude.value;
                                    _tmp_13905 *= 1.0E7;
                                    __aux64__ = static_cast<uint64_t>(_tmp_13905);
                                    _tmp_13905 -= -900000000;
                                    uint32_t* _tmp_13904 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_13904 = static_cast<uint32_t>(_tmp_13905);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(Longitude) name(longitude) extGroup(0)
                                    // Real
                                    
                                    // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012761\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].longitude.value) << 
                                                     " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].longitude.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].longitude.value;
                                    }
                                    
                                    double _tmp_13907 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].longitude.value;
                                    _tmp_13907 *= 1.0E7;
                                    __aux64__ = static_cast<uint64_t>(_tmp_13907);
                                    _tmp_13907 -= -1800000000;
                                    uint32_t* _tmp_13906 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_13906 = static_cast<uint32_t>(_tmp_13907);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(PosConfidenceEllipse) name(position_confidence_ellipse) extGroup(0)
                                        // PosConfidenceEllipse  SEQUENCE
                                            //  semiMajorConfidence  SemiAxisLength     
                                            //  semiMinorConfidence  SemiAxisLength     
                                            //  semiMajorOrientation HeadingValue       
                                        // Optional fields bytemap
                                        
                                        // Field:  type(SemiAxisLength) name(semi_major_confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012762\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_confidence.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_confidence.value;
                                        }
                                        
                                        float _tmp_13909 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_confidence.value;
                                        _tmp_13909 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13909);
                                        uint16_t* _tmp_13908 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13908 = static_cast<uint16_t>(_tmp_13909);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(SemiAxisLength) name(semi_minor_confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012763\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_minor_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_minor_confidence.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_minor_confidence.value;
                                        }
                                        
                                        float _tmp_13911 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_minor_confidence.value;
                                        _tmp_13911 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13911);
                                        uint16_t* _tmp_13910 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13910 = static_cast<uint16_t>(_tmp_13911);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_minor_confidence.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(HeadingValue) name(semi_major_orientation) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012764\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_orientation.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_orientation.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_orientation.value;
                                        }
                                        
                                        float _tmp_13913 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_orientation.value;
                                        _tmp_13913 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13913);
                                        uint16_t* _tmp_13912 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_13912 = static_cast<uint16_t>(_tmp_13913);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].position_confidence_ellipse.semi_major_orientation.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                            return -1;
                                        }
                                    
                                    // Field:  type(Altitude) name(altitude) extGroup(0)
                                        // Altitude  SEQUENCE
                                            //  altitudeValue      AltitudeValue          
                                            //  altitudeConfidence AltitudeConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(AltitudeValue) name(altitude_value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012765\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_value.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_value.value: " << ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_value.value;
                                        }
                                        
                                        float _tmp_13915 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_value.value;
                                        _tmp_13915 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_13915);
                                        _tmp_13915 -= -100000;
                                        uint32_t* _tmp_13914 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_13914 = static_cast<uint32_t>(_tmp_13915);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_value.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_value.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AltitudeConfidence) name(altitude_confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m012766\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_13916 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_13916 = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value; 
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[d].altitude.altitude_confidence.value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                            return -1;
                                        }
                                    
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0) {
                            // Field:  type(DeltaReferencePosition) name(starting_point_speed_limit) extGroup(0)
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                // Optional fields bytemap
                                
                                // Field:  type(DeltaLatitude) name(delta_latitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012767\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                }
                                
                                double _tmp_13918 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                _tmp_13918 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_13918);
                                _tmp_13918 -= -131071;
                                uint32_t* _tmp_13917 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13917 = static_cast<uint32_t>(_tmp_13918);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaLongitude) name(delta_longitude) extGroup(0)
                                // Real
                                
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012768\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                }
                                
                                double _tmp_13920 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                _tmp_13920 *= 1.0E7;
                                __aux64__ = static_cast<uint64_t>(_tmp_13920);
                                _tmp_13920 -= -131071;
                                uint32_t* _tmp_13919 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_13919 = static_cast<uint32_t>(_tmp_13920);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' (" << __aux64__ << ") less than (-131071); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' (" << __aux64__ << ") exceeds max allowable (131072); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DeltaAltitude) name(delta_altitude) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m012769\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value) << 
                                                 " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value: " << ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                }
                                
                                float _tmp_13922 = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                _tmp_13922 *= 100.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_13922);
                                _tmp_13922 -= -12700;
                                uint16_t* _tmp_13921 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_13921 = static_cast<uint16_t>(_tmp_13922);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' (" << __aux64__ << ") less than (-12700); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' (" << __aux64__ << ") exceeds max allowable (12800); message dropped.";
                                    return -1;
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0) {
                            // Field:  type(TrafficRule) name(traffic_flow_rule) extGroup(0)
                            // Enumerated
                            // INT32  min(0) max(4) span(5) dataType(Int32)
                            uint8_t* _ext_flag_6396 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012770\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value) << 
                                             " denm.alacarte[0].road_works[0].traffic_flow_rule[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value);
                            }
                            
                            uint8_t* _tmp_13923 = (uint8_t*)buffer;
                            buffer += 1;
                            *_tmp_13923 = ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value; 
                            __aux64__ = ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value; 
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 4) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' (" << __aux64__ << ") exceeds max allowable (4); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0) {
                            // Field:  type(ActionIdList) name(reference_denms) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                            uint8_t* _ext_flag_6397 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_works[0].reference_denms[0].
                            *_ext_flag_6397 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements.size();
                            if(__aux64__ > 8) __aux64__ = 8;
                            uint16_t* _tmp_13924 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_13924 = __aux64__ - 1;
                            
                            int __ife = __aux64__;
                            for(int e = 0; e < __ife; e++) { 
                                
                                    // ActionId  SEQUENCE
                                        //  originatingStationId StationId          
                                        //  sequenceNumber       SequenceNumber     
                                    // Optional fields bytemap
                                    
                                    // Field:  type(StationId) name(originating_station_id) extGroup(0)
                                    // Integer
                                    
                                    // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012772\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value;
                                    }
                                    
                                    uint32_t* _tmp_13925 = (uint32_t*) buffer; buffer += 4;
                                    *_tmp_13925 = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[e].originating_station_id.value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                        return -1;
                                    }
                                    
                                    // Field:  type(SequenceNumber) name(sequence_number) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012773\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value;
                                    }
                                    
                                    uint16_t* _tmp_13926 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_13926 = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value; 
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[e].sequence_number.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                                    
                            }
                        }
                }
                
                if(ros->denm.alacarte[0].positioning_solution.size() != 0) {
                    // Field:  type(PositioningSolutionType) name(positioning_solution) extGroup(0)
                    // Enumerated
                    // INT32  min(0) max(6) span(7) dataType(Int32)
                    uint8_t* _ext_flag_6400 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].positioning_solution[0].
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m012774\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].positioning_solution[0].value) << 
                                     " denm.alacarte[0].positioning_solution[0].value: " << static_cast<int>(ros->denm.alacarte[0].positioning_solution[0].value);
                    }
                    
                    uint8_t* _tmp_13927 = (uint8_t*)buffer;
                    buffer += 1;
                    *_tmp_13927 = ros->denm.alacarte[0].positioning_solution[0].value; 
                    __aux64__ = ros->denm.alacarte[0].positioning_solution[0].value; 
                    // MIN validator
                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                        return -1;
                    }
                    // MAX validator
                    if (VALIDATORS_ENABLED && __aux64__ > 6) {
                        logger->warning() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' (" << __aux64__ << ") exceeds max allowable (6); message dropped.";
                        return -1;
                    }
                }
                
                if(ros->denm.alacarte[0].stationary_vehicle.size() != 0) {
                    // Field:  type(StationaryVehicleContainer) name(stationary_vehicle) extGroup(0)
                        // StationaryVehicleContainer  SEQUENCE
                            //  stationarySince        StationarySince          OPTIONAL  
                            //  stationaryCause        CauseCodeV2              OPTIONAL  
                            //  carryingDangerousGoods DangerousGoodsExtended   OPTIONAL  
                            //  numberOfOccupants      NumberOfOccupants        OPTIONAL  
                            //  vehicleIdentification  VehicleIdentification    OPTIONAL  
                            //  energyStorageType      EnergyStorageType        OPTIONAL  
                        // Optional fields bytemap
                        char* _tmp_13928 = (char*) buffer++;
                        *_tmp_13928 = (ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012775\033[0m| Optional field stationary_since = " << *_tmp_13928;
                        char* _tmp_13929 = (char*) buffer++;
                        *_tmp_13929 = (ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012776\033[0m| Optional field stationary_cause = " << *_tmp_13929;
                        char* _tmp_13930 = (char*) buffer++;
                        *_tmp_13930 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012777\033[0m| Optional field carrying_dangerous_goods = " << *_tmp_13930;
                        char* _tmp_13931 = (char*) buffer++;
                        *_tmp_13931 = (ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012778\033[0m| Optional field number_of_occupants = " << *_tmp_13931;
                        char* _tmp_13932 = (char*) buffer++;
                        *_tmp_13932 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012779\033[0m| Optional field vehicle_identification = " << *_tmp_13932;
                        char* _tmp_13933 = (char*) buffer++;
                        *_tmp_13933 = (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0 ? 1 : 0);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m012780\033[0m| Optional field energy_storage_type = " << *_tmp_13933;
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0) {
                            // Field:  type(StationarySince) name(stationary_since) extGroup(0)
                            // Enumerated
                            // INT32  min(0) max(3) span(4) dataType(Int32)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m012781\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value);
                            }
                            
                            uint8_t* _tmp_13934 = (uint8_t*)buffer;
                            buffer += 1;
                            *_tmp_13934 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value; 
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value; 
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0) {
                            // Field:  type(CauseCodeV2) name(stationary_cause) extGroup(0)
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_6402 = (uint8_t*) buffer++;  // Write extension flag for CauseCodeV2
                                *_ext_flag_6402 = 0;  
                                
                                // Optional fields bytemap
                                
                                // Field:  type(CauseCodeChoice) name(cc_and_scc) extGroup(0)
                                // Choice
                                   // #0  reserved0   SubCauseCodeType
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode
                                   // #2  accident2   AccidentSubCauseCode
                                   // #3  roadworks3   RoadworksSubCauseCode
                                   // #4  reserved4   SubCauseCodeType
                                   // #5  impassability5   ImpassabilitySubCauseCode
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode
                                   // #7  aquaplaning7   SubCauseCodeType
                                   // #8  reserved8   SubCauseCodeType
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode
                                   // #13  reserved13   SubCauseCodeType
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode
                                   // #16  reserved16   SubCauseCodeType
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode
                                   // #20  violence20   SubCauseCodeType
                                   // #21  reserved21   SubCauseCodeType
                                   // #22  reserved22   SubCauseCodeType
                                   // #23  reserved23   SubCauseCodeType
                                   // #24  reserved24   SubCauseCodeType
                                   // #25  reserved25   SubCauseCodeType
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType
                                   // #29  reserved29   SubCauseCodeType
                                   // #30  reserved30   SubCauseCodeType
                                   // #31  reserved31   SubCauseCodeType
                                   // #32  reserved32   SubCauseCodeType
                                   // #33  reserved33   SubCauseCodeType
                                   // #34  reserved34   SubCauseCodeType
                                   // #35  reserved35   SubCauseCodeType
                                   // #36  reserved36   SubCauseCodeType
                                   // #37  reserved37   SubCauseCodeType
                                   // #38  reserved38   SubCauseCodeType
                                   // #39  reserved39   SubCauseCodeType
                                   // #40  reserved40   SubCauseCodeType
                                   // #41  reserved41   SubCauseCodeType
                                   // #42  reserved42   SubCauseCodeType
                                   // #43  reserved43   SubCauseCodeType
                                   // #44  reserved44   SubCauseCodeType
                                   // #45  reserved45   SubCauseCodeType
                                   // #46  reserved46   SubCauseCodeType
                                   // #47  reserved47   SubCauseCodeType
                                   // #48  reserved48   SubCauseCodeType
                                   // #49  reserved49   SubCauseCodeType
                                   // #50  reserved50   SubCauseCodeType
                                   // #51  reserved51   SubCauseCodeType
                                   // #52  reserved52   SubCauseCodeType
                                   // #53  reserved53   SubCauseCodeType
                                   // #54  reserved54   SubCauseCodeType
                                   // #55  reserved55   SubCauseCodeType
                                   // #56  reserved56   SubCauseCodeType
                                   // #57  reserved57   SubCauseCodeType
                                   // #58  reserved58   SubCauseCodeType
                                   // #59  reserved59   SubCauseCodeType
                                   // #60  reserved60   SubCauseCodeType
                                   // #61  reserved61   SubCauseCodeType
                                   // #62  reserved62   SubCauseCodeType
                                   // #63  reserved63   SubCauseCodeType
                                   // #64  reserved64   SubCauseCodeType
                                   // #65  reserved65   SubCauseCodeType
                                   // #66  reserved66   SubCauseCodeType
                                   // #67  reserved67   SubCauseCodeType
                                   // #68  reserved68   SubCauseCodeType
                                   // #69  reserved69   SubCauseCodeType
                                   // #70  reserved70   SubCauseCodeType
                                   // #71  reserved71   SubCauseCodeType
                                   // #72  reserved72   SubCauseCodeType
                                   // #73  reserved73   SubCauseCodeType
                                   // #74  reserved74   SubCauseCodeType
                                   // #75  reserved75   SubCauseCodeType
                                   // #76  reserved76   SubCauseCodeType
                                   // #77  reserved77   SubCauseCodeType
                                   // #78  reserved78   SubCauseCodeType
                                   // #79  reserved79   SubCauseCodeType
                                   // #80  reserved80   SubCauseCodeType
                                   // #81  reserved81   SubCauseCodeType
                                   // #82  reserved82   SubCauseCodeType
                                   // #83  reserved83   SubCauseCodeType
                                   // #84  reserved84   SubCauseCodeType
                                   // #85  reserved85   SubCauseCodeType
                                   // #86  reserved86   SubCauseCodeType
                                   // #87  reserved87   SubCauseCodeType
                                   // #88  reserved88   SubCauseCodeType
                                   // #89  reserved89   SubCauseCodeType
                                   // #90  reserved90   SubCauseCodeType
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode
                                   // #92  postCrash92   PostCrashSubCauseCode
                                   // #93  humanProblem93   HumanProblemSubCauseCode
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode
                                   // #98  signalViolation98   SignalViolationSubCauseCode
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode
                                   // #101  reserved101   SubCauseCodeType
                                   // #102  reserved102   SubCauseCodeType
                                   // #103  reserved103   SubCauseCodeType
                                   // #104  reserved104   SubCauseCodeType
                                   // #105  reserved105   SubCauseCodeType
                                   // #106  reserved106   SubCauseCodeType
                                   // #107  reserved107   SubCauseCodeType
                                   // #108  reserved108   SubCauseCodeType
                                   // #109  reserved109   SubCauseCodeType
                                   // #110  reserved110   SubCauseCodeType
                                   // #111  reserved111   SubCauseCodeType
                                   // #112  reserved112   SubCauseCodeType
                                   // #113  reserved113   SubCauseCodeType
                                   // #114  reserved114   SubCauseCodeType
                                   // #115  reserved115   SubCauseCodeType
                                   // #116  reserved116   SubCauseCodeType
                                   // #117  reserved117   SubCauseCodeType
                                   // #118  reserved118   SubCauseCodeType
                                   // #119  reserved119   SubCauseCodeType
                                   // #120  reserved120   SubCauseCodeType
                                   // #121  reserved121   SubCauseCodeType
                                   // #122  reserved122   SubCauseCodeType
                                   // #123  reserved123   SubCauseCodeType
                                   // #124  reserved124   SubCauseCodeType
                                   // #125  reserved125   SubCauseCodeType
                                   // #126  reserved126   SubCauseCodeType
                                   // #127  reserved127   SubCauseCodeType
                                   // #128  reserved128   SubCauseCodeType
                                uint8_t* _choice_360 = (uint8_t*) buffer;
                                buffer++;
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0.size() != 0) {  // CHOICE 0  fieldType(CauseCodeChoice) 
                                    *_choice_360 = 0;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012782\033[0m| Choice selection: 0";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012783\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13935 = (uint8_t*) buffer++;
                                    *_tmp_13935 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1.size() != 0)  // CHOICE 1  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 1;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012784\033[0m| Choice selection: 1";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012785\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13936 = (uint8_t*) buffer++;
                                    *_tmp_13936 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2.size() != 0)  // CHOICE 2  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 2;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012786\033[0m| Choice selection: 2";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012787\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13937 = (uint8_t*) buffer++;
                                    *_tmp_13937 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3.size() != 0)  // CHOICE 3  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 3;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012788\033[0m| Choice selection: 3";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012789\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13938 = (uint8_t*) buffer++;
                                    *_tmp_13938 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4.size() != 0)  // CHOICE 4  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 4;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012790\033[0m| Choice selection: 4";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012791\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13939 = (uint8_t*) buffer++;
                                    *_tmp_13939 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5.size() != 0)  // CHOICE 5  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 5;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012792\033[0m| Choice selection: 5";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012793\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13940 = (uint8_t*) buffer++;
                                    *_tmp_13940 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.size() != 0)  // CHOICE 6  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 6;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012794\033[0m| Choice selection: 6";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012795\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13941 = (uint8_t*) buffer++;
                                    *_tmp_13941 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7.size() != 0)  // CHOICE 7  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 7;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012796\033[0m| Choice selection: 7";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012797\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13942 = (uint8_t*) buffer++;
                                    *_tmp_13942 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8.size() != 0)  // CHOICE 8  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 8;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012798\033[0m| Choice selection: 8";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012799\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13943 = (uint8_t*) buffer++;
                                    *_tmp_13943 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9.size() != 0)  // CHOICE 9  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 9;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012800\033[0m| Choice selection: 9";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012801\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13944 = (uint8_t*) buffer++;
                                    *_tmp_13944 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.size() != 0)  // CHOICE 10  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 10;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012802\033[0m| Choice selection: 10";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012803\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13945 = (uint8_t*) buffer++;
                                    *_tmp_13945 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.size() != 0)  // CHOICE 11  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 11;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012804\033[0m| Choice selection: 11";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012805\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13946 = (uint8_t*) buffer++;
                                    *_tmp_13946 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12.size() != 0)  // CHOICE 12  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 12;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012806\033[0m| Choice selection: 12";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012807\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13947 = (uint8_t*) buffer++;
                                    *_tmp_13947 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13.size() != 0)  // CHOICE 13  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 13;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012808\033[0m| Choice selection: 13";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012809\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13948 = (uint8_t*) buffer++;
                                    *_tmp_13948 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14.size() != 0)  // CHOICE 14  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 14;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012810\033[0m| Choice selection: 14";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012811\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13949 = (uint8_t*) buffer++;
                                    *_tmp_13949 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.size() != 0)  // CHOICE 15  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 15;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012812\033[0m| Choice selection: 15";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012813\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13950 = (uint8_t*) buffer++;
                                    *_tmp_13950 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16.size() != 0)  // CHOICE 16  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 16;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012814\033[0m| Choice selection: 16";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012815\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13951 = (uint8_t*) buffer++;
                                    *_tmp_13951 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.size() != 0)  // CHOICE 17  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 17;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012816\033[0m| Choice selection: 17";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012817\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13952 = (uint8_t*) buffer++;
                                    *_tmp_13952 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18.size() != 0)  // CHOICE 18  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 18;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012818\033[0m| Choice selection: 18";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012819\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13953 = (uint8_t*) buffer++;
                                    *_tmp_13953 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.size() != 0)  // CHOICE 19  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 19;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012820\033[0m| Choice selection: 19";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012821\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13954 = (uint8_t*) buffer++;
                                    *_tmp_13954 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20.size() != 0)  // CHOICE 20  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 20;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012822\033[0m| Choice selection: 20";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012823\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13955 = (uint8_t*) buffer++;
                                    *_tmp_13955 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21.size() != 0)  // CHOICE 21  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 21;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012824\033[0m| Choice selection: 21";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012825\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13956 = (uint8_t*) buffer++;
                                    *_tmp_13956 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22.size() != 0)  // CHOICE 22  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 22;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012826\033[0m| Choice selection: 22";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012827\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13957 = (uint8_t*) buffer++;
                                    *_tmp_13957 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23.size() != 0)  // CHOICE 23  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 23;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012828\033[0m| Choice selection: 23";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012829\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13958 = (uint8_t*) buffer++;
                                    *_tmp_13958 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24.size() != 0)  // CHOICE 24  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 24;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012830\033[0m| Choice selection: 24";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012831\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13959 = (uint8_t*) buffer++;
                                    *_tmp_13959 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25.size() != 0)  // CHOICE 25  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 25;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012832\033[0m| Choice selection: 25";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012833\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13960 = (uint8_t*) buffer++;
                                    *_tmp_13960 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26.size() != 0)  // CHOICE 26  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 26;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012834\033[0m| Choice selection: 26";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012835\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13961 = (uint8_t*) buffer++;
                                    *_tmp_13961 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27.size() != 0)  // CHOICE 27  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 27;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012836\033[0m| Choice selection: 27";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012837\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13962 = (uint8_t*) buffer++;
                                    *_tmp_13962 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28.size() != 0)  // CHOICE 28  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 28;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012838\033[0m| Choice selection: 28";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012839\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13963 = (uint8_t*) buffer++;
                                    *_tmp_13963 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29.size() != 0)  // CHOICE 29  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 29;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012840\033[0m| Choice selection: 29";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012841\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13964 = (uint8_t*) buffer++;
                                    *_tmp_13964 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30.size() != 0)  // CHOICE 30  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 30;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012842\033[0m| Choice selection: 30";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012843\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13965 = (uint8_t*) buffer++;
                                    *_tmp_13965 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31.size() != 0)  // CHOICE 31  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 31;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012844\033[0m| Choice selection: 31";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012845\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13966 = (uint8_t*) buffer++;
                                    *_tmp_13966 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32.size() != 0)  // CHOICE 32  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 32;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012846\033[0m| Choice selection: 32";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012847\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13967 = (uint8_t*) buffer++;
                                    *_tmp_13967 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33.size() != 0)  // CHOICE 33  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 33;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012848\033[0m| Choice selection: 33";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012849\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13968 = (uint8_t*) buffer++;
                                    *_tmp_13968 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34.size() != 0)  // CHOICE 34  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 34;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012850\033[0m| Choice selection: 34";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012851\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13969 = (uint8_t*) buffer++;
                                    *_tmp_13969 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35.size() != 0)  // CHOICE 35  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 35;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012852\033[0m| Choice selection: 35";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012853\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13970 = (uint8_t*) buffer++;
                                    *_tmp_13970 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36.size() != 0)  // CHOICE 36  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 36;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012854\033[0m| Choice selection: 36";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012855\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13971 = (uint8_t*) buffer++;
                                    *_tmp_13971 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37.size() != 0)  // CHOICE 37  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 37;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012856\033[0m| Choice selection: 37";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012857\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13972 = (uint8_t*) buffer++;
                                    *_tmp_13972 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38.size() != 0)  // CHOICE 38  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 38;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012858\033[0m| Choice selection: 38";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012859\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13973 = (uint8_t*) buffer++;
                                    *_tmp_13973 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39.size() != 0)  // CHOICE 39  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 39;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012860\033[0m| Choice selection: 39";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012861\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13974 = (uint8_t*) buffer++;
                                    *_tmp_13974 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40.size() != 0)  // CHOICE 40  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 40;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012862\033[0m| Choice selection: 40";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012863\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13975 = (uint8_t*) buffer++;
                                    *_tmp_13975 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41.size() != 0)  // CHOICE 41  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 41;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012864\033[0m| Choice selection: 41";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012865\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13976 = (uint8_t*) buffer++;
                                    *_tmp_13976 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42.size() != 0)  // CHOICE 42  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 42;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012866\033[0m| Choice selection: 42";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012867\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13977 = (uint8_t*) buffer++;
                                    *_tmp_13977 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43.size() != 0)  // CHOICE 43  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 43;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012868\033[0m| Choice selection: 43";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012869\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13978 = (uint8_t*) buffer++;
                                    *_tmp_13978 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44.size() != 0)  // CHOICE 44  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 44;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012870\033[0m| Choice selection: 44";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012871\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13979 = (uint8_t*) buffer++;
                                    *_tmp_13979 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45.size() != 0)  // CHOICE 45  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 45;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012872\033[0m| Choice selection: 45";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012873\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13980 = (uint8_t*) buffer++;
                                    *_tmp_13980 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46.size() != 0)  // CHOICE 46  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 46;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012874\033[0m| Choice selection: 46";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012875\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13981 = (uint8_t*) buffer++;
                                    *_tmp_13981 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47.size() != 0)  // CHOICE 47  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 47;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012876\033[0m| Choice selection: 47";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012877\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13982 = (uint8_t*) buffer++;
                                    *_tmp_13982 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48.size() != 0)  // CHOICE 48  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 48;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012878\033[0m| Choice selection: 48";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012879\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13983 = (uint8_t*) buffer++;
                                    *_tmp_13983 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49.size() != 0)  // CHOICE 49  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 49;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012880\033[0m| Choice selection: 49";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012881\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13984 = (uint8_t*) buffer++;
                                    *_tmp_13984 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50.size() != 0)  // CHOICE 50  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 50;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012882\033[0m| Choice selection: 50";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012883\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13985 = (uint8_t*) buffer++;
                                    *_tmp_13985 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51.size() != 0)  // CHOICE 51  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 51;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012884\033[0m| Choice selection: 51";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012885\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13986 = (uint8_t*) buffer++;
                                    *_tmp_13986 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52.size() != 0)  // CHOICE 52  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 52;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012886\033[0m| Choice selection: 52";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012887\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13987 = (uint8_t*) buffer++;
                                    *_tmp_13987 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53.size() != 0)  // CHOICE 53  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 53;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012888\033[0m| Choice selection: 53";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012889\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13988 = (uint8_t*) buffer++;
                                    *_tmp_13988 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54.size() != 0)  // CHOICE 54  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 54;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012890\033[0m| Choice selection: 54";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012891\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13989 = (uint8_t*) buffer++;
                                    *_tmp_13989 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55.size() != 0)  // CHOICE 55  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 55;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012892\033[0m| Choice selection: 55";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012893\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13990 = (uint8_t*) buffer++;
                                    *_tmp_13990 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56.size() != 0)  // CHOICE 56  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 56;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012894\033[0m| Choice selection: 56";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012895\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13991 = (uint8_t*) buffer++;
                                    *_tmp_13991 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57.size() != 0)  // CHOICE 57  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 57;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012896\033[0m| Choice selection: 57";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012897\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13992 = (uint8_t*) buffer++;
                                    *_tmp_13992 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58.size() != 0)  // CHOICE 58  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 58;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012898\033[0m| Choice selection: 58";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012899\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13993 = (uint8_t*) buffer++;
                                    *_tmp_13993 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59.size() != 0)  // CHOICE 59  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 59;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012900\033[0m| Choice selection: 59";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012901\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13994 = (uint8_t*) buffer++;
                                    *_tmp_13994 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60.size() != 0)  // CHOICE 60  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 60;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012902\033[0m| Choice selection: 60";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012903\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13995 = (uint8_t*) buffer++;
                                    *_tmp_13995 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61.size() != 0)  // CHOICE 61  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 61;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012904\033[0m| Choice selection: 61";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012905\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13996 = (uint8_t*) buffer++;
                                    *_tmp_13996 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62.size() != 0)  // CHOICE 62  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 62;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012906\033[0m| Choice selection: 62";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012907\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13997 = (uint8_t*) buffer++;
                                    *_tmp_13997 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63.size() != 0)  // CHOICE 63  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 63;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012908\033[0m| Choice selection: 63";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012909\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13998 = (uint8_t*) buffer++;
                                    *_tmp_13998 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64.size() != 0)  // CHOICE 64  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 64;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012910\033[0m| Choice selection: 64";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012911\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    uint8_t* _tmp_13999 = (uint8_t*) buffer++;
                                    *_tmp_13999 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65.size() != 0)  // CHOICE 65  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 65;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012912\033[0m| Choice selection: 65";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012913\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14000 = (uint8_t*) buffer++;
                                    *_tmp_14000 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66.size() != 0)  // CHOICE 66  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 66;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012914\033[0m| Choice selection: 66";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012915\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14001 = (uint8_t*) buffer++;
                                    *_tmp_14001 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67.size() != 0)  // CHOICE 67  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 67;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012916\033[0m| Choice selection: 67";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012917\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14002 = (uint8_t*) buffer++;
                                    *_tmp_14002 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68.size() != 0)  // CHOICE 68  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 68;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012918\033[0m| Choice selection: 68";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012919\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14003 = (uint8_t*) buffer++;
                                    *_tmp_14003 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69.size() != 0)  // CHOICE 69  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 69;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012920\033[0m| Choice selection: 69";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012921\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14004 = (uint8_t*) buffer++;
                                    *_tmp_14004 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70.size() != 0)  // CHOICE 70  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 70;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012922\033[0m| Choice selection: 70";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012923\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14005 = (uint8_t*) buffer++;
                                    *_tmp_14005 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71.size() != 0)  // CHOICE 71  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 71;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012924\033[0m| Choice selection: 71";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012925\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14006 = (uint8_t*) buffer++;
                                    *_tmp_14006 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72.size() != 0)  // CHOICE 72  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 72;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012926\033[0m| Choice selection: 72";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012927\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14007 = (uint8_t*) buffer++;
                                    *_tmp_14007 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73.size() != 0)  // CHOICE 73  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 73;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012928\033[0m| Choice selection: 73";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012929\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14008 = (uint8_t*) buffer++;
                                    *_tmp_14008 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74.size() != 0)  // CHOICE 74  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 74;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012930\033[0m| Choice selection: 74";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012931\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14009 = (uint8_t*) buffer++;
                                    *_tmp_14009 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75.size() != 0)  // CHOICE 75  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 75;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012932\033[0m| Choice selection: 75";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012933\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14010 = (uint8_t*) buffer++;
                                    *_tmp_14010 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76.size() != 0)  // CHOICE 76  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 76;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012934\033[0m| Choice selection: 76";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012935\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14011 = (uint8_t*) buffer++;
                                    *_tmp_14011 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77.size() != 0)  // CHOICE 77  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 77;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012936\033[0m| Choice selection: 77";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012937\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14012 = (uint8_t*) buffer++;
                                    *_tmp_14012 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78.size() != 0)  // CHOICE 78  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 78;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012938\033[0m| Choice selection: 78";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012939\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14013 = (uint8_t*) buffer++;
                                    *_tmp_14013 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79.size() != 0)  // CHOICE 79  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 79;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012940\033[0m| Choice selection: 79";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012941\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14014 = (uint8_t*) buffer++;
                                    *_tmp_14014 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80.size() != 0)  // CHOICE 80  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 80;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012942\033[0m| Choice selection: 80";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012943\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14015 = (uint8_t*) buffer++;
                                    *_tmp_14015 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81.size() != 0)  // CHOICE 81  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 81;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012944\033[0m| Choice selection: 81";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012945\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14016 = (uint8_t*) buffer++;
                                    *_tmp_14016 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82.size() != 0)  // CHOICE 82  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 82;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012946\033[0m| Choice selection: 82";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012947\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14017 = (uint8_t*) buffer++;
                                    *_tmp_14017 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83.size() != 0)  // CHOICE 83  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 83;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012948\033[0m| Choice selection: 83";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012949\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14018 = (uint8_t*) buffer++;
                                    *_tmp_14018 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84.size() != 0)  // CHOICE 84  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 84;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012950\033[0m| Choice selection: 84";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012951\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14019 = (uint8_t*) buffer++;
                                    *_tmp_14019 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85.size() != 0)  // CHOICE 85  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 85;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012952\033[0m| Choice selection: 85";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012953\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14020 = (uint8_t*) buffer++;
                                    *_tmp_14020 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86.size() != 0)  // CHOICE 86  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 86;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012954\033[0m| Choice selection: 86";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012955\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14021 = (uint8_t*) buffer++;
                                    *_tmp_14021 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87.size() != 0)  // CHOICE 87  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 87;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012956\033[0m| Choice selection: 87";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012957\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14022 = (uint8_t*) buffer++;
                                    *_tmp_14022 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88.size() != 0)  // CHOICE 88  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 88;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012958\033[0m| Choice selection: 88";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012959\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14023 = (uint8_t*) buffer++;
                                    *_tmp_14023 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89.size() != 0)  // CHOICE 89  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 89;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012960\033[0m| Choice selection: 89";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012961\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14024 = (uint8_t*) buffer++;
                                    *_tmp_14024 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90.size() != 0)  // CHOICE 90  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 90;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012962\033[0m| Choice selection: 90";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012963\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14025 = (uint8_t*) buffer++;
                                    *_tmp_14025 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91.size() != 0)  // CHOICE 91  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 91;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012964\033[0m| Choice selection: 91";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012965\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14026 = (uint8_t*) buffer++;
                                    *_tmp_14026 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92.size() != 0)  // CHOICE 92  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 92;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012966\033[0m| Choice selection: 92";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012967\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14027 = (uint8_t*) buffer++;
                                    *_tmp_14027 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93.size() != 0)  // CHOICE 93  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 93;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012968\033[0m| Choice selection: 93";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012969\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14028 = (uint8_t*) buffer++;
                                    *_tmp_14028 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94.size() != 0)  // CHOICE 94  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 94;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012970\033[0m| Choice selection: 94";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012971\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14029 = (uint8_t*) buffer++;
                                    *_tmp_14029 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95.size() != 0)  // CHOICE 95  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 95;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012972\033[0m| Choice selection: 95";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012973\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14030 = (uint8_t*) buffer++;
                                    *_tmp_14030 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.size() != 0)  // CHOICE 96  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 96;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012974\033[0m| Choice selection: 96";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012975\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14031 = (uint8_t*) buffer++;
                                    *_tmp_14031 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97.size() != 0)  // CHOICE 97  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 97;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012976\033[0m| Choice selection: 97";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012977\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14032 = (uint8_t*) buffer++;
                                    *_tmp_14032 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98.size() != 0)  // CHOICE 98  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 98;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012978\033[0m| Choice selection: 98";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012979\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14033 = (uint8_t*) buffer++;
                                    *_tmp_14033 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99.size() != 0)  // CHOICE 99  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 99;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012980\033[0m| Choice selection: 99";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012981\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14034 = (uint8_t*) buffer++;
                                    *_tmp_14034 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100.size() != 0)  // CHOICE 100  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 100;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012982\033[0m| Choice selection: 100";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012983\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14035 = (uint8_t*) buffer++;
                                    *_tmp_14035 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101.size() != 0)  // CHOICE 101  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 101;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012984\033[0m| Choice selection: 101";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012985\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14036 = (uint8_t*) buffer++;
                                    *_tmp_14036 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102.size() != 0)  // CHOICE 102  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 102;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012986\033[0m| Choice selection: 102";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012987\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14037 = (uint8_t*) buffer++;
                                    *_tmp_14037 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103.size() != 0)  // CHOICE 103  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 103;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012988\033[0m| Choice selection: 103";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012989\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14038 = (uint8_t*) buffer++;
                                    *_tmp_14038 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104.size() != 0)  // CHOICE 104  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 104;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012990\033[0m| Choice selection: 104";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012991\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14039 = (uint8_t*) buffer++;
                                    *_tmp_14039 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105.size() != 0)  // CHOICE 105  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 105;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012992\033[0m| Choice selection: 105";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012993\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14040 = (uint8_t*) buffer++;
                                    *_tmp_14040 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106.size() != 0)  // CHOICE 106  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 106;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012994\033[0m| Choice selection: 106";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012995\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14041 = (uint8_t*) buffer++;
                                    *_tmp_14041 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107.size() != 0)  // CHOICE 107  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 107;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012996\033[0m| Choice selection: 107";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012997\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14042 = (uint8_t*) buffer++;
                                    *_tmp_14042 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108.size() != 0)  // CHOICE 108  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 108;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m012998\033[0m| Choice selection: 108";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m012999\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14043 = (uint8_t*) buffer++;
                                    *_tmp_14043 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109.size() != 0)  // CHOICE 109  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 109;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013000\033[0m| Choice selection: 109";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013001\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14044 = (uint8_t*) buffer++;
                                    *_tmp_14044 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110.size() != 0)  // CHOICE 110  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 110;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013002\033[0m| Choice selection: 110";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013003\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14045 = (uint8_t*) buffer++;
                                    *_tmp_14045 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111.size() != 0)  // CHOICE 111  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 111;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013004\033[0m| Choice selection: 111";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013005\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14046 = (uint8_t*) buffer++;
                                    *_tmp_14046 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112.size() != 0)  // CHOICE 112  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 112;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013006\033[0m| Choice selection: 112";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013007\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14047 = (uint8_t*) buffer++;
                                    *_tmp_14047 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113.size() != 0)  // CHOICE 113  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 113;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013008\033[0m| Choice selection: 113";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013009\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14048 = (uint8_t*) buffer++;
                                    *_tmp_14048 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114.size() != 0)  // CHOICE 114  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 114;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013010\033[0m| Choice selection: 114";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013011\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14049 = (uint8_t*) buffer++;
                                    *_tmp_14049 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115.size() != 0)  // CHOICE 115  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 115;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013012\033[0m| Choice selection: 115";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013013\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14050 = (uint8_t*) buffer++;
                                    *_tmp_14050 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116.size() != 0)  // CHOICE 116  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 116;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013014\033[0m| Choice selection: 116";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013015\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14051 = (uint8_t*) buffer++;
                                    *_tmp_14051 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117.size() != 0)  // CHOICE 117  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 117;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013016\033[0m| Choice selection: 117";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013017\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14052 = (uint8_t*) buffer++;
                                    *_tmp_14052 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118.size() != 0)  // CHOICE 118  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 118;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013018\033[0m| Choice selection: 118";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013019\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14053 = (uint8_t*) buffer++;
                                    *_tmp_14053 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119.size() != 0)  // CHOICE 119  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 119;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013020\033[0m| Choice selection: 119";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013021\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14054 = (uint8_t*) buffer++;
                                    *_tmp_14054 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120.size() != 0)  // CHOICE 120  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 120;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013022\033[0m| Choice selection: 120";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013023\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14055 = (uint8_t*) buffer++;
                                    *_tmp_14055 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121.size() != 0)  // CHOICE 121  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 121;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013024\033[0m| Choice selection: 121";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013025\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14056 = (uint8_t*) buffer++;
                                    *_tmp_14056 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122.size() != 0)  // CHOICE 122  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 122;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013026\033[0m| Choice selection: 122";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013027\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14057 = (uint8_t*) buffer++;
                                    *_tmp_14057 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123.size() != 0)  // CHOICE 123  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 123;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013028\033[0m| Choice selection: 123";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013029\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14058 = (uint8_t*) buffer++;
                                    *_tmp_14058 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124.size() != 0)  // CHOICE 124  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 124;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013030\033[0m| Choice selection: 124";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013031\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14059 = (uint8_t*) buffer++;
                                    *_tmp_14059 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125.size() != 0)  // CHOICE 125  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 125;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013032\033[0m| Choice selection: 125";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013033\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14060 = (uint8_t*) buffer++;
                                    *_tmp_14060 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126.size() != 0)  // CHOICE 126  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 126;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013034\033[0m| Choice selection: 126";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013035\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14061 = (uint8_t*) buffer++;
                                    *_tmp_14061 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127.size() != 0)  // CHOICE 127  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 127;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013036\033[0m| Choice selection: 127";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013037\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14062 = (uint8_t*) buffer++;
                                    *_tmp_14062 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128.size() != 0)  // CHOICE 128  fieldType(CauseCodeChoice) 
                                {
                                    *_choice_360 = 128;  // Setting choice selection
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013038\033[0m| Choice selection: 128";
                                
                                    // Integer
                                    
                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013039\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14063 = (uint8_t*) buffer++;
                                    *_tmp_14063 = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                        return -1;
                                    }
                                
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_360) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc'; message dropped.";
                                    return -1;
                                }
                                
                                if(*_ext_flag_6402) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0) {
                            // Field:  type(DangerousGoodsExtended) name(carrying_dangerous_goods) extGroup(0)
                                // DangerousGoodsExtended  SEQUENCE
                                    //  dangerousGoodsType  DangerousGoodsBasic                            
                                    //  unNumber            DangerousGoodsExtended_unNumber                
                                    //  elevatedTemperature DangerousGoodsExtended_elevatedTemperature     
                                    //  tunnelsRestricted   DangerousGoodsExtended_tunnelsRestricted       
                                    //  limitedQuantity     DangerousGoodsExtended_limitedQuantity         
                                    //  emergencyActionCode DangerousGoodsExtended_emergencyActionCode   OPTIONAL  
                                    //  phoneNumber         PhoneNumber                                  OPTIONAL  
                                    //  companyName         DangerousGoodsExtended_companyName           OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_6533 = (uint8_t*) buffer++;  // Write extension flag for DangerousGoodsExtended
                                *_ext_flag_6533 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_14065 = (char*) buffer++;
                                *_tmp_14065 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013040\033[0m| Optional field emergency_action_code = " << *_tmp_14065;
                                char* _tmp_14066 = (char*) buffer++;
                                *_tmp_14066 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013041\033[0m| Optional field phone_number = " << *_tmp_14066;
                                char* _tmp_14067 = (char*) buffer++;
                                *_tmp_14067 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013042\033[0m| Optional field company_name = " << *_tmp_14067;
                                
                                // Field:  type(DangerousGoodsBasic) name(dangerous_goods_type) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(19) span(20) dataType(Int32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013043\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value);
                                }
                                
                                uint8_t* _tmp_14068 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_14068 = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value; 
                                __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 19) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' (" << __aux64__ << ") exceeds max allowable (19); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DangerousGoodsExtended_unNumber) name(un_number) extGroup(0)
                                // Integer
                                
                                // UINT16  min(0) max(9999) span(10000) dataType(UInt16)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013044\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value: " << ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                }
                                
                                uint16_t* _tmp_14069 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_14069 = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value; 
                                __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 9999) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' (" << __aux64__ << ") exceeds max allowable (9999); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(DangerousGoodsExtended_elevatedTemperature) name(elevated_temperature) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_14070 = (uint8_t*)buffer++;
                                *_tmp_14070 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature.value ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013045\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature: " << (*_tmp_14070);
                                
                                // Field:  type(DangerousGoodsExtended_tunnelsRestricted) name(tunnels_restricted) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_14071 = (uint8_t*)buffer++;
                                *_tmp_14071 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted.value ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013046\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted: " << (*_tmp_14071);
                                
                                // Field:  type(DangerousGoodsExtended_limitedQuantity) name(limited_quantity) extGroup(0)
                                // Value
                                // Boolean
                                uint8_t* _tmp_14072 = (uint8_t*)buffer++;
                                *_tmp_14072 = (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity.value ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013047\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity: " << (*_tmp_14072);
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0) {
                                    // Field:  type(DangerousGoodsExtended_emergencyActionCode) name(emergency_action_code) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_14073 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size() > 24) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value) << " exceeds max allowable (24); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013048\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.size());
                                    
                                    if(__aux64__ > 24) __aux64__ = 24;
                                    *_tmp_14073 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __iff = __aux64__;
                                    for(int f = 0; f < __iff; f++) {  // 24
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value.c_str()[f];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0) {
                                    // Field:  type(PhoneNumber) name(phone_number) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(16) span(16)
                                    uint8_t* _tmp_14074 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value) << " exceeds max allowable (16); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013049\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.size());
                                    
                                    if(__aux64__ > 16) __aux64__ = 16;
                                    *_tmp_14074 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifg = __aux64__;
                                    for(int g = 0; g < __ifg; g++) {  // 16
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value.c_str()[g];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0) {
                                    // Field:  type(DangerousGoodsExtended_companyName) name(company_name) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_14075 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size() > 24) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value) << " exceeds max allowable (24); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013050\033[0m| denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.size());
                                    
                                    if(__aux64__ > 24) __aux64__ = 24;
                                    *_tmp_14075 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifh = __aux64__;
                                    for(int h = 0; h < __ifh; h++) {  // 24
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value.c_str()[h];
                                    }
                                }
                                
                                if(*_ext_flag_6533) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0) {
                            // Field:  type(NumberOfOccupants) name(number_of_occupants) extGroup(0)
                            // Integer
                            
                            // UINT8  min(0) max(127) span(128) dataType(UInt8)
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m013051\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value);
                            }
                            
                            uint8_t* _tmp_14077 = (uint8_t*) buffer++;
                            *_tmp_14077 = ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value; 
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value;
                            
                            // MIN validator
                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                return -1;
                            }
                            // MAX validator
                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                return -1;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0) {
                            // Field:  type(VehicleIdentification) name(vehicle_identification) extGroup(0)
                                // VehicleIdentification  SEQUENCE
                                    //  wMInumber  WMInumber    OPTIONAL  
                                    //  vDS        VDS          OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_6537 = (uint8_t*) buffer++;  // Write extension flag for VehicleIdentification
                                *_ext_flag_6537 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_14078 = (char*) buffer++;
                                *_tmp_14078 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013052\033[0m| Optional field w_m_inumber = " << *_tmp_14078;
                                char* _tmp_14079 = (char*) buffer++;
                                *_tmp_14079 = (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013053\033[0m| Optional field v_ds = " << *_tmp_14079;
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0) {
                                    // Field:  type(WMInumber) name(w_m_inumber) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(1) max(3) span(3)
                                    uint8_t* _tmp_14080 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size() < 1) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value) << " is less than allowable (1); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size() > 3) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value) << " exceeds max allowable (3); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013054\033[0m| denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.size());
                                    
                                    if(__aux64__ > 3) __aux64__ = 3;
                                    *_tmp_14080 = __aux64__ - 1;
                                    buffer += 1;
                                    
                                    int __ifi = __aux64__;
                                    for(int i = 0; i < __ifi; i++) {  // 3
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value.c_str()[i];
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0) {
                                    // Field:  type(VDS) name(v_ds) extGroup(0)
                                    // Text
                                    
                                    // TEXT  min(6) max(6) span(1)
                                    uint8_t* _tmp_14081 = (uint8_t*)buffer;
                                    __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size();
                                    
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size() < 6) {
                                        logger->warning() << "Error: Length of 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value) << " is less than allowable (6); message dropped.";
                                        return -1;
                                    }
                                    if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size() > 6) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value) << " exceeds max allowable (6); message dropped.";
                                        return -1;
                                    }
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013055\033[0m| denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size(): " << 
                                                    static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.size());
                                    
                                    if(__aux64__ > 6) __aux64__ = 6;
                                    *_tmp_14081 = __aux64__ - 6;
                                    buffer += 1;
                                    
                                    int __ifj = __aux64__;
                                    for(int j = 0; j < __ifj; j++) {  // 6
                                        char* __tmp__ = (char*)buffer++;
                                        *__tmp__ = ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value.c_str()[j];
                                    }
                                }
                                
                                if(*_ext_flag_6537) {
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0) {
                            // Field:  type(EnergyStorageType) name(energy_storage_type) extGroup(0)
                            // BitString
                            // BIT_STRING  min(7) max(7) span(1)
                            if(debug)
                                logger->debug() << "|\033[38;5;94m013056\033[0m| denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size());
                            
                            if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size() < 7) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size()) << " is less than allowable (7); message dropped.";
                                return -1;
                            }
                            if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size() > 7) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size()) << " exceeds max allowable (7); message dropped.";
                                return -1;
                            }
                            
                            uint8_t* _tmp_14083 = (uint8_t*)buffer;
                            __aux64__ = ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.size();
                            if(__aux64__ > 7) __aux64__ = 7;
                            *_tmp_14083 = __aux64__ - 7;
                            buffer += 1;
                            
                            int __ifk = __aux64__;
                            for(int k = 0; k < __ifk; k++) {
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                *__b__ = (ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values[k]? 1: 0);
                            }
                        }
                }
                
                if(*_ext_flag_6234) {
                    // Write number of extensions 
                    uint8_t* _tmp_14084 = (uint8_t*) buffer++;
                    *_tmp_14084 = 1;
                    
                    // Write Bytemap
                    // extension group #1)
                    uint8_t* _tmp_14085 = (uint8_t*) buffer++;
                    *_tmp_14085 = (ros->denm.alacarte[0].road_configuration.size() != 0 || ros->denm.alacarte[0].precrash.size() != 0) ? 1 : 0;
                    
                    // OpenType length variable 
                    uint16_t* _tmp_14086_openType = (uint16_t*) buffer;
                    buffer += 2;
                    const uint8_t *_tmp_14087_start = buffer; // Starting point
                    
                    // Optional fields bytemap
                    uint8_t* _tmp_14088 = (uint8_t*)buffer++;
                    *_tmp_14088 = (ros->denm.alacarte[0].road_configuration.size() != 0 ? 1: 0);
                    
                    uint8_t* _tmp_14089 = (uint8_t*)buffer++;
                    *_tmp_14089 = (ros->denm.alacarte[0].precrash.size() != 0 ? 1: 0);
                    
                    if(ros->denm.alacarte[0].road_configuration.size() != 0) {
                        // Field:  type(RoadConfigurationContainer) name(road_configuration) extGroup(1)
                            // RoadConfigurationContainer  SEQUENCE
                                //  roadConfigurationConfidence  MetaInformation                  
                                //  roadConfigurationSectionList RoadConfigurationSectionList     
                                //  ...
                            uint8_t* _ext_flag_6538 = (uint8_t*) buffer++;  // Write extension flag for RoadConfigurationContainer
                            *_ext_flag_6538 = 0;  
                            
                            // Optional fields bytemap
                            
                            // Field:  type(MetaInformation) name(road_configuration_confidence) extGroup(0)
                                // MetaInformation  SEQUENCE
                                    //  usedDetectionInformation SensorTypes               
                                    //  usedStoredInformation    StoredInformationType     
                                    //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_6539 = (uint8_t*) buffer++;  // Write extension flag for MetaInformation
                                *_ext_flag_6539 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_14090 = (char*) buffer++;
                                *_tmp_14090 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013057\033[0m| Optional field confidence_value = " << *_tmp_14090;
                                
                                // Field:  type(SensorTypes) name(used_detection_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(16) max(16) span(1)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013058\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size());
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size() < 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size()) << " is less than allowable (16); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size() > 16) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size()) << " exceeds max allowable (16); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_6540 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.
                                *_ext_flag_6540 = 0; 
                                
                                uint8_t* _tmp_14091 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.size();
                                if(__aux64__ > 16) __aux64__ = 16;
                                *_tmp_14091 = __aux64__ - 16;
                                buffer += 1;
                                
                                int __ifl = __aux64__;
                                for(int l = 0; l < __ifl; l++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values[l]? 1: 0);
                                }
                                
                                // Field:  type(StoredInformationType) name(used_stored_information) extGroup(0)
                                // BitString
                                // BIT_STRING  min(1) max(168) span(168)
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013059\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size());
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size() < 1) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size()) << " is less than allowable (1); message dropped.";
                                    return -1;
                                }
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size() > 168) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size()) << " exceeds max allowable (168); message dropped.";
                                    return -1;
                                }
                                
                                uint8_t* _ext_flag_6541 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.
                                *_ext_flag_6541 = 0; 
                                
                                uint8_t* _tmp_14092 = (uint8_t*)buffer;
                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.size();
                                if(__aux64__ > 168) __aux64__ = 168;
                                *_tmp_14092 = __aux64__ - 1;
                                buffer += 1;
                                
                                int __ifm = __aux64__;
                                for(int m = 0; m < __ifm; m++) {
                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                    *__b__ = (ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values[m]? 1: 0);
                                }
                                
                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0) {
                                    // Field:  type(ConfidenceLevel) name(confidence_value) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013060\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value) << 
                                                     " denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14093 = (uint8_t*) buffer++;
                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value - 1;
                                    *_tmp_14093 = __aux64__;
                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(*_ext_flag_6539) {
                                }
                            
                            // Field:  type(RoadConfigurationSectionList) name(road_configuration_section_list) extGroup(0)
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                            uint8_t* _ext_flag_6543 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.
                            *_ext_flag_6543 = 0; 
                            
                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements.size();
                            if(__aux64__ > 8) __aux64__ = 8;
                            uint16_t* _tmp_14095 = (uint16_t*)buffer;
                            buffer += 2;
                            *_tmp_14095 = __aux64__ - 1;
                            
                            int __ifn = __aux64__;
                            for(int n = 0; n < __ifn; n++) { 
                                
                                    // RoadConfigurationSection  SEQUENCE
                                        //  roadSectionDefinition RoadSectionDefinition      
                                        //  roadType              RoadType                 OPTIONAL  
                                        //  laneConfiguration     BasicLaneConfiguration   OPTIONAL  
                                        //  mapemConfiguration    MapemConfiguration       OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_6544 = (uint8_t*) buffer++;  // Write extension flag for RoadConfigurationSection
                                    *_ext_flag_6544 = 0;  
                                    
                                    // Optional fields bytemap
                                    char* _tmp_14096 = (char*) buffer++;
                                    *_tmp_14096 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013062\033[0m| Optional field road_type = " << *_tmp_14096;
                                    char* _tmp_14097 = (char*) buffer++;
                                    *_tmp_14097 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013063\033[0m| Optional field lane_configuration = " << *_tmp_14097;
                                    char* _tmp_14098 = (char*) buffer++;
                                    *_tmp_14098 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013064\033[0m| Optional field mapem_configuration = " << *_tmp_14098;
                                    
                                    // Field:  type(RoadSectionDefinition) name(road_section_definition) extGroup(0)
                                        // RoadSectionDefinition  SEQUENCE
                                            //  startingPointSection GeoPosition                                    
                                            //  lengthOfSection      StandardLength2B                             OPTIONAL  
                                            //  endingPointSection   GeoPosition                                  OPTIONAL  
                                            //  connectedPaths       PathReferences                                 
                                            //  includedPaths        PathReferences                                 
                                            //  isEventZoneIncluded  RoadSectionDefinition_isEventZoneIncluded      
                                            //  isEventZoneConnected RoadSectionDefinition_isEventZoneConnected     
                                            //  ...
                                        uint8_t* _ext_flag_6545 = (uint8_t*) buffer++;  // Write extension flag for RoadSectionDefinition
                                        *_ext_flag_6545 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_14099 = (char*) buffer++;
                                        *_tmp_14099 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013065\033[0m| Optional field length_of_section = " << *_tmp_14099;
                                        char* _tmp_14100 = (char*) buffer++;
                                        *_tmp_14100 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013066\033[0m| Optional field ending_point_section = " << *_tmp_14100;
                                        
                                        // Field:  type(GeoPosition) name(starting_point_section) extGroup(0)
                                            // GeoPosition  SEQUENCE
                                                //  latitude   Latitude          
                                                //  longitude  Longitude         
                                                //  altitude   AltitudeValue     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(Latitude) name(latitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013067\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.latitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.latitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.latitude.value;
                                            }
                                            
                                            double _tmp_14102 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.latitude.value;
                                            _tmp_14102 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14102);
                                            _tmp_14102 -= -900000000;
                                            uint32_t* _tmp_14101 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_14101 = static_cast<uint32_t>(_tmp_14102);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(Longitude) name(longitude) extGroup(0)
                                            // Real
                                            
                                            // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013068\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.longitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.longitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.longitude.value;
                                            }
                                            
                                            double _tmp_14104 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.longitude.value;
                                            _tmp_14104 *= 1.0E7;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14104);
                                            _tmp_14104 -= -1800000000;
                                            uint32_t* _tmp_14103 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_14103 = static_cast<uint32_t>(_tmp_14104);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(AltitudeValue) name(altitude) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013069\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.altitude.value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.altitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.altitude.value;
                                            }
                                            
                                            float _tmp_14106 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.altitude.value;
                                            _tmp_14106 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14106);
                                            _tmp_14106 -= -100000;
                                            uint32_t* _tmp_14105 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_14105 = static_cast<uint32_t>(_tmp_14106);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.altitude.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.starting_point_section.altitude.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section.size() != 0) {
                                            // Field:  type(StandardLength2B) name(length_of_section) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(65535) span(65536) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013070\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section[0].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section[0].value;
                                            }
                                            
                                            float _tmp_14108 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section[0].value;
                                            _tmp_14108 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14108);
                                            uint16_t* _tmp_14107 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_14107 = static_cast<uint16_t>(_tmp_14108);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.length_of_section[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section.size() != 0) {
                                            // Field:  type(GeoPosition) name(ending_point_section) extGroup(0)
                                                // GeoPosition  SEQUENCE
                                                    //  latitude   Latitude          
                                                    //  longitude  Longitude         
                                                    //  altitude   AltitudeValue     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(Latitude) name(latitude) extGroup(0)
                                                // Real
                                                
                                                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013071\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].latitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].latitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].latitude.value;
                                                }
                                                
                                                double _tmp_14110 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].latitude.value;
                                                _tmp_14110 *= 1.0E7;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14110);
                                                _tmp_14110 -= -900000000;
                                                uint32_t* _tmp_14109 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_14109 = static_cast<uint32_t>(_tmp_14110);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].latitude.value' (" << __aux64__ << ") less than (-900000000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].latitude.value' (" << __aux64__ << ") exceeds max allowable (900000001); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(Longitude) name(longitude) extGroup(0)
                                                // Real
                                                
                                                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013072\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].longitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].longitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].longitude.value;
                                                }
                                                
                                                double _tmp_14112 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].longitude.value;
                                                _tmp_14112 *= 1.0E7;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14112);
                                                _tmp_14112 -= -1800000000;
                                                uint32_t* _tmp_14111 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_14111 = static_cast<uint32_t>(_tmp_14112);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].longitude.value' (" << __aux64__ << ") less than (-1800000000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].longitude.value' (" << __aux64__ << ") exceeds max allowable (1800000001); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AltitudeValue) name(altitude) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013073\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].altitude.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].altitude.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].altitude.value;
                                                }
                                                
                                                float _tmp_14114 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].altitude.value;
                                                _tmp_14114 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14114);
                                                _tmp_14114 -= -100000;
                                                uint32_t* _tmp_14113 = (uint32_t*) buffer; buffer += 4;
                                                *_tmp_14113 = static_cast<uint32_t>(_tmp_14114);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].altitude.value' (" << __aux64__ << ") less than (-100000); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.ending_point_section[0].altitude.value' (" << __aux64__ << ") exceeds max allowable (800001); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        // Field:  type(PathReferences) name(connected_paths) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(14) span(14) ext(false)
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements.size();
                                        if(__aux64__ > 14) __aux64__ = 14;
                                        uint16_t* _tmp_14115 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_14115 = __aux64__ - 1;
                                        
                                        int __ifo = __aux64__;
                                        for(int o = 0; o < __ifo; o++) { 
                                            
                                            // Integer
                                            
                                            // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013075\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value);
                                            }
                                            
                                            uint8_t* _tmp_14116 = (uint8_t*) buffer++;
                                            *_tmp_14116 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value; 
                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.connected_paths.elements[o].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                        }
                                        
                                        // Field:  type(PathReferences) name(included_paths) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(14) span(14) ext(false)
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements.size();
                                        if(__aux64__ > 14) __aux64__ = 14;
                                        uint16_t* _tmp_14117 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_14117 = __aux64__ - 1;
                                        
                                        int __ifp = __aux64__;
                                        for(int p = 0; p < __ifp; p++) { 
                                            
                                            // Integer
                                            
                                            // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013077\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value);
                                            }
                                            
                                            uint8_t* _tmp_14118 = (uint8_t*) buffer++;
                                            *_tmp_14118 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value; 
                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.included_paths.elements[p].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                return -1;
                                            }
                                            
                                        }
                                        
                                        // Field:  type(RoadSectionDefinition_isEventZoneIncluded) name(is_event_zone_included) extGroup(0)
                                        // Value
                                        // Boolean
                                        uint8_t* _tmp_14119 = (uint8_t*)buffer++;
                                        *_tmp_14119 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.is_event_zone_included.value ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013078\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.is_event_zone_included: " << (*_tmp_14119);
                                        
                                        // Field:  type(RoadSectionDefinition_isEventZoneConnected) name(is_event_zone_connected) extGroup(0)
                                        // Value
                                        // Boolean
                                        uint8_t* _tmp_14120 = (uint8_t*)buffer++;
                                        *_tmp_14120 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.is_event_zone_connected.value ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013079\033[0m| denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_section_definition.is_event_zone_connected: " << (*_tmp_14120);
                                        
                                        if(*_ext_flag_6545) {
                                        }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type.size() != 0) {
                                        // Field:  type(RoadType) name(road_type) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(3) span(4) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013080\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value) << 
                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value);
                                        }
                                        
                                        uint8_t* _tmp_14122 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_14122 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value; 
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].road_type[0].value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                            return -1;
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration.size() != 0) {
                                        // Field:  type(BasicLaneConfiguration) name(lane_configuration) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                        uint8_t* _ext_flag_6556 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].
                                        *_ext_flag_6556 = 0; 
                                        
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements.size();
                                        if(__aux64__ > 16) __aux64__ = 16;
                                        uint16_t* _tmp_14123 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_14123 = __aux64__ - 1;
                                        
                                        int __ifq = __aux64__;
                                        for(int q = 0; q < __ifq; q++) { 
                                            
                                                // BasicLaneInformation  SEQUENCE
                                                    //  laneNumber            LanePosition      
                                                    //  direction             Direction         
                                                    //  laneWidth             LaneWidth       OPTIONAL  
                                                    //  connectingLane        LanePosition    OPTIONAL  
                                                    //  connectingRoadSection RoadSectionId   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_6557 = (uint8_t*) buffer++;  // Write extension flag for BasicLaneInformation
                                                *_ext_flag_6557 = 0;  
                                                
                                                // Optional fields bytemap
                                                char* _tmp_14124 = (char*) buffer++;
                                                *_tmp_14124 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013082\033[0m| Optional field lane_width = " << *_tmp_14124;
                                                char* _tmp_14125 = (char*) buffer++;
                                                *_tmp_14125 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013083\033[0m| Optional field connecting_lane = " << *_tmp_14125;
                                                char* _tmp_14126 = (char*) buffer++;
                                                *_tmp_14126 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013084\033[0m| Optional field connecting_road_section = " << *_tmp_14126;
                                                
                                                // Field:  type(LanePosition) name(lane_number) extGroup(0)
                                                // Integer
                                                
                                                // INT8  min(-1) max(14) span(16) dataType(Int8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013085\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value);
                                                }
                                                
                                                uint8_t* _tmp_14127 = (uint8_t*) buffer++;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value - -1;
                                                *_tmp_14127 = __aux64__;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_number.value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(Direction) name(direction) extGroup(0)
                                                // Integer
                                                
                                                // UINT8  min(0) max(3) span(4) dataType(UInt8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013086\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value);
                                                }
                                                
                                                uint8_t* _tmp_14128 = (uint8_t*) buffer++;
                                                *_tmp_14128 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value; 
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].direction.value' (" << __aux64__ << ") exceeds max allowable (3); message dropped.";
                                                    return -1;
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width.size() != 0) {
                                                    // Field:  type(LaneWidth) name(lane_width) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(1023) span(1024) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013087\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width[0].value;
                                                    }
                                                    
                                                    float _tmp_14130 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width[0].value;
                                                    _tmp_14130 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14130);
                                                    uint16_t* _tmp_14129 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14129 = static_cast<uint16_t>(_tmp_14130);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].lane_width[0].value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane.size() != 0) {
                                                    // Field:  type(LanePosition) name(connecting_lane) extGroup(0)
                                                    // Integer
                                                    
                                                    // INT8  min(-1) max(14) span(16) dataType(Int8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013088\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14131 = (uint8_t*) buffer++;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value - -1;
                                                    *_tmp_14131 = __aux64__;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value' (" << __aux64__ << ") less than (-1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_lane[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section.size() != 0) {
                                                    // Field:  type(RoadSectionId) name(connecting_road_section) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(8) span(9) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013089\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value);
                                                    }
                                                    
                                                    uint8_t* _ext_flag_6562 = (uint8_t*) buffer++; // Extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].
                                                    *_ext_flag_6562 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value >= 0 && ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value <= 8) ? 0 : 1;
                                                    
                                                    if(*_ext_flag_6562) {
                                                        uint8_t* _tmp_14133 = (uint8_t*) buffer++; 
                                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value >= 0 && ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value <= INT32_MAX) {
                                                            *_tmp_14133 = 0;
                                                        
                                                            uint32_t* _tmp_14132 = (uint32_t*)buffer; buffer += 4;
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value;
                                                            __aux64__ -= INT32_MIN;
                                                            *_tmp_14132 = __aux64__;
                                                        } 
                                                        else
                                                        {
                                                            *_tmp_14133 = 1;
                                                        
                                                            uint64_t* _tmp_14132 = (uint64_t*)buffer; buffer += 8;
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value;
                                                            __aux64__ -= INT64_MIN;
                                                            *_tmp_14132 = __aux64__;
                                                        }
                                                    } else {
                                                        uint8_t* _tmp_14132 = (uint8_t*) buffer++;
                                                        *_tmp_14132 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].lane_configuration[0].elements[q].connecting_road_section[0].value;
                                                    }
                                                }
                                                
                                                if(*_ext_flag_6557) {
                                                }
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration.size() != 0) {
                                        // Field:  type(MapemConfiguration) name(mapem_configuration) extGroup(0)
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                        uint8_t* _ext_flag_6563 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].
                                        *_ext_flag_6563 = 0; 
                                        
                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements.size();
                                        if(__aux64__ > 16) __aux64__ = 16;
                                        uint16_t* _tmp_14135 = (uint16_t*)buffer;
                                        buffer += 2;
                                        *_tmp_14135 = __aux64__ - 1;
                                        
                                        int __ifr = __aux64__;
                                        for(int r = 0; r < __ifr; r++) { 
                                            
                                                // MapemElementReference  SEQUENCE
                                                    //  mapReference  MapReference          OPTIONAL  
                                                    //  laneIds       MapemLaneList         OPTIONAL  
                                                    //  connectionIds MapemConnectionList   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_6564 = (uint8_t*) buffer++;  // Write extension flag for MapemElementReference
                                                *_ext_flag_6564 = 0;  
                                                
                                                // Optional fields bytemap
                                                char* _tmp_14136 = (char*) buffer++;
                                                *_tmp_14136 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013091\033[0m| Optional field map_reference = " << *_tmp_14136;
                                                char* _tmp_14137 = (char*) buffer++;
                                                *_tmp_14137 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013092\033[0m| Optional field lane_ids = " << *_tmp_14137;
                                                char* _tmp_14138 = (char*) buffer++;
                                                *_tmp_14138 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids.size() != 0 ? 1 : 0);
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013093\033[0m| Optional field connection_ids = " << *_tmp_14138;
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference.size() != 0) {
                                                    // Field:  type(MapReference) name(map_reference) extGroup(0)
                                                    // Choice
                                                       // #0  roadsegment   RoadSegmentReferenceId
                                                       // #1  intersection   IntersectionReferenceId
                                                    uint8_t* _choice_361 = (uint8_t*) buffer;
                                                    buffer++;
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                        *_choice_361 = 0;  // Setting choice selection
                                                    
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m013094\033[0m| Choice selection: 0";
                                                    
                                                            // RoadSegmentReferenceId  SEQUENCE
                                                                //  region     Identifier2B   OPTIONAL  
                                                                //  id         Identifier2B     
                                                            // Optional fields bytemap
                                                            char* _tmp_14139 = (char*) buffer++;
                                                            *_tmp_14139 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013095\033[0m| Optional field region = " << *_tmp_14139;
                                                            
                                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region.size() != 0) {
                                                                // Field:  type(Identifier2B) name(region) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013096\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value;
                                                                }
                                                                
                                                                uint16_t* _tmp_14140 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14140 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value; 
                                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                    return -1;
                                                                }
                                                            }
                                                            
                                                            // Field:  type(Identifier2B) name(id) extGroup(0)
                                                            // Integer
                                                            
                                                            // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m013097\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value;
                                                            }
                                                            
                                                            uint16_t* _tmp_14141 = (uint16_t*) buffer; buffer += 2;
                                                            *_tmp_14141 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value; 
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value;
                                                            
                                                            // MIN validator
                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                return -1;
                                                            }
                                                            // MAX validator
                                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                return -1;
                                                            }
                                                    
                                                    }
                                                    else if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                                    {
                                                        *_choice_361 = 1;  // Setting choice selection
                                                    
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m013098\033[0m| Choice selection: 1";
                                                    
                                                            // IntersectionReferenceId  SEQUENCE
                                                                //  region     Identifier2B   OPTIONAL  
                                                                //  id         Identifier2B     
                                                            // Optional fields bytemap
                                                            char* _tmp_14142 = (char*) buffer++;
                                                            *_tmp_14142 = (ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013099\033[0m| Optional field region = " << *_tmp_14142;
                                                            
                                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region.size() != 0) {
                                                                // Field:  type(Identifier2B) name(region) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013100\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value;
                                                                }
                                                                
                                                                uint16_t* _tmp_14143 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14143 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value; 
                                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                    return -1;
                                                                }
                                                            }
                                                            
                                                            // Field:  type(Identifier2B) name(id) extGroup(0)
                                                            // Integer
                                                            
                                                            // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m013101\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value;
                                                            }
                                                            
                                                            uint16_t* _tmp_14144 = (uint16_t*) buffer; buffer += 2;
                                                            *_tmp_14144 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value; 
                                                            __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value;
                                                            
                                                            // MIN validator
                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                return -1;
                                                            }
                                                            // MAX validator
                                                            if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                                return -1;
                                                            }
                                                    
                                                    }
                                                    else
                                                    {
                                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_361) << ") selected in CHOICE MapReference in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].map_reference[0]'; message dropped.";
                                                        return -1;
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids.size() != 0) {
                                                    // Field:  type(MapemLaneList) name(lane_ids) extGroup(0)
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                                                    uint8_t* _ext_flag_6570 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].
                                                    *_ext_flag_6570 = 0; 
                                                    
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements.size();
                                                    if(__aux64__ > 8) __aux64__ = 8;
                                                    uint16_t* _tmp_14145 = (uint16_t*)buffer;
                                                    buffer += 2;
                                                    *_tmp_14145 = __aux64__ - 1;
                                                    
                                                    int __ifs = __aux64__;
                                                    for(int s = 0; s < __ifs; s++) { 
                                                        
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m013103\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_14146 = (uint8_t*) buffer++;
                                                        *_tmp_14146 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].lane_ids[0].elements[s].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                    }
                                                }
                                                
                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids.size() != 0) {
                                                    // Field:  type(MapemConnectionList) name(connection_ids) extGroup(0)
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(true)
                                                    uint8_t* _ext_flag_6572 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].
                                                    *_ext_flag_6572 = 0; 
                                                    
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements.size();
                                                    if(__aux64__ > 8) __aux64__ = 8;
                                                    uint16_t* _tmp_14147 = (uint16_t*)buffer;
                                                    buffer += 2;
                                                    *_tmp_14147 = __aux64__ - 1;
                                                    
                                                    int __ift = __aux64__;
                                                    for(int t = 0; t < __ift; t++) { 
                                                        
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m013105\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_14148 = (uint8_t*) buffer++;
                                                        *_tmp_14148 = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value; 
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[n].mapem_configuration[0].elements[r].connection_ids[0].elements[t].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                    }
                                                }
                                                
                                                if(*_ext_flag_6564) {
                                                }
                                        }
                                    }
                                    
                                    if(*_ext_flag_6544) {
                                    }
                            }
                            
                            if(*_ext_flag_6538) {
                            }
                    }
                    
                    if(ros->denm.alacarte[0].precrash.size() != 0) {
                        // Field:  type(PreCrashContainer) name(precrash) extGroup(1)
                            // PreCrashContainer  SEQUENCE
                                //  perceivedPreCrashObject  PerceivedObject                  
                                //  objectStationId          StationId                      OPTIONAL  
                                //  timeToCollision          DeltaTimeMilliSecondPositive   OPTIONAL  
                                //  impactSection            ObjectFace                     OPTIONAL  
                                //  estimatedBrakingDistance StandardLength12b              OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_6574 = (uint8_t*) buffer++;  // Write extension flag for PreCrashContainer
                            *_ext_flag_6574 = 0;  
                            
                            // Optional fields bytemap
                            char* _tmp_14152 = (char*) buffer++;
                            *_tmp_14152 = (ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m013106\033[0m| Optional field object_station_id = " << *_tmp_14152;
                            char* _tmp_14153 = (char*) buffer++;
                            *_tmp_14153 = (ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m013107\033[0m| Optional field time_to_collision = " << *_tmp_14153;
                            char* _tmp_14154 = (char*) buffer++;
                            *_tmp_14154 = (ros->denm.alacarte[0].precrash[0].impact_section.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m013108\033[0m| Optional field impact_section = " << *_tmp_14154;
                            char* _tmp_14155 = (char*) buffer++;
                            *_tmp_14155 = (ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0 ? 1 : 0);
                            if(debug)
                                logger->debug() << "|\033[38;5;94m013109\033[0m| Optional field estimated_braking_distance = " << *_tmp_14155;
                            
                            // Field:  type(PerceivedObject) name(perceived_pre_crash_object) extGroup(0)
                                // PerceivedObject  SEQUENCE
                                    //  objectId                           Identifier2B                                           OPTIONAL  
                                    //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                    //  position                           CartesianPosition3dWithConfidence                        
                                    //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                    //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                    //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                    //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                    //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                    //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                    //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                    //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                    //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                    //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                    //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                    //  classification                     ObjectClassDescription                                 OPTIONAL  
                                    //  mapPosition                        MapPosition                                            OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_6575 = (uint8_t*) buffer++;  // Write extension flag for PerceivedObject
                                *_ext_flag_6575 = 0;  
                                
                                // Optional fields bytemap
                                char* _tmp_14156 = (char*) buffer++;
                                *_tmp_14156 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013110\033[0m| Optional field object_id = " << *_tmp_14156;
                                char* _tmp_14157 = (char*) buffer++;
                                *_tmp_14157 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013111\033[0m| Optional field velocity = " << *_tmp_14157;
                                char* _tmp_14158 = (char*) buffer++;
                                *_tmp_14158 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013112\033[0m| Optional field acceleration = " << *_tmp_14158;
                                char* _tmp_14159 = (char*) buffer++;
                                *_tmp_14159 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013113\033[0m| Optional field angles = " << *_tmp_14159;
                                char* _tmp_14160 = (char*) buffer++;
                                *_tmp_14160 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013114\033[0m| Optional field z_angular_velocity = " << *_tmp_14160;
                                char* _tmp_14161 = (char*) buffer++;
                                *_tmp_14161 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013115\033[0m| Optional field lower_triangular_correlation_matrices = " << *_tmp_14161;
                                char* _tmp_14162 = (char*) buffer++;
                                *_tmp_14162 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013116\033[0m| Optional field object_dimension_z = " << *_tmp_14162;
                                char* _tmp_14163 = (char*) buffer++;
                                *_tmp_14163 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013117\033[0m| Optional field object_dimension_y = " << *_tmp_14163;
                                char* _tmp_14164 = (char*) buffer++;
                                *_tmp_14164 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013118\033[0m| Optional field object_dimension_x = " << *_tmp_14164;
                                char* _tmp_14165 = (char*) buffer++;
                                *_tmp_14165 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013119\033[0m| Optional field object_age = " << *_tmp_14165;
                                char* _tmp_14166 = (char*) buffer++;
                                *_tmp_14166 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013120\033[0m| Optional field object_perception_quality = " << *_tmp_14166;
                                char* _tmp_14167 = (char*) buffer++;
                                *_tmp_14167 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013121\033[0m| Optional field sensor_id_list = " << *_tmp_14167;
                                char* _tmp_14168 = (char*) buffer++;
                                *_tmp_14168 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013122\033[0m| Optional field classification = " << *_tmp_14168;
                                char* _tmp_14169 = (char*) buffer++;
                                *_tmp_14169 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0 ? 1 : 0);
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m013123\033[0m| Optional field map_position = " << *_tmp_14169;
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0) {
                                    // Field:  type(Identifier2B) name(object_id) extGroup(0)
                                    // Integer
                                    
                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013124\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                    }
                                    
                                    uint16_t* _tmp_14170 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_14170 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                // Field:  type(DeltaTimeMilliSecondSigned) name(measurement_delta_time) extGroup(0)
                                // Real
                                
                                // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013125\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value) << 
                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                }
                                
                                float _tmp_14172 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                _tmp_14172 *= 1000.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_14172);
                                _tmp_14172 -= -2048;
                                uint16_t* _tmp_14171 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_14171 = static_cast<uint16_t>(_tmp_14172);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < -2048) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' (" << __aux64__ << ") less than (-2048); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' (" << __aux64__ << ") exceeds max allowable (2047); message dropped.";
                                    return -1;
                                }
                                
                                // Field:  type(CartesianPosition3dWithConfidence) name(position) extGroup(0)
                                    // CartesianPosition3dWithConfidence  SEQUENCE
                                        //  xCoordinate CartesianCoordinateWithConfidence     
                                        //  yCoordinate CartesianCoordinateWithConfidence     
                                        //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                    // Optional fields bytemap
                                    char* _tmp_14173 = (char*) buffer++;
                                    *_tmp_14173 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0 ? 1 : 0);
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m013126\033[0m| Optional field z_coordinate = " << *_tmp_14173;
                                    
                                    // Field:  type(CartesianCoordinateWithConfidence) name(x_coordinate) extGroup(0)
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013127\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                        }
                                        
                                        float _tmp_14175 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                        _tmp_14175 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14175);
                                        _tmp_14175 -= -131072;
                                        uint32_t* _tmp_14174 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_14174 = static_cast<uint32_t>(_tmp_14175);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013128\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                        }
                                        
                                        float _tmp_14177 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                        _tmp_14177 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14177);
                                        _tmp_14177 -= 1;
                                        uint16_t* _tmp_14176 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_14176 = static_cast<uint16_t>(_tmp_14177);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                            return -1;
                                        }
                                    
                                    // Field:  type(CartesianCoordinateWithConfidence) name(y_coordinate) extGroup(0)
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013129\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                        }
                                        
                                        float _tmp_14179 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                        _tmp_14179 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14179);
                                        _tmp_14179 -= -131072;
                                        uint32_t* _tmp_14178 = (uint32_t*) buffer; buffer += 4;
                                        *_tmp_14178 = static_cast<uint32_t>(_tmp_14179);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013130\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                        }
                                        
                                        float _tmp_14181 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                        _tmp_14181 *= 100.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14181);
                                        _tmp_14181 -= 1;
                                        uint16_t* _tmp_14180 = (uint16_t*) buffer; buffer += 2;
                                        *_tmp_14180 = static_cast<uint16_t>(_tmp_14181);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                            return -1;
                                        }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0) {
                                        // Field:  type(CartesianCoordinateWithConfidence) name(z_coordinate) extGroup(0)
                                            // CartesianCoordinateWithConfidence  SEQUENCE
                                                //  value      CartesianCoordinateLarge     
                                                //  confidence CoordinateConfidence         
                                            // Optional fields bytemap
                                            
                                            // Field:  type(CartesianCoordinateLarge) name(value) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013131\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                            }
                                            
                                            float _tmp_14183 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                            _tmp_14183 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14183);
                                            _tmp_14183 -= -131072;
                                            uint32_t* _tmp_14182 = (uint32_t*) buffer; buffer += 4;
                                            *_tmp_14182 = static_cast<uint32_t>(_tmp_14183);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < -131072) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' (" << __aux64__ << ") less than (-131072); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 131071) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' (" << __aux64__ << ") exceeds max allowable (131071); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(CoordinateConfidence) name(confidence) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013132\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                            }
                                            
                                            float _tmp_14185 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                            _tmp_14185 *= 100.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14185);
                                            _tmp_14185 -= 1;
                                            uint16_t* _tmp_14184 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_14184 = static_cast<uint16_t>(_tmp_14185);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 4096) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (4096); message dropped.";
                                                return -1;
                                            }
                                    }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0) {
                                    // Field:  type(Velocity3dWithConfidence) name(velocity) extGroup(0)
                                    // Choice
                                       // #0  polarVelocity   VelocityPolarWithZ
                                       // #1  cartesianVelocity   VelocityCartesian
                                    uint8_t* _choice_362 = (uint8_t*) buffer;
                                    buffer++;
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity.size() != 0) {  // CHOICE 0  fieldType(Velocity3dWithConfidence) 
                                        *_choice_362 = 0;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013133\033[0m| Choice selection: 0";
                                    
                                            // VelocityPolarWithZ  SEQUENCE
                                                //  velocityMagnitude Speed                 
                                                //  velocityDirection CartesianAngle        
                                                //  zVelocity         VelocityComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_14186 = (char*) buffer++;
                                            *_tmp_14186 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m013134\033[0m| Optional field z_velocity = " << *_tmp_14186;
                                            
                                            // Field:  type(Speed) name(velocity_magnitude) extGroup(0)
                                                // Speed  SEQUENCE
                                                    //  speedValue      SpeedValue          
                                                    //  speedConfidence SpeedConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(SpeedValue) name(speed_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013135\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                }
                                                
                                                float _tmp_14188 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                _tmp_14188 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14188);
                                                uint16_t* _tmp_14187 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14187 = static_cast<uint16_t>(_tmp_14188);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(speed_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013136\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value);
                                                }
                                                
                                                float _tmp_14190 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                                _tmp_14190 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14190);
                                                _tmp_14190 -= 1;
                                                uint8_t* _tmp_14189 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14189 = static_cast<uint8_t>(_tmp_14190);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(CartesianAngle) name(velocity_direction) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013137\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                }
                                                
                                                float _tmp_14192 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                _tmp_14192 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14192);
                                                uint16_t* _tmp_14191 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14191 = static_cast<uint16_t>(_tmp_14192);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013138\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value);
                                                }
                                                
                                                float _tmp_14194 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                                _tmp_14194 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14194);
                                                _tmp_14194 -= 1;
                                                uint8_t* _tmp_14193 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14193 = static_cast<uint8_t>(_tmp_14194);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                                // Field:  type(VelocityComponent) name(z_velocity) extGroup(0)
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013139\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                    }
                                                    
                                                    float _tmp_14196 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                    _tmp_14196 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14196);
                                                    _tmp_14196 -= -16383;
                                                    uint16_t* _tmp_14195 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14195 = static_cast<uint16_t>(_tmp_14196);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013140\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_14198 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                    _tmp_14198 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14198);
                                                    _tmp_14198 -= 1;
                                                    uint8_t* _tmp_14197 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_14197 = static_cast<uint8_t>(_tmp_14198);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity.size() != 0)  // CHOICE 1  fieldType(Velocity3dWithConfidence) 
                                    {
                                        *_choice_362 = 1;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013141\033[0m| Choice selection: 1";
                                    
                                            // VelocityCartesian  SEQUENCE
                                                //  xVelocity  VelocityComponent     
                                                //  yVelocity  VelocityComponent     
                                                //  zVelocity  VelocityComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_14199 = (char*) buffer++;
                                            *_tmp_14199 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m013142\033[0m| Optional field z_velocity = " << *_tmp_14199;
                                            
                                            // Field:  type(VelocityComponent) name(x_velocity) extGroup(0)
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                // Optional fields bytemap
                                                
                                                // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013143\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                }
                                                
                                                float _tmp_14201 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                _tmp_14201 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14201);
                                                _tmp_14201 -= -16383;
                                                uint16_t* _tmp_14200 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14200 = static_cast<uint16_t>(_tmp_14201);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013144\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value);
                                                }
                                                
                                                float _tmp_14203 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                                _tmp_14203 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14203);
                                                _tmp_14203 -= 1;
                                                uint8_t* _tmp_14202 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14202 = static_cast<uint8_t>(_tmp_14203);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(VelocityComponent) name(y_velocity) extGroup(0)
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                // Optional fields bytemap
                                                
                                                // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013145\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                }
                                                
                                                float _tmp_14205 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                _tmp_14205 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14205);
                                                _tmp_14205 -= -16383;
                                                uint16_t* _tmp_14204 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14204 = static_cast<uint16_t>(_tmp_14205);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013146\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value);
                                                }
                                                
                                                float _tmp_14207 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                                _tmp_14207 *= 100.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14207);
                                                _tmp_14207 -= 1;
                                                uint8_t* _tmp_14206 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14206 = static_cast<uint8_t>(_tmp_14207);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                                // Field:  type(VelocityComponent) name(z_velocity) extGroup(0)
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(VelocityComponentValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013147\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                    }
                                                    
                                                    float _tmp_14209 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                    _tmp_14209 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14209);
                                                    _tmp_14209 -= -16383;
                                                    uint16_t* _tmp_14208 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14208 = static_cast<uint16_t>(_tmp_14209);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") less than (-16383); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (16383); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(SpeedConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013148\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_14211 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                    _tmp_14211 *= 100.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14211);
                                                    _tmp_14211 -= 1;
                                                    uint8_t* _tmp_14210 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_14210 = static_cast<uint8_t>(_tmp_14211);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else
                                    {
                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_362) << ") selected in CHOICE Velocity3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0]'; message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0) {
                                    // Field:  type(Acceleration3dWithConfidence) name(acceleration) extGroup(0)
                                    // Choice
                                       // #0  polarAcceleration   AccelerationPolarWithZ
                                       // #1  cartesianAcceleration   AccelerationCartesian
                                    uint8_t* _choice_363 = (uint8_t*) buffer;
                                    buffer++;
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration.size() != 0) {  // CHOICE 0  fieldType(Acceleration3dWithConfidence) 
                                        *_choice_363 = 0;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013149\033[0m| Choice selection: 0";
                                    
                                            // AccelerationPolarWithZ  SEQUENCE
                                                //  accelerationMagnitude AccelerationMagnitude     
                                                //  accelerationDirection CartesianAngle            
                                                //  zAcceleration         AccelerationComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_14212 = (char*) buffer++;
                                            *_tmp_14212 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m013150\033[0m| Optional field z_acceleration = " << *_tmp_14212;
                                            
                                            // Field:  type(AccelerationMagnitude) name(acceleration_magnitude) extGroup(0)
                                                // AccelerationMagnitude  SEQUENCE
                                                    //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                    //  accelerationConfidence     AccelerationConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationMagnitudeValue) name(acceleration_magnitude_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013151\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value);
                                                }
                                                
                                                float _tmp_14214 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                                _tmp_14214 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14214);
                                                uint8_t* _tmp_14213 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14213 = static_cast<uint8_t>(_tmp_14214);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(acceleration_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013152\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value);
                                                }
                                                
                                                float _tmp_14216 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                                _tmp_14216 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14216);
                                                uint8_t* _tmp_14215 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14215 = static_cast<uint8_t>(_tmp_14216);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(CartesianAngle) name(acceleration_direction) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013153\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                }
                                                
                                                float _tmp_14218 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                _tmp_14218 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14218);
                                                uint16_t* _tmp_14217 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14217 = static_cast<uint16_t>(_tmp_14218);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013154\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value);
                                                }
                                                
                                                float _tmp_14220 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                                _tmp_14220 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14220);
                                                _tmp_14220 -= 1;
                                                uint8_t* _tmp_14219 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14219 = static_cast<uint8_t>(_tmp_14220);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                                // Field:  type(AccelerationComponent) name(z_acceleration) extGroup(0)
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013155\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                    }
                                                    
                                                    float _tmp_14222 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                    _tmp_14222 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14222);
                                                    _tmp_14222 -= -160;
                                                    uint16_t* _tmp_14221 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14221 = static_cast<uint16_t>(_tmp_14222);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013156\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_14224 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                    _tmp_14224 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14224);
                                                    uint8_t* _tmp_14223 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_14223 = static_cast<uint8_t>(_tmp_14224);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration.size() != 0)  // CHOICE 1  fieldType(Acceleration3dWithConfidence) 
                                    {
                                        *_choice_363 = 1;  // Setting choice selection
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013157\033[0m| Choice selection: 1";
                                    
                                            // AccelerationCartesian  SEQUENCE
                                                //  xAcceleration AccelerationComponent     
                                                //  yAcceleration AccelerationComponent     
                                                //  zAcceleration AccelerationComponent   OPTIONAL  
                                            // Optional fields bytemap
                                            char* _tmp_14225 = (char*) buffer++;
                                            *_tmp_14225 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0 ? 1 : 0);
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m013158\033[0m| Optional field z_acceleration = " << *_tmp_14225;
                                            
                                            // Field:  type(AccelerationComponent) name(x_acceleration) extGroup(0)
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013159\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                }
                                                
                                                float _tmp_14227 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                _tmp_14227 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14227);
                                                _tmp_14227 -= -160;
                                                uint16_t* _tmp_14226 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14226 = static_cast<uint16_t>(_tmp_14227);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013160\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value);
                                                }
                                                
                                                float _tmp_14229 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                                _tmp_14229 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14229);
                                                uint8_t* _tmp_14228 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14228 = static_cast<uint8_t>(_tmp_14229);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            // Field:  type(AccelerationComponent) name(y_acceleration) extGroup(0)
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013161\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                }
                                                
                                                float _tmp_14231 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                _tmp_14231 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14231);
                                                _tmp_14231 -= -160;
                                                uint16_t* _tmp_14230 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14230 = static_cast<uint16_t>(_tmp_14231);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013162\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value);
                                                }
                                                
                                                float _tmp_14233 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                                _tmp_14233 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14233);
                                                uint8_t* _tmp_14232 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14232 = static_cast<uint8_t>(_tmp_14233);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                    return -1;
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                                // Field:  type(AccelerationComponent) name(z_acceleration) extGroup(0)
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    // Optional fields bytemap
                                                    
                                                    // Field:  type(AccelerationValue) name(value) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013163\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                    }
                                                    
                                                    float _tmp_14235 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                    _tmp_14235 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14235);
                                                    _tmp_14235 -= -160;
                                                    uint16_t* _tmp_14234 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14234 = static_cast<uint16_t>(_tmp_14235);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") less than (-160); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' (" << __aux64__ << ") exceeds max allowable (161); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    // Field:  type(AccelerationConfidence) name(confidence) extGroup(0)
                                                    // Real
                                                    
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013164\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value);
                                                    }
                                                    
                                                    float _tmp_14237 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                    _tmp_14237 *= 10.0;
                                                    __aux64__ = static_cast<uint64_t>(_tmp_14237);
                                                    uint8_t* _tmp_14236 = (uint8_t*) buffer; buffer += 1;
                                                    *_tmp_14236 = static_cast<uint8_t>(_tmp_14237);
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (102); message dropped.";
                                                        return -1;
                                                    }
                                            }
                                    
                                    }
                                    else
                                    {
                                        logger->warning() << "Wrong option (" << static_cast<int>(*_choice_363) << ") selected in CHOICE Acceleration3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0]'; message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0) {
                                    // Field:  type(EulerAnglesWithConfidence) name(angles) extGroup(0)
                                        // EulerAnglesWithConfidence  SEQUENCE
                                            //  zAngle     CartesianAngle     
                                            //  yAngle     CartesianAngle   OPTIONAL  
                                            //  xAngle     CartesianAngle   OPTIONAL  
                                        // Optional fields bytemap
                                        char* _tmp_14238 = (char*) buffer++;
                                        *_tmp_14238 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013165\033[0m| Optional field y_angle = " << *_tmp_14238;
                                        char* _tmp_14239 = (char*) buffer++;
                                        *_tmp_14239 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013166\033[0m| Optional field x_angle = " << *_tmp_14239;
                                        
                                        // Field:  type(CartesianAngle) name(z_angle) extGroup(0)
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            // Optional fields bytemap
                                            
                                            // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013167\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                            }
                                            
                                            float _tmp_14241 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                            _tmp_14241 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14241);
                                            uint16_t* _tmp_14240 = (uint16_t*) buffer; buffer += 2;
                                            *_tmp_14240 = static_cast<uint16_t>(_tmp_14241);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                            // Real
                                            
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013168\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value);
                                            }
                                            
                                            float _tmp_14243 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value;
                                            _tmp_14243 *= 10.0;
                                            __aux64__ = static_cast<uint64_t>(_tmp_14243);
                                            _tmp_14243 -= 1;
                                            uint8_t* _tmp_14242 = (uint8_t*) buffer; buffer += 1;
                                            *_tmp_14242 = static_cast<uint8_t>(_tmp_14243);
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                return -1;
                                            }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0) {
                                            // Field:  type(CartesianAngle) name(y_angle) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013169\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                }
                                                
                                                float _tmp_14245 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                _tmp_14245 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14245);
                                                uint16_t* _tmp_14244 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14244 = static_cast<uint16_t>(_tmp_14245);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013170\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value);
                                                }
                                                
                                                float _tmp_14247 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value;
                                                _tmp_14247 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14247);
                                                _tmp_14247 -= 1;
                                                uint8_t* _tmp_14246 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14246 = static_cast<uint8_t>(_tmp_14247);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0) {
                                            // Field:  type(CartesianAngle) name(x_angle) extGroup(0)
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                // Optional fields bytemap
                                                
                                                // Field:  type(CartesianAngleValue) name(value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013171\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                }
                                                
                                                float _tmp_14249 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                _tmp_14249 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14249);
                                                uint16_t* _tmp_14248 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14248 = static_cast<uint16_t>(_tmp_14249);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(AngleConfidence) name(confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013172\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value);
                                                }
                                                
                                                float _tmp_14251 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value;
                                                _tmp_14251 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14251);
                                                _tmp_14251 -= 1;
                                                uint8_t* _tmp_14250 = (uint8_t*) buffer; buffer += 1;
                                                *_tmp_14250 = static_cast<uint8_t>(_tmp_14251);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (127); message dropped.";
                                                    return -1;
                                                }
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0) {
                                    // Field:  type(CartesianAngularVelocityComponent) name(z_angular_velocity) extGroup(0)
                                        // CartesianAngularVelocityComponent  SEQUENCE
                                            //  value      CartesianAngularVelocityComponentValue     
                                            //  confidence AngularSpeedConfidence                     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(CartesianAngularVelocityComponentValue) name(value) extGroup(0)
                                        // Integer
                                        
                                        // INT16  min(-255) max(256) span(512) dataType(Int16)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013173\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                        }
                                        
                                        uint16_t* _tmp_14252 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value - -255;
                                        *_tmp_14252 = __aux64__;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < -255) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' (" << __aux64__ << ") less than (-255); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(AngularSpeedConfidence) name(confidence) extGroup(0)
                                        // Enumerated
                                        // INT32  min(0) max(7) span(8) dataType(Int32)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013174\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value);
                                        }
                                        
                                        uint8_t* _tmp_14253 = (uint8_t*)buffer;
                                        buffer += 1;
                                        *_tmp_14253 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value; 
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value; 
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 7) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (7); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0) {
                                    // Field:  type(LowerTriangularPositiveSemidefiniteMatrices) name(lower_triangular_correlation_matrices) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(4) span(4) ext(false)
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements.size();
                                    if(__aux64__ > 4) __aux64__ = 4;
                                    uint16_t* _tmp_14254 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_14254 = __aux64__ - 1;
                                    
                                    int __ifu = __aux64__;
                                    for(int u = 0; u < __ifu; u++) { 
                                        
                                            // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                                //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                                //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(MatrixIncludedComponents) name(components_included_inthe_matrix) extGroup(0)
                                            // BitString
                                            // BIT_STRING  min(13) max(13) span(1)
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m013176\033[0m| denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values.size());
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values.size() < 13) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values.size()) << " is less than allowable (13); message dropped.";
                                                return -1;
                                            }
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values.size() > 13) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values.size()) << " exceeds max allowable (13); message dropped.";
                                                return -1;
                                            }
                                            
                                            uint8_t* _ext_flag_6618 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.
                                            *_ext_flag_6618 = 0; 
                                            
                                            uint8_t* _tmp_14255 = (uint8_t*)buffer;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values.size();
                                            if(__aux64__ > 13) __aux64__ = 13;
                                            *_tmp_14255 = __aux64__ - 13;
                                            buffer += 1;
                                            
                                            int __ifv = __aux64__;
                                            for(int v = 0; v < __ifv; v++) {
                                                uint8_t* __b__ = (uint8_t*)buffer++;
                                                *__b__ = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].components_included_inthe_matrix.values[v]? 1: 0);
                                            }
                                            
                                            // Field:  type(LowerTriangularPositiveSemidefiniteMatrixColumns) name(matrix) extGroup(0)
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13) ext(true)
                                            uint8_t* _ext_flag_6619 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.
                                            *_ext_flag_6619 = 0; 
                                            
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements.size();
                                            if(__aux64__ > 13) __aux64__ = 13;
                                            uint16_t* _tmp_14256 = (uint16_t*)buffer;
                                            buffer += 2;
                                            *_tmp_14256 = __aux64__ - 1;
                                            
                                            int __ifw = __aux64__;
                                            for(int w = 0; w < __ifw; w++) { 
                                                
                                                // SequenceOf
                                                // Data Type UInt8
                                                // SEQUENCE_OF  min(1) max(13) span(13) ext(true)
                                                uint8_t* _ext_flag_6620 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].
                                                *_ext_flag_6620 = 0; 
                                                
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements.size();
                                                if(__aux64__ > 13) __aux64__ = 13;
                                                uint16_t* _tmp_14257 = (uint16_t*)buffer;
                                                buffer += 2;
                                                *_tmp_14257 = __aux64__ - 1;
                                                
                                                int __ifx = __aux64__;
                                                for(int x = 0; x < __ifx; x++) { 
                                                    
                                                    // Integer
                                                    
                                                    // INT8  min(-100) max(101) span(202) dataType(Int8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013179\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14258 = (uint8_t*) buffer++;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value - -100;
                                                    *_tmp_14258 = __aux64__;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < -100) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value' (" << __aux64__ << ") less than (-100); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[u].matrix.elements[w].elements[x].value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                }
                                                
                                            }
                                            
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_z) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013180\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value);
                                        }
                                        
                                        float _tmp_14260 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value;
                                        _tmp_14260 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14260);
                                        _tmp_14260 -= 1;
                                        uint8_t* _tmp_14259 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_14259 = static_cast<uint8_t>(_tmp_14260);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013181\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value);
                                        }
                                        
                                        float _tmp_14262 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value;
                                        _tmp_14262 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14262);
                                        _tmp_14262 -= 1;
                                        uint8_t* _tmp_14261 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_14261 = static_cast<uint8_t>(_tmp_14262);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_y) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013182\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value);
                                        }
                                        
                                        float _tmp_14264 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value;
                                        _tmp_14264 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14264);
                                        _tmp_14264 -= 1;
                                        uint8_t* _tmp_14263 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_14263 = static_cast<uint8_t>(_tmp_14264);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013183\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value);
                                        }
                                        
                                        float _tmp_14266 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value;
                                        _tmp_14266 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14266);
                                        _tmp_14266 -= 1;
                                        uint8_t* _tmp_14265 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_14265 = static_cast<uint8_t>(_tmp_14266);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0) {
                                    // Field:  type(ObjectDimension) name(object_dimension_x) extGroup(0)
                                        // ObjectDimension  SEQUENCE
                                            //  value      ObjectDimensionValue          
                                            //  confidence ObjectDimensionConfidence     
                                        // Optional fields bytemap
                                        
                                        // Field:  type(ObjectDimensionValue) name(value) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013184\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value);
                                        }
                                        
                                        float _tmp_14268 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value;
                                        _tmp_14268 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14268);
                                        _tmp_14268 -= 1;
                                        uint8_t* _tmp_14267 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_14267 = static_cast<uint8_t>(_tmp_14268);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 256) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' (" << __aux64__ << ") exceeds max allowable (256); message dropped.";
                                            return -1;
                                        }
                                        
                                        // Field:  type(ObjectDimensionConfidence) name(confidence) extGroup(0)
                                        // Real
                                        
                                        // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013185\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value);
                                        }
                                        
                                        float _tmp_14270 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value;
                                        _tmp_14270 *= 10.0;
                                        __aux64__ = static_cast<uint64_t>(_tmp_14270);
                                        _tmp_14270 -= 1;
                                        uint8_t* _tmp_14269 = (uint8_t*) buffer; buffer += 1;
                                        *_tmp_14269 = static_cast<uint8_t>(_tmp_14270);
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 32) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' (" << __aux64__ << ") exceeds max allowable (32); message dropped.";
                                            return -1;
                                        }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0) {
                                    // Field:  type(PerceivedObject_DeltaTimeMilliSecondSigned_objectAge) name(object_age) extGroup(0)
                                    // Real
                                    
                                    // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013186\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                    }
                                    
                                    float _tmp_14272 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                    _tmp_14272 *= 1000.0;
                                    __aux64__ = static_cast<uint64_t>(_tmp_14272);
                                    uint16_t* _tmp_14271 = (uint16_t*) buffer; buffer += 2;
                                    *_tmp_14271 = static_cast<uint16_t>(_tmp_14272);
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 2047) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' (" << __aux64__ << ") exceeds max allowable (2047); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0) {
                                    // Field:  type(ObjectPerceptionQuality) name(object_perception_quality) extGroup(0)
                                    // Integer
                                    
                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m013187\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value) << 
                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value);
                                    }
                                    
                                    uint8_t* _tmp_14273 = (uint8_t*) buffer++;
                                    *_tmp_14273 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value; 
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value;
                                    
                                    // MIN validator
                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                        return -1;
                                    }
                                    // MAX validator
                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                        return -1;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0) {
                                    // Field:  type(SequenceOfIdentifier1B) name(sensor_id_list) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(128) span(128) ext(true)
                                    uint8_t* _ext_flag_6630 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].
                                    *_ext_flag_6630 = 0; 
                                    
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements.size();
                                    if(__aux64__ > 128) __aux64__ = 128;
                                    uint16_t* _tmp_14274 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_14274 = __aux64__ - 1;
                                    
                                    int __ify = __aux64__;
                                    for(int y = 0; y < __ify; y++) { 
                                        
                                        // Integer
                                        
                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m013189\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value);
                                        }
                                        
                                        uint8_t* _tmp_14275 = (uint8_t*) buffer++;
                                        *_tmp_14275 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value; 
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value;
                                        
                                        // MIN validator
                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value' (" << __aux64__ << ") less than (0); message dropped.";
                                            return -1;
                                        }
                                        // MAX validator
                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[y].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                            return -1;
                                        }
                                        
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0) {
                                    // Field:  type(ObjectClassDescription) name(classification) extGroup(0)
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(8) span(8) ext(false)
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements.size();
                                    if(__aux64__ > 8) __aux64__ = 8;
                                    uint16_t* _tmp_14276 = (uint16_t*)buffer;
                                    buffer += 2;
                                    *_tmp_14276 = __aux64__ - 1;
                                    
                                    int __ifz = __aux64__;
                                    for(int z = 0; z < __ifz; z++) { 
                                        
                                            // ObjectClassWithConfidence  SEQUENCE
                                                //  objectClass ObjectClass         
                                                //  confidence  ConfidenceLevel     
                                            // Optional fields bytemap
                                            
                                            // Field:  type(ObjectClass) name(object_class) extGroup(0)
                                            // Choice
                                               // #0  vehicleSubClass   ObjectClass_TrafficParticipantType_vehicleSubClass
                                               // #1  vruSubClass   VruProfileAndSubprofile
                                               // #2  groupSubClass   VruClusterInformation
                                               // #3  otherSubClass   OtherSubClass
                                            uint8_t* _ext_flag_6632 = (uint8_t*) buffer; 
                                            buffer++;
                                            *_ext_flag_6632 = 0; 
                                            
                                            uint8_t* _choice_364 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class.size() != 0) {  // CHOICE 0  fieldType(ObjectClass) 
                                                *_choice_364 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013191\033[0m| Choice selection: 0";
                                            
                                                // Integer
                                                
                                                // UINT8  min(0) max(14) span(15) dataType(UInt8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013192\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value);
                                                }
                                                
                                                uint8_t* _tmp_14277 = (uint8_t*) buffer++;
                                                *_tmp_14277 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value; 
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vehicle_sub_class[0].value' (" << __aux64__ << ") exceeds max allowable (14); message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class.size() != 0)  // CHOICE 1  fieldType(ObjectClass) 
                                            {
                                                *_choice_364 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013193\033[0m| Choice selection: 1";
                                            
                                                // Choice
                                                   // #0  pedestrian   VruSubProfilePedestrian
                                                   // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist
                                                   // #2  motorcyclist   VruSubProfileMotorcyclist
                                                   // #3  animal   VruSubProfileAnimal
                                                uint8_t* _ext_flag_6634 = (uint8_t*) buffer; 
                                                buffer++;
                                                *_ext_flag_6634 = 0; 
                                                
                                                uint8_t* _choice_365 = (uint8_t*) buffer;
                                                buffer++;
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian.size() != 0) {  // CHOICE 0  fieldType(VruProfileAndSubprofile) 
                                                    *_choice_365 = 0;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013194\033[0m| Choice selection: 0";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013195\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14278 = (uint8_t*) buffer++;
                                                    *_tmp_14278 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].pedestrian[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.size() != 0)  // CHOICE 1  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_365 = 1;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013196\033[0m| Choice selection: 1";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013197\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14279 = (uint8_t*) buffer++;
                                                    *_tmp_14279 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist.size() != 0)  // CHOICE 2  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_365 = 2;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013198\033[0m| Choice selection: 2";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013199\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14280 = (uint8_t*) buffer++;
                                                    *_tmp_14280 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].motorcyclist[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal.size() != 0)  // CHOICE 3  fieldType(VruProfileAndSubprofile) 
                                                {
                                                    *_choice_365 = 3;  // Setting choice selection
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013200\033[0m| Choice selection: 3";
                                                
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(15) span(16) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013201\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14281 = (uint8_t*) buffer++;
                                                    *_tmp_14281 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 15) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0].animal[0].value' (" << __aux64__ << ") exceeds max allowable (15); message dropped.";
                                                        return -1;
                                                    }
                                                
                                                }
                                                else
                                                {
                                                    logger->warning() << "Wrong option (" << static_cast<int>(*_choice_365) << ") selected in CHOICE VruProfileAndSubprofile in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.vru_sub_class[0]'; message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class.size() != 0)  // CHOICE 2  fieldType(ObjectClass) 
                                            {
                                                *_choice_364 = 2;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013202\033[0m| Choice selection: 2";
                                            
                                                    // VruClusterInformation  SEQUENCE
                                                        //  clusterId               Identifier1B         OPTIONAL  
                                                        //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                        //  clusterCardinalitySize  CardinalNumber1B       
                                                        //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                        //  ...
                                                    uint8_t* _ext_flag_6639 = (uint8_t*) buffer++;  // Write extension flag for VruClusterInformation
                                                    *_ext_flag_6639 = 0;  
                                                    
                                                    // Optional fields bytemap
                                                    char* _tmp_14282 = (char*) buffer++;
                                                    *_tmp_14282 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013203\033[0m| Optional field cluster_id = " << *_tmp_14282;
                                                    char* _tmp_14283 = (char*) buffer++;
                                                    *_tmp_14283 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013204\033[0m| Optional field cluster_bounding_box_shape = " << *_tmp_14283;
                                                    char* _tmp_14284 = (char*) buffer++;
                                                    *_tmp_14284 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013205\033[0m| Optional field cluster_profiles = " << *_tmp_14284;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                        // Field:  type(Identifier1B) name(cluster_id) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m013206\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value);
                                                        }
                                                        
                                                        uint8_t* _tmp_14285 = (uint8_t*) buffer++;
                                                        *_tmp_14285 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                        // Field:  type(Shape) name(cluster_bounding_box_shape) extGroup(0)
                                                        // Choice
                                                           // #0  rectangular   RectangularShape
                                                           // #1  circular   CircularShape
                                                           // #2  polygonal   PolygonalShape
                                                           // #3  elliptical   EllipticalShape
                                                           // #4  radial   RadialShape
                                                           // #5  radialShapes   RadialShapes
                                                        uint8_t* _ext_flag_6641 = (uint8_t*) buffer; 
                                                        buffer++;
                                                        *_ext_flag_6641 = 0; 
                                                        
                                                        uint8_t* _choice_366 = (uint8_t*) buffer;
                                                        buffer++;
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.size() != 0) {  // CHOICE 0  fieldType(Shape) 
                                                            *_choice_366 = 0;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013207\033[0m| Choice selection: 0";
                                                        
                                                                // RectangularShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  semiLength          StandardLength12b       
                                                                    //  semiBreadth         StandardLength12b       
                                                                    //  orientation         CartesianAngleValue   OPTIONAL  
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_14286 = (char*) buffer++;
                                                                *_tmp_14286 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013208\033[0m| Optional field shape_reference_point = " << *_tmp_14286;
                                                                char* _tmp_14287 = (char*) buffer++;
                                                                *_tmp_14287 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013209\033[0m| Optional field orientation = " << *_tmp_14287;
                                                                char* _tmp_14288 = (char*) buffer++;
                                                                *_tmp_14288 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013210\033[0m| Optional field height = " << *_tmp_14288;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14289 = (char*) buffer++;
                                                                        *_tmp_14289 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013211\033[0m| Optional field z_coordinate = " << *_tmp_14289;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013212\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14291 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_14291 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14291);
                                                                        _tmp_14291 -= -32768;
                                                                        uint16_t* _tmp_14290 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14290 = static_cast<uint16_t>(_tmp_14291);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013213\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14293 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_14293 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14293);
                                                                        _tmp_14293 -= -32768;
                                                                        uint16_t* _tmp_14292 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14292 = static_cast<uint16_t>(_tmp_14293);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013214\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14295 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_14295 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14295);
                                                                            _tmp_14295 -= -32768;
                                                                            uint16_t* _tmp_14294 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14294 = static_cast<uint16_t>(_tmp_14295);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013215\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                }
                                                                
                                                                float _tmp_14297 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                _tmp_14297 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14297);
                                                                uint16_t* _tmp_14296 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14296 = static_cast<uint16_t>(_tmp_14297);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_breadth) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013216\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                }
                                                                
                                                                float _tmp_14299 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                _tmp_14299 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14299);
                                                                uint16_t* _tmp_14298 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14298 = static_cast<uint16_t>(_tmp_14299);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(orientation) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013217\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14301 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                    _tmp_14301 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14301);
                                                                    uint16_t* _tmp_14300 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14300 = static_cast<uint16_t>(_tmp_14301);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013218\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14303 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                    _tmp_14303 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14303);
                                                                    uint16_t* _tmp_14302 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14302 = static_cast<uint16_t>(_tmp_14303);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.size() != 0)  // CHOICE 1  fieldType(Shape) 
                                                        {
                                                            *_choice_366 = 1;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013219\033[0m| Choice selection: 1";
                                                        
                                                                // CircularShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  radius              StandardLength12b       
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_14304 = (char*) buffer++;
                                                                *_tmp_14304 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013220\033[0m| Optional field shape_reference_point = " << *_tmp_14304;
                                                                char* _tmp_14305 = (char*) buffer++;
                                                                *_tmp_14305 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013221\033[0m| Optional field height = " << *_tmp_14305;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14306 = (char*) buffer++;
                                                                        *_tmp_14306 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013222\033[0m| Optional field z_coordinate = " << *_tmp_14306;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013223\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14308 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_14308 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14308);
                                                                        _tmp_14308 -= -32768;
                                                                        uint16_t* _tmp_14307 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14307 = static_cast<uint16_t>(_tmp_14308);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013224\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14310 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_14310 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14310);
                                                                        _tmp_14310 -= -32768;
                                                                        uint16_t* _tmp_14309 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14309 = static_cast<uint16_t>(_tmp_14310);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013225\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14312 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_14312 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14312);
                                                                            _tmp_14312 -= -32768;
                                                                            uint16_t* _tmp_14311 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14311 = static_cast<uint16_t>(_tmp_14312);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(radius) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013226\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                }
                                                                
                                                                float _tmp_14314 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                _tmp_14314 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14314);
                                                                uint16_t* _tmp_14313 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14313 = static_cast<uint16_t>(_tmp_14314);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013227\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14316 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                    _tmp_14316 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14316);
                                                                    uint16_t* _tmp_14315 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14315 = static_cast<uint16_t>(_tmp_14316);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.size() != 0)  // CHOICE 2  fieldType(Shape) 
                                                        {
                                                            *_choice_366 = 2;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013228\033[0m| Choice selection: 2";
                                                        
                                                                // PolygonalShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                    //  polygon             SequenceOfCartesianPosition3d     
                                                                    //  height              StandardLength12b               OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_14317 = (char*) buffer++;
                                                                *_tmp_14317 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013229\033[0m| Optional field shape_reference_point = " << *_tmp_14317;
                                                                char* _tmp_14318 = (char*) buffer++;
                                                                *_tmp_14318 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013230\033[0m| Optional field height = " << *_tmp_14318;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14319 = (char*) buffer++;
                                                                        *_tmp_14319 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013231\033[0m| Optional field z_coordinate = " << *_tmp_14319;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013232\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14321 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_14321 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14321);
                                                                        _tmp_14321 -= -32768;
                                                                        uint16_t* _tmp_14320 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14320 = static_cast<uint16_t>(_tmp_14321);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013233\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14323 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_14323 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14323);
                                                                        _tmp_14323 -= -32768;
                                                                        uint16_t* _tmp_14322 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14322 = static_cast<uint16_t>(_tmp_14323);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013234\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14325 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_14325 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14325);
                                                                            _tmp_14325 -= -32768;
                                                                            uint16_t* _tmp_14324 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14324 = static_cast<uint16_t>(_tmp_14325);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(SequenceOfCartesianPosition3d) name(polygon) extGroup(0)
                                                                // SequenceOf
                                                                // Data Type UInt8
                                                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                                                uint8_t* _ext_flag_6657 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                                *_ext_flag_6657 = 0; 
                                                                
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.size();
                                                                if(__aux64__ > 16) __aux64__ = 16;
                                                                uint16_t* _tmp_14326 = (uint16_t*)buffer;
                                                                buffer += 2;
                                                                *_tmp_14326 = __aux64__ - 1;
                                                                
                                                                int __ifa = __aux64__;
                                                                for(int a = 0; a < __ifa; a++) { 
                                                                    
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14327 = (char*) buffer++;
                                                                        *_tmp_14327 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013236\033[0m| Optional field z_coordinate = " << *_tmp_14327;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013237\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14329 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].x_coordinate.value;
                                                                        _tmp_14329 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14329);
                                                                        _tmp_14329 -= -32768;
                                                                        uint16_t* _tmp_14328 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14328 = static_cast<uint16_t>(_tmp_14329);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013238\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14331 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].y_coordinate.value;
                                                                        _tmp_14331 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14331);
                                                                        _tmp_14331 -= -32768;
                                                                        uint16_t* _tmp_14330 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14330 = static_cast<uint16_t>(_tmp_14331);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013239\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14333 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate[0].value;
                                                                            _tmp_14333 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14333);
                                                                            _tmp_14333 -= -32768;
                                                                            uint16_t* _tmp_14332 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14332 = static_cast<uint16_t>(_tmp_14333);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[a].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013240\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14335 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                    _tmp_14335 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14335);
                                                                    uint16_t* _tmp_14334 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14334 = static_cast<uint16_t>(_tmp_14335);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.size() != 0)  // CHOICE 3  fieldType(Shape) 
                                                        {
                                                            *_choice_366 = 3;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013241\033[0m| Choice selection: 3";
                                                        
                                                                // EllipticalShape  SEQUENCE
                                                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                    //  semiMajorAxisLength StandardLength12b       
                                                                    //  semiMinorAxisLength StandardLength12b       
                                                                    //  orientation         CartesianAngleValue   OPTIONAL  
                                                                    //  height              StandardLength12b     OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_14336 = (char*) buffer++;
                                                                *_tmp_14336 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013242\033[0m| Optional field shape_reference_point = " << *_tmp_14336;
                                                                char* _tmp_14337 = (char*) buffer++;
                                                                *_tmp_14337 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013243\033[0m| Optional field orientation = " << *_tmp_14337;
                                                                char* _tmp_14338 = (char*) buffer++;
                                                                *_tmp_14338 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013244\033[0m| Optional field height = " << *_tmp_14338;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14339 = (char*) buffer++;
                                                                        *_tmp_14339 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013245\033[0m| Optional field z_coordinate = " << *_tmp_14339;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013246\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14341 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_14341 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14341);
                                                                        _tmp_14341 -= -32768;
                                                                        uint16_t* _tmp_14340 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14340 = static_cast<uint16_t>(_tmp_14341);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013247\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14343 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_14343 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14343);
                                                                        _tmp_14343 -= -32768;
                                                                        uint16_t* _tmp_14342 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14342 = static_cast<uint16_t>(_tmp_14343);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013248\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14345 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_14345 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14345);
                                                                            _tmp_14345 -= -32768;
                                                                            uint16_t* _tmp_14344 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14344 = static_cast<uint16_t>(_tmp_14345);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_major_axis_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013249\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                }
                                                                
                                                                float _tmp_14347 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                _tmp_14347 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14347);
                                                                uint16_t* _tmp_14346 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14346 = static_cast<uint16_t>(_tmp_14347);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(semi_minor_axis_length) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013250\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                }
                                                                
                                                                float _tmp_14349 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                _tmp_14349 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14349);
                                                                uint16_t* _tmp_14348 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14348 = static_cast<uint16_t>(_tmp_14349);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(orientation) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013251\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14351 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                    _tmp_14351 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14351);
                                                                    uint16_t* _tmp_14350 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14350 = static_cast<uint16_t>(_tmp_14351);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                    // Field:  type(StandardLength12b) name(height) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013252\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14353 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                    _tmp_14353 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14353);
                                                                    uint16_t* _tmp_14352 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14352 = static_cast<uint16_t>(_tmp_14353);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.size() != 0)  // CHOICE 4  fieldType(Shape) 
                                                        {
                                                            *_choice_366 = 4;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013253\033[0m| Choice selection: 4";
                                                        
                                                                // RadialShape  SEQUENCE
                                                                    //  shapeReferencePoint         CartesianPosition3d   OPTIONAL  
                                                                    //  range                       StandardLength12b       
                                                                    //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                    //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                    //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                    //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                // Optional fields bytemap
                                                                char* _tmp_14354 = (char*) buffer++;
                                                                *_tmp_14354 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013254\033[0m| Optional field shape_reference_point = " << *_tmp_14354;
                                                                char* _tmp_14355 = (char*) buffer++;
                                                                *_tmp_14355 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013255\033[0m| Optional field vertical_opening_angle_start = " << *_tmp_14355;
                                                                char* _tmp_14356 = (char*) buffer++;
                                                                *_tmp_14356 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013256\033[0m| Optional field vertical_opening_angle_end = " << *_tmp_14356;
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                    // Field:  type(CartesianPosition3d) name(shape_reference_point) extGroup(0)
                                                                        // CartesianPosition3d  SEQUENCE
                                                                            //  xCoordinate CartesianCoordinate     
                                                                            //  yCoordinate CartesianCoordinate     
                                                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14357 = (char*) buffer++;
                                                                        *_tmp_14357 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013257\033[0m| Optional field z_coordinate = " << *_tmp_14357;
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(x_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013258\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14359 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                        _tmp_14359 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14359);
                                                                        _tmp_14359 -= -32768;
                                                                        uint16_t* _tmp_14358 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14358 = static_cast<uint16_t>(_tmp_14359);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianCoordinate) name(y_coordinate) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013259\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                        }
                                                                        
                                                                        float _tmp_14361 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                        _tmp_14361 *= 100.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14361);
                                                                        _tmp_14361 -= -32768;
                                                                        uint16_t* _tmp_14360 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14360 = static_cast<uint16_t>(_tmp_14361);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                            // Field:  type(CartesianCoordinate) name(z_coordinate) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013260\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14363 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                            _tmp_14363 *= 100.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14363);
                                                                            _tmp_14363 -= -32768;
                                                                            uint16_t* _tmp_14362 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14362 = static_cast<uint16_t>(_tmp_14363);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-32768); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                }
                                                                
                                                                // Field:  type(StandardLength12b) name(range) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013261\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                }
                                                                
                                                                float _tmp_14365 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                _tmp_14365 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14365);
                                                                uint16_t* _tmp_14364 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14364 = static_cast<uint16_t>(_tmp_14365);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_start) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013262\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                }
                                                                
                                                                float _tmp_14367 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                _tmp_14367 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14367);
                                                                uint16_t* _tmp_14366 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14366 = static_cast<uint16_t>(_tmp_14367);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_end) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013263\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                }
                                                                
                                                                float _tmp_14369 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                _tmp_14369 *= 10.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14369);
                                                                uint16_t* _tmp_14368 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14368 = static_cast<uint16_t>(_tmp_14369);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(vertical_opening_angle_start) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013264\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14371 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                    _tmp_14371 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14371);
                                                                    uint16_t* _tmp_14370 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14370 = static_cast<uint16_t>(_tmp_14371);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                    // Field:  type(CartesianAngleValue) name(vertical_opening_angle_end) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013265\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14373 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                    _tmp_14373 *= 10.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14373);
                                                                    uint16_t* _tmp_14372 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14372 = static_cast<uint16_t>(_tmp_14373);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                        
                                                        }
                                                        else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.size() != 0)  // CHOICE 5  fieldType(Shape) 
                                                        {
                                                            *_choice_366 = 5;  // Setting choice selection
                                                        
                                                            if(debug)
                                                                logger->debug() << "|\033[38;5;94m013266\033[0m| Choice selection: 5";
                                                        
                                                                // RadialShapes  SEQUENCE
                                                                    //  refPointId       Identifier1B                 
                                                                    //  xCoordinate      CartesianCoordinateSmall     
                                                                    //  yCoordinate      CartesianCoordinateSmall     
                                                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                    //  radialShapesList RadialShapesList             
                                                                // Optional fields bytemap
                                                                char* _tmp_14374 = (char*) buffer++;
                                                                *_tmp_14374 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0 ? 1 : 0);
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m013267\033[0m| Optional field z_coordinate = " << *_tmp_14374;
                                                                
                                                                // Field:  type(Identifier1B) name(ref_point_id) extGroup(0)
                                                                // Integer
                                                                
                                                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013268\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                                }
                                                                
                                                                uint8_t* _tmp_14375 = (uint8_t*) buffer++;
                                                                *_tmp_14375 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value; 
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value;
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianCoordinateSmall) name(x_coordinate) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013269\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                }
                                                                
                                                                float _tmp_14377 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                _tmp_14377 *= 100.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14377);
                                                                _tmp_14377 -= -3094;
                                                                uint16_t* _tmp_14376 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14376 = static_cast<uint16_t>(_tmp_14377);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                // Field:  type(CartesianCoordinateSmall) name(y_coordinate) extGroup(0)
                                                                // Real
                                                                
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m013270\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << 
                                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                }
                                                                
                                                                float _tmp_14379 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                _tmp_14379 *= 100.0;
                                                                __aux64__ = static_cast<uint64_t>(_tmp_14379);
                                                                _tmp_14379 -= -3094;
                                                                uint16_t* _tmp_14378 = (uint16_t*) buffer; buffer += 2;
                                                                *_tmp_14378 = static_cast<uint16_t>(_tmp_14379);
                                                                
                                                                // MIN validator
                                                                if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                    return -1;
                                                                }
                                                                // MAX validator
                                                                if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                    return -1;
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                    // Field:  type(CartesianCoordinateSmall) name(z_coordinate) extGroup(0)
                                                                    // Real
                                                                    
                                                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m013271\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                    }
                                                                    
                                                                    float _tmp_14381 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                    _tmp_14381 *= 100.0;
                                                                    __aux64__ = static_cast<uint64_t>(_tmp_14381);
                                                                    _tmp_14381 -= -3094;
                                                                    uint16_t* _tmp_14380 = (uint16_t*) buffer; buffer += 2;
                                                                    *_tmp_14380 = static_cast<uint16_t>(_tmp_14381);
                                                                    
                                                                    // MIN validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' (" << __aux64__ << ") less than (-3094); message dropped.";
                                                                        return -1;
                                                                    }
                                                                    // MAX validator
                                                                    if (VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' (" << __aux64__ << ") exceeds max allowable (1001); message dropped.";
                                                                        return -1;
                                                                    }
                                                                }
                                                                
                                                                // Field:  type(RadialShapesList) name(radial_shapes_list) extGroup(0)
                                                                // SequenceOf
                                                                // Data Type UInt8
                                                                // SEQUENCE_OF  min(1) max(16) span(16) ext(true)
                                                                uint8_t* _ext_flag_6681 = (uint8_t*) buffer++; // Write extension flag for ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                                *_ext_flag_6681 = 0; 
                                                                
                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.size();
                                                                if(__aux64__ > 16) __aux64__ = 16;
                                                                uint16_t* _tmp_14382 = (uint16_t*)buffer;
                                                                buffer += 2;
                                                                *_tmp_14382 = __aux64__ - 1;
                                                                
                                                                int __ifb = __aux64__;
                                                                for(int b = 0; b < __ifb; b++) { 
                                                                    
                                                                        // RadialShapeDetails  SEQUENCE
                                                                            //  range                       StandardLength12b       
                                                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                        // Optional fields bytemap
                                                                        char* _tmp_14383 = (char*) buffer++;
                                                                        *_tmp_14383 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013273\033[0m| Optional field vertical_opening_angle_start = " << *_tmp_14383;
                                                                        char* _tmp_14384 = (char*) buffer++;
                                                                        *_tmp_14384 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end.size() != 0 ? 1 : 0);
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m013274\033[0m| Optional field vertical_opening_angle_end = " << *_tmp_14384;
                                                                        
                                                                        // Field:  type(StandardLength12b) name(range) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013275\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].range.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].range.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].range.value;
                                                                        }
                                                                        
                                                                        float _tmp_14386 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].range.value;
                                                                        _tmp_14386 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14386);
                                                                        uint16_t* _tmp_14385 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14385 = static_cast<uint16_t>(_tmp_14386);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].range.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].range.value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_start) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013276\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value;
                                                                        }
                                                                        
                                                                        float _tmp_14388 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value;
                                                                        _tmp_14388 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14388);
                                                                        uint16_t* _tmp_14387 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14387 = static_cast<uint16_t>(_tmp_14388);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_start.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        // Field:  type(CartesianAngleValue) name(horizontal_opening_angle_end) extGroup(0)
                                                                        // Real
                                                                        
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m013277\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value) << 
                                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value;
                                                                        }
                                                                        
                                                                        float _tmp_14390 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value;
                                                                        _tmp_14390 *= 10.0;
                                                                        __aux64__ = static_cast<uint64_t>(_tmp_14390);
                                                                        uint16_t* _tmp_14389 = (uint16_t*) buffer; buffer += 2;
                                                                        *_tmp_14389 = static_cast<uint16_t>(_tmp_14390);
                                                                        
                                                                        // MIN validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        // MAX validator
                                                                        if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].horizontal_opening_angle_end.value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                            return -1;
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start.size() != 0) {
                                                                            // Field:  type(CartesianAngleValue) name(vertical_opening_angle_start) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013278\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14392 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value;
                                                                            _tmp_14392 *= 10.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14392);
                                                                            uint16_t* _tmp_14391 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14391 = static_cast<uint16_t>(_tmp_14392);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_start[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end.size() != 0) {
                                                                            // Field:  type(CartesianAngleValue) name(vertical_opening_angle_end) extGroup(0)
                                                                            // Real
                                                                            
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            if(debug) {
                                                                                logger->debug() << "|\033[38;5;94m013279\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value) << 
                                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value;
                                                                            }
                                                                            
                                                                            float _tmp_14394 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value;
                                                                            _tmp_14394 *= 10.0;
                                                                            __aux64__ = static_cast<uint64_t>(_tmp_14394);
                                                                            uint16_t* _tmp_14393 = (uint16_t*) buffer; buffer += 2;
                                                                            *_tmp_14393 = static_cast<uint16_t>(_tmp_14394);
                                                                            
                                                                            // MIN validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                                                return -1;
                                                                            }
                                                                            // MAX validator
                                                                            if (VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[b].vertical_opening_angle_end[0].value' (" << __aux64__ << ") exceeds max allowable (3601); message dropped.";
                                                                                return -1;
                                                                            }
                                                                        }
                                                                        
                                                                }
                                                        
                                                        }
                                                        else
                                                        {
                                                            logger->warning() << "Wrong option (" << static_cast<int>(*_choice_366) << ") selected in CHOICE Shape in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_bounding_box_shape[0]'; message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(CardinalNumber1B) name(cluster_cardinality_size) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013280\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                    }
                                                    
                                                    uint8_t* _tmp_14395 = (uint8_t*) buffer++;
                                                    *_tmp_14395 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_cardinality_size.value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                        return -1;
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                        // Field:  type(VruClusterProfiles) name(cluster_profiles) extGroup(0)
                                                        // BitString
                                                        // BIT_STRING  min(4) max(4) span(1)
                                                        if(debug)
                                                            logger->debug() << "|\033[38;5;94m013281\033[0m| denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values.size());
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values.size() < 4) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values.size()) << " is less than allowable (4); message dropped.";
                                                            return -1;
                                                        }
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values.size() > 4) {
                                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].value' " << (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values.size()) << " exceeds max allowable (4); message dropped.";
                                                            return -1;
                                                        }
                                                        
                                                        uint8_t* _tmp_14396 = (uint8_t*)buffer;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values.size();
                                                        if(__aux64__ > 4) __aux64__ = 4;
                                                        *_tmp_14396 = __aux64__ - 4;
                                                        buffer += 1;
                                                        
                                                        int __ifc = __aux64__;
                                                        for(int c = 0; c < __ifc; c++) {
                                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                                            *__b__ = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.group_sub_class[0].cluster_profiles[0].values[c]? 1: 0);
                                                        }
                                                    }
                                                    
                                                    if(*_ext_flag_6639) {
                                                    }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class.size() != 0)  // CHOICE 3  fieldType(ObjectClass) 
                                            {
                                                *_choice_364 = 3;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013282\033[0m| Choice selection: 3";
                                            
                                                // Integer
                                                
                                                // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013283\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value);
                                                }
                                                
                                                uint8_t* _tmp_14398 = (uint8_t*) buffer++;
                                                *_tmp_14398 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value; 
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value;
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class.other_sub_class[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                    return -1;
                                                }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_364) << ") selected in CHOICE ObjectClass in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].object_class'; message dropped.";
                                                return -1;
                                            }
                                            
                                            // Field:  type(ConfidenceLevel) name(confidence) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(1) max(101) span(101) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013284\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value);
                                            }
                                            
                                            uint8_t* _tmp_14399 = (uint8_t*) buffer++;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value - 1;
                                            *_tmp_14399 = __aux64__;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value' (" << __aux64__ << ") less than (1); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 101) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[z].confidence.value' (" << __aux64__ << ") exceeds max allowable (101); message dropped.";
                                                return -1;
                                            }
                                            
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0) {
                                    // Field:  type(MapPosition) name(map_position) extGroup(0)
                                        // MapPosition  SEQUENCE
                                            //  mapReference             MapReference               OPTIONAL  
                                            //  laneId                   Identifier1B               OPTIONAL  
                                            //  connectionId             Identifier1B               OPTIONAL  
                                            //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_6690 = (uint8_t*) buffer++;  // Write extension flag for MapPosition
                                        *_ext_flag_6690 = 0;  
                                        
                                        // Optional fields bytemap
                                        char* _tmp_14400 = (char*) buffer++;
                                        *_tmp_14400 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013285\033[0m| Optional field map_reference = " << *_tmp_14400;
                                        char* _tmp_14401 = (char*) buffer++;
                                        *_tmp_14401 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013286\033[0m| Optional field lane_id = " << *_tmp_14401;
                                        char* _tmp_14402 = (char*) buffer++;
                                        *_tmp_14402 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013287\033[0m| Optional field connection_id = " << *_tmp_14402;
                                        char* _tmp_14403 = (char*) buffer++;
                                        *_tmp_14403 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0 ? 1 : 0);
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m013288\033[0m| Optional field longitudinal_lane_position = " << *_tmp_14403;
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0) {
                                            // Field:  type(MapReference) name(map_reference) extGroup(0)
                                            // Choice
                                               // #0  roadsegment   RoadSegmentReferenceId
                                               // #1  intersection   IntersectionReferenceId
                                            uint8_t* _choice_367 = (uint8_t*) buffer;
                                            buffer++;
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment.size() != 0) {  // CHOICE 0  fieldType(MapReference) 
                                                *_choice_367 = 0;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013289\033[0m| Choice selection: 0";
                                            
                                                    // RoadSegmentReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_14404 = (char*) buffer++;
                                                    *_tmp_14404 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013290\033[0m| Optional field region = " << *_tmp_14404;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m013291\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_14405 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_14405 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013292\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_14406 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14406 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection.size() != 0)  // CHOICE 1  fieldType(MapReference) 
                                            {
                                                *_choice_367 = 1;  // Setting choice selection
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m013293\033[0m| Choice selection: 1";
                                            
                                                    // IntersectionReferenceId  SEQUENCE
                                                        //  region     Identifier2B   OPTIONAL  
                                                        //  id         Identifier2B     
                                                    // Optional fields bytemap
                                                    char* _tmp_14407 = (char*) buffer++;
                                                    *_tmp_14407 = (ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0 ? 1 : 0);
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m013294\033[0m| Optional field region = " << *_tmp_14407;
                                                    
                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                        // Field:  type(Identifier2B) name(region) extGroup(0)
                                                        // Integer
                                                        
                                                        // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                        if(debug) {
                                                            logger->debug() << "|\033[38;5;94m013295\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                        }
                                                        
                                                        uint16_t* _tmp_14408 = (uint16_t*) buffer; buffer += 2;
                                                        *_tmp_14408 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value; 
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                        
                                                        // MIN validator
                                                        if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                            return -1;
                                                        }
                                                        // MAX validator
                                                        if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                            return -1;
                                                        }
                                                    }
                                                    
                                                    // Field:  type(Identifier2B) name(id) extGroup(0)
                                                    // Integer
                                                    
                                                    // UINT16  min(0) max(65535) span(65536) dataType(UInt16)
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m013296\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                    }
                                                    
                                                    uint16_t* _tmp_14409 = (uint16_t*) buffer; buffer += 2;
                                                    *_tmp_14409 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value; 
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                    
                                                    // MIN validator
                                                    if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                        return -1;
                                                    }
                                                    // MAX validator
                                                    if (VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' (" << __aux64__ << ") exceeds max allowable (65535); message dropped.";
                                                        return -1;
                                                    }
                                            
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(*_choice_367) << ") selected in CHOICE MapReference in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0]'; message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(lane_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013297\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_14410 = (uint8_t*) buffer++;
                                            *_tmp_14410 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value; 
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0) {
                                            // Field:  type(Identifier1B) name(connection_id) extGroup(0)
                                            // Integer
                                            
                                            // UINT8  min(0) max(255) span(256) dataType(UInt8)
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m013298\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value);
                                            }
                                            
                                            uint8_t* _tmp_14411 = (uint8_t*) buffer++;
                                            *_tmp_14411 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value; 
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value;
                                            
                                            // MIN validator
                                            if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                                return -1;
                                            }
                                            // MAX validator
                                            if (VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' (" << __aux64__ << ") exceeds max allowable (255); message dropped.";
                                                return -1;
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0) {
                                            // Field:  type(LongitudinalLanePosition) name(longitudinal_lane_position) extGroup(0)
                                                // LongitudinalLanePosition  SEQUENCE
                                                    //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                    //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                // Optional fields bytemap
                                                
                                                // Field:  type(LongitudinalLanePositionValue) name(longitudinal_lane_position_value) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013299\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                }
                                                
                                                float _tmp_14413 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                _tmp_14413 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14413);
                                                uint16_t* _tmp_14412 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14412 = static_cast<uint16_t>(_tmp_14413);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' (" << __aux64__ << ") exceeds max allowable (32767); message dropped.";
                                                    return -1;
                                                }
                                                
                                                // Field:  type(LongitudinalLanePositionConfidence) name(longitudinal_lane_position_confidence) extGroup(0)
                                                // Real
                                                
                                                // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m013300\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                }
                                                
                                                float _tmp_14415 = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                _tmp_14415 *= 10.0;
                                                __aux64__ = static_cast<uint64_t>(_tmp_14415);
                                                uint16_t* _tmp_14414 = (uint16_t*) buffer; buffer += 2;
                                                *_tmp_14414 = static_cast<uint16_t>(_tmp_14415);
                                                
                                                // MIN validator
                                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") less than (0); message dropped.";
                                                    return -1;
                                                }
                                                // MAX validator
                                                if (VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' (" << __aux64__ << ") exceeds max allowable (1023); message dropped.";
                                                    return -1;
                                                }
                                        }
                                        
                                        if(*_ext_flag_6690) {
                                        }
                                }
                                
                                if(*_ext_flag_6575) {
                                }
                            
                            if(ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0) {
                                // Field:  type(StationId) name(object_station_id) extGroup(0)
                                // Integer
                                
                                // UINT32  min(0) max(4294967295) span(4294967296) dataType(UInt32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013301\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].object_station_id[0].value) << 
                                                 " denm.alacarte[0].precrash[0].object_station_id[0].value: " << ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                }
                                
                                uint32_t* _tmp_14418 = (uint32_t*) buffer; buffer += 4;
                                *_tmp_14418 = ros->denm.alacarte[0].precrash[0].object_station_id[0].value; 
                                __aux64__ = ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' (" << __aux64__ << ") exceeds max allowable (4294967295); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0) {
                                // Field:  type(DeltaTimeMilliSecondPositive) name(time_to_collision) extGroup(0)
                                // Real
                                
                                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013302\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].time_to_collision[0].value) << 
                                                 " denm.alacarte[0].precrash[0].time_to_collision[0].value: " << ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                }
                                
                                float _tmp_14420 = ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                _tmp_14420 *= 1000.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_14420);
                                _tmp_14420 -= 1;
                                uint16_t* _tmp_14419 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_14419 = static_cast<uint16_t>(_tmp_14420);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' (" << __aux64__ << ") less than (1); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 10000) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' (" << __aux64__ << ") exceeds max allowable (10000); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].impact_section.size() != 0) {
                                // Field:  type(ObjectFace) name(impact_section) extGroup(0)
                                // Enumerated
                                // INT32  min(0) max(5) span(6) dataType(Int32)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013303\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].impact_section[0].value) << 
                                                 " denm.alacarte[0].precrash[0].impact_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].impact_section[0].value);
                                }
                                
                                uint8_t* _tmp_14421 = (uint8_t*)buffer;
                                buffer += 1;
                                *_tmp_14421 = ros->denm.alacarte[0].precrash[0].impact_section[0].value; 
                                __aux64__ = ros->denm.alacarte[0].precrash[0].impact_section[0].value; 
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 5) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' (" << __aux64__ << ") exceeds max allowable (5); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0) {
                                // Field:  type(StandardLength12b) name(estimated_braking_distance) extGroup(0)
                                // Real
                                
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m013304\033[0m| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value) << 
                                                 " denm.alacarte[0].precrash[0].estimated_braking_distance[0].value: " << ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                }
                                
                                float _tmp_14423 = ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                _tmp_14423 *= 10.0;
                                __aux64__ = static_cast<uint64_t>(_tmp_14423);
                                uint16_t* _tmp_14422 = (uint16_t*) buffer; buffer += 2;
                                *_tmp_14422 = static_cast<uint16_t>(_tmp_14423);
                                
                                // MIN validator
                                if (VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' (" << __aux64__ << ") less than (0); message dropped.";
                                    return -1;
                                }
                                // MAX validator
                                if (VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' (" << __aux64__ << ") exceeds max allowable (4095); message dropped.";
                                    return -1;
                                }
                            }
                            
                            if(*_ext_flag_6574) {
                            }
                    }
                    
                    *_tmp_14086_openType = buffer - _tmp_14087_start;  // OpenType length
                }
        }
    
	
            return buffer - start;
        }
    } 
}