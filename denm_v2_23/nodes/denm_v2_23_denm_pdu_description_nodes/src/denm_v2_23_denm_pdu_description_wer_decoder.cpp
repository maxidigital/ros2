/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:denm_v2_23:1.0
 * 
 * Module: DENM_PDU_Description {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) denmPduRelease2(103831) major-version-2(2) minor-version-2(2)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <denm_v2_23_denm_pdu_description_wer_decoder.h>


/**
 *
 */
namespace wind
{
    namespace decoder_denm_v2_23_denm_pdu_description
    {        
        
        #if WIND_ROS_VERSION == 1
          bool WerDecoder::decode(denm_v2_23_denm_pdu_description_msgs::DENM* ros, const uint8_t *buffer)
        #else
          bool WerDecoder::decode(denm_v2_23_denm_pdu_description_msgs::msg::DENM* ros, const uint8_t *buffer)
        #endif
        {
            const uint8_t *start = buffer;
            int64_t __aux64__;
	
    // DENM  SEQUENCE
        //  header     ItsPduHeader     
        //  denm       DenmPayload      
    
    // Field name: hheader
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        
        // Field name: protocol_version
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_1 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_1;
        ros->hheader.protocol_version.value = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000000") << "| " << tools::getTypeName(ros->hheader.protocol_version.value) << 
                         " hheader.protocol_version.value: " << static_cast<int>(ros->hheader.protocol_version.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->error() << "Error: Value in 'hheader.protocol_version.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->error() << "Error: Value in 'hheader.protocol_version.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: message_id
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_2 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_2;
        ros->hheader.message_id.value = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000001") << "| " << tools::getTypeName(ros->hheader.message_id.value) << 
                         " hheader.message_id.value: " << static_cast<int>(ros->hheader.message_id.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->error() << "Error: Value in 'hheader.message_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->error() << "Error: Value in 'hheader.message_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: station_id
        // Integer
        // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
        uint32_t* _tmp_3 = (uint32_t*) buffer; buffer += 4;
        __aux64__ = *_tmp_3;
        ros->hheader.station_id.value = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000002") << "| " << tools::getTypeName(ros->hheader.station_id.value) << 
                         " hheader.station_id.value: " << ros->hheader.station_id.value;
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->error() << "Error: Value in 'hheader.station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->error() << "Error: Value in 'hheader.station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
            return false;
        }
    
    // Field name: denm
        // DenmPayload  SEQUENCE
            //  management ManagementContainer     
            //  situation  SituationContainer    OPTIONAL  
            //  location   LocationContainer     OPTIONAL  
            //  alacarte   AlacarteContainer     OPTIONAL  
        if(*(buffer++)) { 
            denm_v2_23_denm_pdu_description_msgs::msg::SituationContainer _tmp_4;
            ros->denm.situation.push_back(_tmp_4);
        
            if(debug)
                logger->print() << "|" << tools::brown("000003") << "| ros->denm.situation " << tools::green("present");
        }
        if(*(buffer++)) { 
            denm_v2_23_denm_pdu_description_msgs::msg::LocationContainer _tmp_5;
            ros->denm.location.push_back(_tmp_5);
        
            if(debug)
                logger->print() << "|" << tools::brown("000004") << "| ros->denm.location " << tools::green("present");
        }
        if(*(buffer++)) { 
            denm_v2_23_denm_pdu_description_msgs::msg::AlacarteContainer _tmp_6;
            ros->denm.alacarte.push_back(_tmp_6);
        
            if(debug)
                logger->print() << "|" << tools::brown("000005") << "| ros->denm.alacarte " << tools::green("present");
        }
        
        // Field name: management
            // ManagementContainer  SEQUENCE
                //  actionId             ActionId                         
                //  detectionTime        TimestampIts                     
                //  referenceTime        TimestampIts                     
                //  termination          Termination                    OPTIONAL  
                //  eventPosition        ReferencePosition                
                //  awarenessDistance    StandardLength3b               OPTIONAL  
                //  trafficDirection     TrafficDirection               OPTIONAL  
                //  validityDuration     DeltaTimeSecond                  
                //  transmissionInterval DeltaTimeMilliSecondPositive   OPTIONAL  
                //  stationType          StationType                      
                //  ...
            uint8_t* _ext_flag_1 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.management.
            
            if(debug) {
                logger->print() << "|" << tools::brown("000006") << "| Reading ext flag from ros->denm.management.: " << int(*_ext_flag_1);
            }
            
            if(*(buffer++)) { 
                denm_v2_23_denm_pdu_description_msgs::msg::Termination _tmp_7;
                ros->denm.management.termination.push_back(_tmp_7);
            
                if(debug)
                    logger->print() << "|" << tools::brown("000007") << "| ros->denm.management.termination " << tools::green("present");
            }
            if(*(buffer++)) { 
                its_container_v4_etsi_its_cdd_msgs::msg::StandardLength3b _tmp_8;
                ros->denm.management.awareness_distance.push_back(_tmp_8);
            
                if(debug)
                    logger->print() << "|" << tools::brown("000008") << "| ros->denm.management.awareness_distance " << tools::green("present");
            }
            if(*(buffer++)) { 
                its_container_v4_etsi_its_cdd_msgs::msg::TrafficDirection _tmp_9;
                ros->denm.management.traffic_direction.push_back(_tmp_9);
            
                if(debug)
                    logger->print() << "|" << tools::brown("000009") << "| ros->denm.management.traffic_direction " << tools::green("present");
            }
            if(*(buffer++)) { 
                its_container_v4_etsi_its_cdd_msgs::msg::DeltaTimeMilliSecondPositive _tmp_10;
                ros->denm.management.transmission_interval.push_back(_tmp_10);
            
                if(debug)
                    logger->print() << "|" << tools::brown("000010") << "| ros->denm.management.transmission_interval " << tools::green("present");
            }
            
            // Field name: action_id
                // ActionId  SEQUENCE
                    //  originatingStationId StationId          
                    //  sequenceNumber       SequenceNumber     
                
                // Field name: originating_station_id
                // Integer
                // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
                uint32_t* _tmp_11 = (uint32_t*) buffer; buffer += 4;
                __aux64__ = *_tmp_11;
                ros->denm.management.action_id.originating_station_id.value = __aux64__;
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000011") << "| " << tools::getTypeName(ros->denm.management.action_id.originating_station_id.value) << 
                                 " denm.management.action_id.originating_station_id.value: " << ros->denm.management.action_id.originating_station_id.value;
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->error() << "Error: Value in 'denm.management.action_id.originating_station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                    logger->error() << "Error: Value in 'denm.management.action_id.originating_station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
                    return false;
                }
                
                // Field name: sequence_number
                // Integer
                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                uint16_t* _tmp_12 = (uint16_t*) buffer; buffer += 2;
                __aux64__ = *_tmp_12;
                ros->denm.management.action_id.sequence_number.value = __aux64__;
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000012") << "| " << tools::getTypeName(ros->denm.management.action_id.sequence_number.value) << 
                                 " denm.management.action_id.sequence_number.value: " << ros->denm.management.action_id.sequence_number.value;
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->error() << "Error: Value in 'denm.management.action_id.sequence_number.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                    logger->error() << "Error: Value in 'denm.management.action_id.sequence_number.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                    return false;
                }
            
            // Field name: detection_time
            // Real
            // Double
            // DOUBLE  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Double)
            uint64_t* _tmp_13 = (uint64_t*)buffer; buffer += 8;
            ros->denm.management.detection_time.value = *_tmp_13;
            __aux64__ = ros->denm.management.detection_time.value;
            ros->denm.management.detection_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->error() << "Error: Value in 'denm.management.detection_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->error() << "Error: Value in 'denm.management.detection_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->print() << "|" << tools::brown("000013") << "| " << tools::getTypeName(ros->denm.management.detection_time.value) << " denm.management.detection_time: " <<
                             ros->denm.management.detection_time.value << " (" << __aux64__ << ")";
            }
            
            // Field name: reference_time
            // Real
            // Double
            // DOUBLE  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Double)
            uint64_t* _tmp_14 = (uint64_t*)buffer; buffer += 8;
            ros->denm.management.reference_time.value = *_tmp_14;
            __aux64__ = ros->denm.management.reference_time.value;
            ros->denm.management.reference_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->error() << "Error: Value in 'denm.management.reference_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->error() << "Error: Value in 'denm.management.reference_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->print() << "|" << tools::brown("000014") << "| " << tools::getTypeName(ros->denm.management.reference_time.value) << " denm.management.reference_time: " <<
                             ros->denm.management.reference_time.value << " (" << __aux64__ << ")";
            }
            
            if(ros->denm.management.termination.size() != 0) {
                // Field name: termination
                // Enumerated
                // INT32  min(0) max(1) span(2) datatype(Int32)
                uint8_t* _tmp_15 = (uint8_t*) buffer++;
                __aux64__ = *_tmp_15;
                __aux64__ += 0;
                ros->denm.management.termination[0].value = __aux64__;
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->error() << "Error: Value in 'denm.management.termination[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1) {
                    logger->error() << "Error: Value in 'denm.management.termination[0].value' " << (__aux64__) << " exceeds max allowable (1); message dropped.";
                    return false;
                }
                
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000015") << "| " << tools::getTypeName(ros->denm.management.termination[0].value) << 
                                 " denm.management.termination[0].value: " << static_cast<int>(ros->denm.management.termination[0].value);
                }
            }
            
            // Field name: event_position
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                
                // Field name: latitude
                // Real
                // Double
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_16 = (uint32_t*) buffer; buffer += 4;
                ros->denm.management.event_position.latitude.value = *_tmp_16;
                ros->denm.management.event_position.latitude.value += -900000000;
                __aux64__ = ros->denm.management.event_position.latitude.value;
                ros->denm.management.event_position.latitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->error() << "Error: Value in 'denm.management.event_position.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->error() << "Error: Value in 'denm.management.event_position.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000016") << "| " << tools::getTypeName(ros->denm.management.event_position.latitude.value) << " denm.management.event_position.latitude: " <<
                                 ros->denm.management.event_position.latitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: longitude
                // Real
                // Double
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_17 = (uint32_t*) buffer; buffer += 4;
                ros->denm.management.event_position.longitude.value = *_tmp_17;
                ros->denm.management.event_position.longitude.value += -1800000000;
                __aux64__ = ros->denm.management.event_position.longitude.value;
                ros->denm.management.event_position.longitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->error() << "Error: Value in 'denm.management.event_position.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->error() << "Error: Value in 'denm.management.event_position.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000017") << "| " << tools::getTypeName(ros->denm.management.event_position.longitude.value) << " denm.management.event_position.longitude: " <<
                                 ros->denm.management.event_position.longitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: position_confidence_ellipse
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    
                    // Field name: semi_major_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_18 = (uint16_t*) buffer; buffer += 2;
                    ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value = *_tmp_18;
                    __aux64__ = ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value;
                    ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->error() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000018") << "| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value) << " denm.management.event_position.position_confidence_ellipse.semi_major_confidence: " <<
                                     ros->denm.management.event_position.position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_minor_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_19 = (uint16_t*) buffer; buffer += 2;
                    ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value = *_tmp_19;
                    __aux64__ = ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value;
                    ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->error() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000019") << "| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value) << " denm.management.event_position.position_confidence_ellipse.semi_minor_confidence: " <<
                                     ros->denm.management.event_position.position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_major_orientation
                    // Real
                    // Float
                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                    uint16_t* _tmp_20 = (uint16_t*) buffer; buffer += 2;
                    ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value = *_tmp_20;
                    __aux64__ = ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value;
                    ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value /= 10.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->error() << "Error: Value in 'denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000020") << "| " << tools::getTypeName(ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value) << " denm.management.event_position.position_confidence_ellipse.semi_major_orientation: " <<
                                     ros->denm.management.event_position.position_confidence_ellipse.semi_major_orientation.value << " (" << __aux64__ << ")";
                    }
                
                // Field name: altitude
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    
                    // Field name: altitude_value
                    // Real
                    // Float
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    uint32_t* _tmp_21 = (uint32_t*) buffer; buffer += 4;
                    ros->denm.management.event_position.altitude.altitude_value.value = *_tmp_21;
                    ros->denm.management.event_position.altitude.altitude_value.value += -100000;
                    __aux64__ = ros->denm.management.event_position.altitude.altitude_value.value;
                    ros->denm.management.event_position.altitude.altitude_value.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->error() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->error() << "Error: Value in 'denm.management.event_position.altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000021") << "| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_value.value) << " denm.management.event_position.altitude.altitude_value: " <<
                                     ros->denm.management.event_position.altitude.altitude_value.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: altitude_confidence
                    // Enumerated
                    // INT32  min(0) max(15) span(16) datatype(Int32)
                    uint8_t* _tmp_22 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_22;
                    __aux64__ += 0;
                    ros->denm.management.event_position.altitude.altitude_confidence.value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->error() << "Error: Value in 'denm.management.event_position.altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000022") << "| " << tools::getTypeName(ros->denm.management.event_position.altitude.altitude_confidence.value) << 
                                     " denm.management.event_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.management.event_position.altitude.altitude_confidence.value);
                    }
            
            if(ros->denm.management.awareness_distance.size() != 0) {
                // Field name: awareness_distance
                // Enumerated
                // INT32  min(0) max(7) span(8) datatype(Int32)
                uint8_t* _tmp_23 = (uint8_t*) buffer++;
                __aux64__ = *_tmp_23;
                __aux64__ += 0;
                ros->denm.management.awareness_distance[0].value = __aux64__;
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->error() << "Error: Value in 'denm.management.awareness_distance[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->error() << "Error: Value in 'denm.management.awareness_distance[0].value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                    return false;
                }
                
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000023") << "| " << tools::getTypeName(ros->denm.management.awareness_distance[0].value) << 
                                 " denm.management.awareness_distance[0].value: " << static_cast<int>(ros->denm.management.awareness_distance[0].value);
                }
            }
            
            if(ros->denm.management.traffic_direction.size() != 0) {
                // Field name: traffic_direction
                // Enumerated
                // INT32  min(0) max(3) span(4) datatype(Int32)
                uint8_t* _tmp_24 = (uint8_t*) buffer++;
                __aux64__ = *_tmp_24;
                __aux64__ += 0;
                ros->denm.management.traffic_direction[0].value = __aux64__;
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->error() << "Error: Value in 'denm.management.traffic_direction[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 3) {
                    logger->error() << "Error: Value in 'denm.management.traffic_direction[0].value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                    return false;
                }
                
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000024") << "| " << tools::getTypeName(ros->denm.management.traffic_direction[0].value) << 
                                 " denm.management.traffic_direction[0].value: " << static_cast<int>(ros->denm.management.traffic_direction[0].value);
                }
            }
            
            // Field name: validity_duration
            // Integer
            // UINT32  min(0) max(86400) span(86401) datatype(UInt32)
            uint32_t* _tmp_25 = (uint32_t*) buffer; buffer += 4;
            __aux64__ = *_tmp_25;
            ros->denm.management.validity_duration.value = __aux64__;
            
            if(debug) {
                logger->print() << "|" << tools::brown("000025") << "| " << tools::getTypeName(ros->denm.management.validity_duration.value) << 
                             " denm.management.validity_duration.value: " << ros->denm.management.validity_duration.value;
            }
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->error() << "Error: Value in 'denm.management.validity_duration.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 86400) {
                logger->error() << "Error: Value in 'denm.management.validity_duration.value' " << (__aux64__) << " exceeds max allowable (86400); message dropped.";
                return false;
            }
            
            if(ros->denm.management.transmission_interval.size() != 0) {
                // Field name: transmission_interval
                // Real
                // Float
                // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                uint16_t* _tmp_26 = (uint16_t*) buffer; buffer += 2;
                ros->denm.management.transmission_interval[0].value = *_tmp_26;
                ros->denm.management.transmission_interval[0].value += 1;
                __aux64__ = ros->denm.management.transmission_interval[0].value;
                ros->denm.management.transmission_interval[0].value /= 1000.0;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->error() << "Error: Value in 'denm.management.transmission_interval[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 10000) {
                    logger->error() << "Error: Value in 'denm.management.transmission_interval[0].value' " << (__aux64__) << " exceeds max allowable (10000); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000026") << "| " << tools::getTypeName(ros->denm.management.transmission_interval[0].value) << " denm.management.transmission_interval[0]: " <<
                                 ros->denm.management.transmission_interval[0].value << " (" << __aux64__ << ")";
                }
            }
            
            // Field name: station_type
            // Integer
            // UINT8  min(0) max(255) span(256) datatype(UInt8)
            uint8_t* _tmp_27 = (uint8_t*) buffer++;
            __aux64__ = *_tmp_27;
            ros->denm.management.station_type.value = __aux64__;
            
            if(debug) {
                logger->print() << "|" << tools::brown("000027") << "| " << tools::getTypeName(ros->denm.management.station_type.value) << 
                             " denm.management.station_type.value: " << static_cast<int>(ros->denm.management.station_type.value);
            }
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->error() << "Error: Value in 'denm.management.station_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                logger->error() << "Error: Value in 'denm.management.station_type.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                return false;
            }
            if(*_ext_flag_1) { // from ros->denm.management. 
                uint8_t* _tmp_28 = (uint8_t*) buffer++;  // number of extensions
                bool _array_1[*_tmp_28];
                
                if(debug)
                    logger->print() << "|" << tools::brown("000028") << "| Reading number of exts from ros->denm.management.: " << static_cast<unsigned int>(*_tmp_28);
                
                // Extensions bytemap
                for(int i = 0; i < *_tmp_28; i++)
                    _array_1[i] = (*buffer++) != 0;
                
                // Discarding unknown OpenType containers
                for(int i = 0; i < *_tmp_28; i++) {
                    uint16_t* _tmp_29 = (uint16_t*)buffer;  // OpenType length
                    buffer += 2;
                
                    if(debug) {
                    }
                
                    for(int i = 0; i < *_tmp_29; i++)
                        buffer++;
                }
                
            }
        
        if(ros->denm.situation.size() != 0) {
            // Field name: situation
                // SituationContainer  SEQUENCE
                    //  informationQuality InformationQuality     
                    //  eventType          CauseCodeV2            
                    //  linkedCause        CauseCodeV2          OPTIONAL  
                    //  eventZone          EventZone            OPTIONAL  
                    //  linkedDenms        ActionIdList         OPTIONAL  Extension group #1
                    //  eventEnd           Position1d           OPTIONAL  Extension group #1
                uint8_t* _ext_flag_15 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.situation[0].
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000029") << "| Reading ext flag from ros->denm.situation[0].: " << int(*_ext_flag_15);
                }
                
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::CauseCodeV2 _tmp_30;
                    ros->denm.situation[0].linked_cause.push_back(_tmp_30);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000030") << "| ros->denm.situation[0].linked_cause " << tools::green("present");
                }
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::EventZone _tmp_31;
                    ros->denm.situation[0].event_zone.push_back(_tmp_31);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000031") << "| ros->denm.situation[0].event_zone " << tools::green("present");
                }
                
                // Field name: information_quality
                // Integer
                // UINT8  min(0) max(7) span(8) datatype(UInt8)
                uint8_t* _tmp_32 = (uint8_t*) buffer++;
                __aux64__ = *_tmp_32;
                ros->denm.situation[0].information_quality.value = __aux64__;
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000032") << "| " << tools::getTypeName(ros->denm.situation[0].information_quality.value) << 
                                 " denm.situation[0].information_quality.value: " << static_cast<int>(ros->denm.situation[0].information_quality.value);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                    logger->error() << "Error: Value in 'denm.situation[0].information_quality.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->error() << "Error: Value in 'denm.situation[0].information_quality.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                    return false;
                }
                
                // Field name: event_type
                    // CauseCodeV2  SEQUENCE
                        //  ccAndScc   CauseCodeChoice     
                        //  ...
                    uint8_t* _ext_flag_16 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.situation[0].event_type.
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000033") << "| Reading ext flag from ros->denm.situation[0].event_type.: " << int(*_ext_flag_16);
                    }
                    
                    
                    // Field name: cc_and_scc
                    // Choice
                       // #0  reserved0   SubCauseCodeType   
                       // #1  trafficCondition1   TrafficConditionSubCauseCode   
                       // #2  accident2   AccidentSubCauseCode   
                       // #3  roadworks3   RoadworksSubCauseCode   
                       // #4  reserved4   SubCauseCodeType   
                       // #5  impassability5   ImpassabilitySubCauseCode   
                       // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode   
                       // #7  aquaplaning7   SubCauseCodeType   
                       // #8  reserved8   SubCauseCodeType   
                       // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode   
                       // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode   
                       // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode   
                       // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode   
                       // #13  reserved13   SubCauseCodeType   
                       // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode   
                       // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode   
                       // #16  reserved16   SubCauseCodeType   
                       // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode   
                       // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode   
                       // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode   
                       // #20  violence20   SubCauseCodeType   
                       // #21  reserved21   SubCauseCodeType   
                       // #22  reserved22   SubCauseCodeType   
                       // #23  reserved23   SubCauseCodeType   
                       // #24  reserved24   SubCauseCodeType   
                       // #25  reserved25   SubCauseCodeType   
                       // #26  slowVehicle26   SlowVehicleSubCauseCode   
                       // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode   
                       // #28  publicTransportVehicleApproaching28   SubCauseCodeType   
                       // #29  reserved29   SubCauseCodeType   
                       // #30  reserved30   SubCauseCodeType   
                       // #31  reserved31   SubCauseCodeType   
                       // #32  reserved32   SubCauseCodeType   
                       // #33  reserved33   SubCauseCodeType   
                       // #34  reserved34   SubCauseCodeType   
                       // #35  reserved35   SubCauseCodeType   
                       // #36  reserved36   SubCauseCodeType   
                       // #37  reserved37   SubCauseCodeType   
                       // #38  reserved38   SubCauseCodeType   
                       // #39  reserved39   SubCauseCodeType   
                       // #40  reserved40   SubCauseCodeType   
                       // #41  reserved41   SubCauseCodeType   
                       // #42  reserved42   SubCauseCodeType   
                       // #43  reserved43   SubCauseCodeType   
                       // #44  reserved44   SubCauseCodeType   
                       // #45  reserved45   SubCauseCodeType   
                       // #46  reserved46   SubCauseCodeType   
                       // #47  reserved47   SubCauseCodeType   
                       // #48  reserved48   SubCauseCodeType   
                       // #49  reserved49   SubCauseCodeType   
                       // #50  reserved50   SubCauseCodeType   
                       // #51  reserved51   SubCauseCodeType   
                       // #52  reserved52   SubCauseCodeType   
                       // #53  reserved53   SubCauseCodeType   
                       // #54  reserved54   SubCauseCodeType   
                       // #55  reserved55   SubCauseCodeType   
                       // #56  reserved56   SubCauseCodeType   
                       // #57  reserved57   SubCauseCodeType   
                       // #58  reserved58   SubCauseCodeType   
                       // #59  reserved59   SubCauseCodeType   
                       // #60  reserved60   SubCauseCodeType   
                       // #61  reserved61   SubCauseCodeType   
                       // #62  reserved62   SubCauseCodeType   
                       // #63  reserved63   SubCauseCodeType   
                       // #64  reserved64   SubCauseCodeType   
                       // #65  reserved65   SubCauseCodeType   
                       // #66  reserved66   SubCauseCodeType   
                       // #67  reserved67   SubCauseCodeType   
                       // #68  reserved68   SubCauseCodeType   
                       // #69  reserved69   SubCauseCodeType   
                       // #70  reserved70   SubCauseCodeType   
                       // #71  reserved71   SubCauseCodeType   
                       // #72  reserved72   SubCauseCodeType   
                       // #73  reserved73   SubCauseCodeType   
                       // #74  reserved74   SubCauseCodeType   
                       // #75  reserved75   SubCauseCodeType   
                       // #76  reserved76   SubCauseCodeType   
                       // #77  reserved77   SubCauseCodeType   
                       // #78  reserved78   SubCauseCodeType   
                       // #79  reserved79   SubCauseCodeType   
                       // #80  reserved80   SubCauseCodeType   
                       // #81  reserved81   SubCauseCodeType   
                       // #82  reserved82   SubCauseCodeType   
                       // #83  reserved83   SubCauseCodeType   
                       // #84  reserved84   SubCauseCodeType   
                       // #85  reserved85   SubCauseCodeType   
                       // #86  reserved86   SubCauseCodeType   
                       // #87  reserved87   SubCauseCodeType   
                       // #88  reserved88   SubCauseCodeType   
                       // #89  reserved89   SubCauseCodeType   
                       // #90  reserved90   SubCauseCodeType   
                       // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode   
                       // #92  postCrash92   PostCrashSubCauseCode   
                       // #93  humanProblem93   HumanProblemSubCauseCode   
                       // #94  stationaryVehicle94   StationaryVehicleSubCauseCode   
                       // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode   
                       // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode   
                       // #97  collisionRisk97   CollisionRiskSubCauseCode   
                       // #98  signalViolation98   SignalViolationSubCauseCode   
                       // #99  dangerousSituation99   DangerousSituationSubCauseCode   
                       // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode   
                       // #101  reserved101   SubCauseCodeType   
                       // #102  reserved102   SubCauseCodeType   
                       // #103  reserved103   SubCauseCodeType   
                       // #104  reserved104   SubCauseCodeType   
                       // #105  reserved105   SubCauseCodeType   
                       // #106  reserved106   SubCauseCodeType   
                       // #107  reserved107   SubCauseCodeType   
                       // #108  reserved108   SubCauseCodeType   
                       // #109  reserved109   SubCauseCodeType   
                       // #110  reserved110   SubCauseCodeType   
                       // #111  reserved111   SubCauseCodeType   
                       // #112  reserved112   SubCauseCodeType   
                       // #113  reserved113   SubCauseCodeType   
                       // #114  reserved114   SubCauseCodeType   
                       // #115  reserved115   SubCauseCodeType   
                       // #116  reserved116   SubCauseCodeType   
                       // #117  reserved117   SubCauseCodeType   
                       // #118  reserved118   SubCauseCodeType   
                       // #119  reserved119   SubCauseCodeType   
                       // #120  reserved120   SubCauseCodeType   
                       // #121  reserved121   SubCauseCodeType   
                       // #122  reserved122   SubCauseCodeType   
                       // #123  reserved123   SubCauseCodeType   
                       // #124  reserved124   SubCauseCodeType   
                       // #125  reserved125   SubCauseCodeType   
                       // #126  reserved126   SubCauseCodeType   
                       // #127  reserved127   SubCauseCodeType   
                       // #128  reserved128   SubCauseCodeType   
                    uint8_t _choice_1 = *(buffer++);
                    
                    if(_choice_1 == 0) {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_33;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved0.push_back(_tmp_33);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_34 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_34;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000034") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved0[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved0[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 1)  // CHOICE CauseCodeChoice  fieldName(traffic_condition1)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::TrafficConditionSubCauseCode _tmp_35;
                        ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1.push_back(_tmp_35);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_36 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_36;
                        ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000035") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 2)  // CHOICE CauseCodeChoice  fieldName(accident2)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::AccidentSubCauseCode _tmp_37;
                        ros->denm.situation[0].event_type.cc_and_scc.accident2.push_back(_tmp_37);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_38 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_38;
                        ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000036") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.accident2[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.accident2[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 3)  // CHOICE CauseCodeChoice  fieldName(roadworks3)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::RoadworksSubCauseCode _tmp_39;
                        ros->denm.situation[0].event_type.cc_and_scc.roadworks3.push_back(_tmp_39);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_40 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_40;
                        ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000037") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.roadworks3[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.roadworks3[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 4)  // CHOICE CauseCodeChoice  fieldName(reserved4)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_41;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved4.push_back(_tmp_41);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_42 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_42;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000038") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved4[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved4[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 5)  // CHOICE CauseCodeChoice  fieldName(impassability5)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::ImpassabilitySubCauseCode _tmp_43;
                        ros->denm.situation[0].event_type.cc_and_scc.impassability5.push_back(_tmp_43);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_44 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_44;
                        ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000039") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.impassability5[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.impassability5[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 6)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_adhesion6)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionAdhesionSubCauseCode _tmp_45;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6.push_back(_tmp_45);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_46 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_46;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000040") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 7)  // CHOICE CauseCodeChoice  fieldName(aquaplaning7)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_47;
                        ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7.push_back(_tmp_47);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_48 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_48;
                        ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000041") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 8)  // CHOICE CauseCodeChoice  fieldName(reserved8)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_49;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved8.push_back(_tmp_49);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_50 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_50;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000042") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved8[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved8[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 9)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_surface_condition9)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationSurfaceConditionSubCauseCode _tmp_51;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9.push_back(_tmp_51);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_52 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_52;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000043") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 10)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_obstacle_on_the_road10)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationObstacleOnTheRoadSubCauseCode _tmp_53;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10.push_back(_tmp_53);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_54 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_54;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000044") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 11)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_animal_on_the_road11)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationAnimalOnTheRoadSubCauseCode _tmp_55;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11.push_back(_tmp_55);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_56 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_56;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000045") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 12)  // CHOICE CauseCodeChoice  fieldName(human_presence_on_the_road12)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::HumanPresenceOnTheRoadSubCauseCode _tmp_57;
                        ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12.push_back(_tmp_57);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_58 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_58;
                        ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000046") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 13)  // CHOICE CauseCodeChoice  fieldName(reserved13)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_59;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved13.push_back(_tmp_59);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_60 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_60;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000047") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved13[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved13[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 14)  // CHOICE CauseCodeChoice  fieldName(wrong_way_driving14)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::WrongWayDrivingSubCauseCode _tmp_61;
                        ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14.push_back(_tmp_61);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_62 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_62;
                        ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000048") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 15)  // CHOICE CauseCodeChoice  fieldName(rescue_and_recovery_work_in_progress15)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::RescueAndRecoveryWorkInProgressSubCauseCode _tmp_63;
                        ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15.push_back(_tmp_63);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_64 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_64;
                        ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000049") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 16)  // CHOICE CauseCodeChoice  fieldName(reserved16)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_65;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved16.push_back(_tmp_65);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_66 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_66;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000050") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved16[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved16[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 17)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_extreme_weather_condition17)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionExtremeWeatherConditionSubCauseCode _tmp_67;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17.push_back(_tmp_67);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_68 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_68;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000051") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 18)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_visibility18)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionVisibilitySubCauseCode _tmp_69;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18.push_back(_tmp_69);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_70 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_70;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000052") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 19)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_precipitation19)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionPrecipitationSubCauseCode _tmp_71;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19.push_back(_tmp_71);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_72 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_72;
                        ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000053") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 20)  // CHOICE CauseCodeChoice  fieldName(violence20)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_73;
                        ros->denm.situation[0].event_type.cc_and_scc.violence20.push_back(_tmp_73);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_74 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_74;
                        ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000054") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.violence20[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.violence20[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 21)  // CHOICE CauseCodeChoice  fieldName(reserved21)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_75;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved21.push_back(_tmp_75);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_76 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_76;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000055") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved21[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved21[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 22)  // CHOICE CauseCodeChoice  fieldName(reserved22)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_77;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved22.push_back(_tmp_77);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_78 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_78;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000056") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved22[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved22[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 23)  // CHOICE CauseCodeChoice  fieldName(reserved23)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_79;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved23.push_back(_tmp_79);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_80 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_80;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000057") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved23[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved23[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 24)  // CHOICE CauseCodeChoice  fieldName(reserved24)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_81;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved24.push_back(_tmp_81);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_82 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_82;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000058") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved24[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved24[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 25)  // CHOICE CauseCodeChoice  fieldName(reserved25)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_83;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved25.push_back(_tmp_83);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_84 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_84;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000059") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved25[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved25[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 26)  // CHOICE CauseCodeChoice  fieldName(slow_vehicle26)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SlowVehicleSubCauseCode _tmp_85;
                        ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26.push_back(_tmp_85);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_86 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_86;
                        ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000060") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 27)  // CHOICE CauseCodeChoice  fieldName(dangerous_end_of_queue27)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::DangerousEndOfQueueSubCauseCode _tmp_87;
                        ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27.push_back(_tmp_87);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_88 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_88;
                        ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000061") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 28)  // CHOICE CauseCodeChoice  fieldName(public_transport_vehicle_approaching28)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_89;
                        ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28.push_back(_tmp_89);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_90 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_90;
                        ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000062") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 29)  // CHOICE CauseCodeChoice  fieldName(reserved29)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_91;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved29.push_back(_tmp_91);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_92 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_92;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000063") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved29[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved29[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 30)  // CHOICE CauseCodeChoice  fieldName(reserved30)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_93;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved30.push_back(_tmp_93);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_94 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_94;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000064") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved30[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved30[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 31)  // CHOICE CauseCodeChoice  fieldName(reserved31)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_95;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved31.push_back(_tmp_95);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_96 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_96;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000065") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved31[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved31[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 32)  // CHOICE CauseCodeChoice  fieldName(reserved32)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_97;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved32.push_back(_tmp_97);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_98 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_98;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000066") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved32[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved32[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 33)  // CHOICE CauseCodeChoice  fieldName(reserved33)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_99;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved33.push_back(_tmp_99);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_100 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_100;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000067") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved33[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved33[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 34)  // CHOICE CauseCodeChoice  fieldName(reserved34)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_101;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved34.push_back(_tmp_101);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_102 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_102;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000068") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved34[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved34[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 35)  // CHOICE CauseCodeChoice  fieldName(reserved35)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_103;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved35.push_back(_tmp_103);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_104 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_104;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000069") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved35[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved35[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 36)  // CHOICE CauseCodeChoice  fieldName(reserved36)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_105;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved36.push_back(_tmp_105);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_106 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_106;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000070") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved36[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved36[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 37)  // CHOICE CauseCodeChoice  fieldName(reserved37)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_107;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved37.push_back(_tmp_107);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_108 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_108;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000071") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved37[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved37[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 38)  // CHOICE CauseCodeChoice  fieldName(reserved38)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_109;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved38.push_back(_tmp_109);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_110 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_110;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000072") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved38[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved38[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 39)  // CHOICE CauseCodeChoice  fieldName(reserved39)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_111;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved39.push_back(_tmp_111);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_112 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_112;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000073") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved39[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved39[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 40)  // CHOICE CauseCodeChoice  fieldName(reserved40)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_113;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved40.push_back(_tmp_113);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_114 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_114;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000074") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved40[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved40[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 41)  // CHOICE CauseCodeChoice  fieldName(reserved41)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_115;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved41.push_back(_tmp_115);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_116 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_116;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000075") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved41[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved41[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 42)  // CHOICE CauseCodeChoice  fieldName(reserved42)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_117;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved42.push_back(_tmp_117);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_118 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_118;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000076") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved42[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved42[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 43)  // CHOICE CauseCodeChoice  fieldName(reserved43)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_119;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved43.push_back(_tmp_119);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_120 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_120;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000077") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved43[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved43[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 44)  // CHOICE CauseCodeChoice  fieldName(reserved44)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_121;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved44.push_back(_tmp_121);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_122 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_122;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000078") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved44[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved44[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 45)  // CHOICE CauseCodeChoice  fieldName(reserved45)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_123;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved45.push_back(_tmp_123);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_124 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_124;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000079") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved45[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved45[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 46)  // CHOICE CauseCodeChoice  fieldName(reserved46)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_125;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved46.push_back(_tmp_125);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_126 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_126;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000080") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved46[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved46[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 47)  // CHOICE CauseCodeChoice  fieldName(reserved47)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_127;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved47.push_back(_tmp_127);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_128 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_128;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000081") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved47[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved47[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 48)  // CHOICE CauseCodeChoice  fieldName(reserved48)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_129;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved48.push_back(_tmp_129);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_130 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_130;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000082") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved48[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved48[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 49)  // CHOICE CauseCodeChoice  fieldName(reserved49)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_131;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved49.push_back(_tmp_131);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_132 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_132;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000083") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved49[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved49[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 50)  // CHOICE CauseCodeChoice  fieldName(reserved50)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_133;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved50.push_back(_tmp_133);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_134 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_134;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000084") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved50[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved50[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 51)  // CHOICE CauseCodeChoice  fieldName(reserved51)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_135;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved51.push_back(_tmp_135);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_136 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_136;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000085") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved51[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved51[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 52)  // CHOICE CauseCodeChoice  fieldName(reserved52)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_137;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved52.push_back(_tmp_137);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_138 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_138;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000086") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved52[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved52[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 53)  // CHOICE CauseCodeChoice  fieldName(reserved53)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_139;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved53.push_back(_tmp_139);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_140 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_140;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000087") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved53[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved53[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 54)  // CHOICE CauseCodeChoice  fieldName(reserved54)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_141;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved54.push_back(_tmp_141);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_142 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_142;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000088") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved54[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved54[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 55)  // CHOICE CauseCodeChoice  fieldName(reserved55)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_143;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved55.push_back(_tmp_143);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_144 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_144;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000089") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved55[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved55[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 56)  // CHOICE CauseCodeChoice  fieldName(reserved56)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_145;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved56.push_back(_tmp_145);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_146 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_146;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000090") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved56[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved56[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 57)  // CHOICE CauseCodeChoice  fieldName(reserved57)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_147;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved57.push_back(_tmp_147);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_148 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_148;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000091") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved57[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved57[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 58)  // CHOICE CauseCodeChoice  fieldName(reserved58)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_149;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved58.push_back(_tmp_149);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_150 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_150;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000092") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved58[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved58[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 59)  // CHOICE CauseCodeChoice  fieldName(reserved59)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_151;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved59.push_back(_tmp_151);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_152 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_152;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000093") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved59[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved59[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 60)  // CHOICE CauseCodeChoice  fieldName(reserved60)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_153;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved60.push_back(_tmp_153);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_154 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_154;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000094") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved60[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved60[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 61)  // CHOICE CauseCodeChoice  fieldName(reserved61)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_155;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved61.push_back(_tmp_155);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_156 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_156;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000095") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved61[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved61[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 62)  // CHOICE CauseCodeChoice  fieldName(reserved62)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_157;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved62.push_back(_tmp_157);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_158 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_158;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000096") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved62[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved62[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 63)  // CHOICE CauseCodeChoice  fieldName(reserved63)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_159;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved63.push_back(_tmp_159);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_160 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_160;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000097") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved63[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved63[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 64)  // CHOICE CauseCodeChoice  fieldName(reserved64)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_161;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved64.push_back(_tmp_161);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_162 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_162;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000098") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved64[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved64[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 65)  // CHOICE CauseCodeChoice  fieldName(reserved65)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_163;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved65.push_back(_tmp_163);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_164 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_164;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000099") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved65[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved65[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 66)  // CHOICE CauseCodeChoice  fieldName(reserved66)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_165;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved66.push_back(_tmp_165);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_166 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_166;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000100") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved66[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved66[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 67)  // CHOICE CauseCodeChoice  fieldName(reserved67)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_167;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved67.push_back(_tmp_167);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_168 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_168;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000101") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved67[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved67[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 68)  // CHOICE CauseCodeChoice  fieldName(reserved68)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_169;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved68.push_back(_tmp_169);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_170 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_170;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000102") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved68[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved68[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 69)  // CHOICE CauseCodeChoice  fieldName(reserved69)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_171;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved69.push_back(_tmp_171);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_172 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_172;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000103") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved69[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved69[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 70)  // CHOICE CauseCodeChoice  fieldName(reserved70)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_173;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved70.push_back(_tmp_173);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_174 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_174;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000104") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved70[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved70[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 71)  // CHOICE CauseCodeChoice  fieldName(reserved71)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_175;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved71.push_back(_tmp_175);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_176 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_176;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000105") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved71[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved71[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 72)  // CHOICE CauseCodeChoice  fieldName(reserved72)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_177;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved72.push_back(_tmp_177);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_178 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_178;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000106") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved72[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved72[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 73)  // CHOICE CauseCodeChoice  fieldName(reserved73)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_179;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved73.push_back(_tmp_179);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_180 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_180;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000107") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved73[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved73[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 74)  // CHOICE CauseCodeChoice  fieldName(reserved74)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_181;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved74.push_back(_tmp_181);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_182 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_182;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000108") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved74[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved74[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 75)  // CHOICE CauseCodeChoice  fieldName(reserved75)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_183;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved75.push_back(_tmp_183);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_184 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_184;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000109") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved75[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved75[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 76)  // CHOICE CauseCodeChoice  fieldName(reserved76)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_185;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved76.push_back(_tmp_185);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_186 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_186;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000110") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved76[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved76[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 77)  // CHOICE CauseCodeChoice  fieldName(reserved77)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_187;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved77.push_back(_tmp_187);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_188 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_188;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000111") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved77[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved77[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 78)  // CHOICE CauseCodeChoice  fieldName(reserved78)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_189;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved78.push_back(_tmp_189);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_190 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_190;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000112") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved78[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved78[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 79)  // CHOICE CauseCodeChoice  fieldName(reserved79)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_191;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved79.push_back(_tmp_191);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_192 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_192;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000113") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved79[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved79[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 80)  // CHOICE CauseCodeChoice  fieldName(reserved80)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_193;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved80.push_back(_tmp_193);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_194 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_194;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000114") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved80[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved80[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 81)  // CHOICE CauseCodeChoice  fieldName(reserved81)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_195;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved81.push_back(_tmp_195);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_196 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_196;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000115") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved81[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved81[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 82)  // CHOICE CauseCodeChoice  fieldName(reserved82)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_197;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved82.push_back(_tmp_197);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_198 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_198;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000116") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved82[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved82[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 83)  // CHOICE CauseCodeChoice  fieldName(reserved83)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_199;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved83.push_back(_tmp_199);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_200 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_200;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000117") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved83[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved83[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 84)  // CHOICE CauseCodeChoice  fieldName(reserved84)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_201;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved84.push_back(_tmp_201);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_202 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_202;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000118") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved84[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved84[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 85)  // CHOICE CauseCodeChoice  fieldName(reserved85)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_203;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved85.push_back(_tmp_203);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_204 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_204;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000119") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved85[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved85[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 86)  // CHOICE CauseCodeChoice  fieldName(reserved86)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_205;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved86.push_back(_tmp_205);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_206 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_206;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000120") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved86[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved86[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 87)  // CHOICE CauseCodeChoice  fieldName(reserved87)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_207;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved87.push_back(_tmp_207);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_208 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_208;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000121") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved87[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved87[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 88)  // CHOICE CauseCodeChoice  fieldName(reserved88)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_209;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved88.push_back(_tmp_209);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_210 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_210;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000122") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved88[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved88[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 89)  // CHOICE CauseCodeChoice  fieldName(reserved89)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_211;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved89.push_back(_tmp_211);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_212 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_212;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000123") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved89[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved89[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 90)  // CHOICE CauseCodeChoice  fieldName(reserved90)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_213;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved90.push_back(_tmp_213);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_214 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_214;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000124") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved90[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved90[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 91)  // CHOICE CauseCodeChoice  fieldName(vehicle_breakdown91)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::VehicleBreakdownSubCauseCode _tmp_215;
                        ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91.push_back(_tmp_215);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_216 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_216;
                        ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000125") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 92)  // CHOICE CauseCodeChoice  fieldName(post_crash92)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::PostCrashSubCauseCode _tmp_217;
                        ros->denm.situation[0].event_type.cc_and_scc.post_crash92.push_back(_tmp_217);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_218 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_218;
                        ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000126") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.post_crash92[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.post_crash92[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 93)  // CHOICE CauseCodeChoice  fieldName(human_problem93)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::HumanProblemSubCauseCode _tmp_219;
                        ros->denm.situation[0].event_type.cc_and_scc.human_problem93.push_back(_tmp_219);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_220 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_220;
                        ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000127") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.human_problem93[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.human_problem93[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 94)  // CHOICE CauseCodeChoice  fieldName(stationary_vehicle94)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::StationaryVehicleSubCauseCode _tmp_221;
                        ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94.push_back(_tmp_221);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_222 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_222;
                        ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000128") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 95)  // CHOICE CauseCodeChoice  fieldName(emergency_vehicle_approaching95)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::EmergencyVehicleApproachingSubCauseCode _tmp_223;
                        ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95.push_back(_tmp_223);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_224 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_224;
                        ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000129") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 96)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_dangerous_curve96)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationDangerousCurveSubCauseCode _tmp_225;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96.push_back(_tmp_225);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_226 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_226;
                        ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000130") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 97)  // CHOICE CauseCodeChoice  fieldName(collision_risk97)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::CollisionRiskSubCauseCode _tmp_227;
                        ros->denm.situation[0].event_type.cc_and_scc.collision_risk97.push_back(_tmp_227);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_228 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_228;
                        ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000131") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 98)  // CHOICE CauseCodeChoice  fieldName(signal_violation98)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SignalViolationSubCauseCode _tmp_229;
                        ros->denm.situation[0].event_type.cc_and_scc.signal_violation98.push_back(_tmp_229);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_230 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_230;
                        ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000132") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 99)  // CHOICE CauseCodeChoice  fieldName(dangerous_situation99)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::DangerousSituationSubCauseCode _tmp_231;
                        ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99.push_back(_tmp_231);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_232 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_232;
                        ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000133") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 100)  // CHOICE CauseCodeChoice  fieldName(railway_level_crossing100)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::RailwayLevelCrossingSubCauseCode _tmp_233;
                        ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100.push_back(_tmp_233);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_234 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_234;
                        ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000134") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 101)  // CHOICE CauseCodeChoice  fieldName(reserved101)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_235;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved101.push_back(_tmp_235);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_236 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_236;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000135") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved101[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved101[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 102)  // CHOICE CauseCodeChoice  fieldName(reserved102)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_237;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved102.push_back(_tmp_237);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_238 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_238;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000136") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved102[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved102[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 103)  // CHOICE CauseCodeChoice  fieldName(reserved103)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_239;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved103.push_back(_tmp_239);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_240 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_240;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000137") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved103[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved103[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 104)  // CHOICE CauseCodeChoice  fieldName(reserved104)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_241;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved104.push_back(_tmp_241);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_242 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_242;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000138") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved104[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved104[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 105)  // CHOICE CauseCodeChoice  fieldName(reserved105)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_243;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved105.push_back(_tmp_243);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_244 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_244;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000139") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved105[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved105[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 106)  // CHOICE CauseCodeChoice  fieldName(reserved106)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_245;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved106.push_back(_tmp_245);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_246 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_246;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000140") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved106[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved106[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 107)  // CHOICE CauseCodeChoice  fieldName(reserved107)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_247;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved107.push_back(_tmp_247);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_248 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_248;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000141") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved107[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved107[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 108)  // CHOICE CauseCodeChoice  fieldName(reserved108)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_249;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved108.push_back(_tmp_249);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_250 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_250;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000142") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved108[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved108[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 109)  // CHOICE CauseCodeChoice  fieldName(reserved109)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_251;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved109.push_back(_tmp_251);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_252 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_252;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000143") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved109[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved109[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 110)  // CHOICE CauseCodeChoice  fieldName(reserved110)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_253;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved110.push_back(_tmp_253);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_254 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_254;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000144") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved110[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved110[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 111)  // CHOICE CauseCodeChoice  fieldName(reserved111)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_255;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved111.push_back(_tmp_255);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_256 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_256;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000145") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved111[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved111[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 112)  // CHOICE CauseCodeChoice  fieldName(reserved112)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_257;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved112.push_back(_tmp_257);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_258 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_258;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000146") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved112[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved112[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 113)  // CHOICE CauseCodeChoice  fieldName(reserved113)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_259;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved113.push_back(_tmp_259);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_260 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_260;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000147") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved113[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved113[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 114)  // CHOICE CauseCodeChoice  fieldName(reserved114)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_261;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved114.push_back(_tmp_261);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_262 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_262;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000148") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved114[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved114[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 115)  // CHOICE CauseCodeChoice  fieldName(reserved115)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_263;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved115.push_back(_tmp_263);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_264 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_264;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000149") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved115[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved115[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 116)  // CHOICE CauseCodeChoice  fieldName(reserved116)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_265;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved116.push_back(_tmp_265);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_266 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_266;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000150") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved116[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved116[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 117)  // CHOICE CauseCodeChoice  fieldName(reserved117)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_267;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved117.push_back(_tmp_267);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_268 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_268;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000151") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved117[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved117[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 118)  // CHOICE CauseCodeChoice  fieldName(reserved118)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_269;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved118.push_back(_tmp_269);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_270 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_270;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000152") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved118[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved118[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 119)  // CHOICE CauseCodeChoice  fieldName(reserved119)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_271;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved119.push_back(_tmp_271);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_272 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_272;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000153") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved119[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved119[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 120)  // CHOICE CauseCodeChoice  fieldName(reserved120)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_273;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved120.push_back(_tmp_273);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_274 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_274;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000154") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved120[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved120[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 121)  // CHOICE CauseCodeChoice  fieldName(reserved121)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_275;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved121.push_back(_tmp_275);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_276 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_276;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000155") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved121[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved121[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 122)  // CHOICE CauseCodeChoice  fieldName(reserved122)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_277;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved122.push_back(_tmp_277);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_278 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_278;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000156") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved122[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved122[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 123)  // CHOICE CauseCodeChoice  fieldName(reserved123)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_279;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved123.push_back(_tmp_279);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_280 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_280;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000157") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved123[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved123[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 124)  // CHOICE CauseCodeChoice  fieldName(reserved124)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_281;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved124.push_back(_tmp_281);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_282 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_282;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000158") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved124[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved124[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 125)  // CHOICE CauseCodeChoice  fieldName(reserved125)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_283;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved125.push_back(_tmp_283);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_284 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_284;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000159") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved125[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved125[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 126)  // CHOICE CauseCodeChoice  fieldName(reserved126)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_285;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved126.push_back(_tmp_285);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_286 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_286;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000160") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved126[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved126[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 127)  // CHOICE CauseCodeChoice  fieldName(reserved127)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_287;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved127.push_back(_tmp_287);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_288 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_288;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000161") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved127[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved127[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else if(_choice_1 == 128)  // CHOICE CauseCodeChoice  fieldName(reserved128)
                    {
                        its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_289;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved128.push_back(_tmp_289);
                    
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_290 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_290;
                        ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000162") << "| " << tools::getTypeName(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value) << 
                                         " denm.situation[0].event_type.cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].event_type.cc_and_scc.reserved128[0].value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.situation[0].event_type.cc_and_scc.reserved128[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                    }
                    else
                    {
                        logger->warning() << "Wrong option (" << static_cast<int>(_choice_1) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].event_type.cc_and_scc'; message dropped.";
                        return false;
                    }
                    if(*_ext_flag_16) { // from ros->denm.situation[0].event_type. 
                        uint8_t* _tmp_291 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_2[*_tmp_291];
                        
                        if(debug)
                            logger->print() << "|" << tools::brown("000163") << "| Reading number of exts from ros->denm.situation[0].event_type.: " << static_cast<unsigned int>(*_tmp_291);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_291; i++)
                            _array_2[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_291; i++) {
                            uint16_t* _tmp_292 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_292; i++)
                                buffer++;
                        }
                        
                    }
                
                if(ros->denm.situation[0].linked_cause.size() != 0) {
                    // Field name: linked_cause
                        // CauseCodeV2  SEQUENCE
                            //  ccAndScc   CauseCodeChoice     
                            //  ...
                        uint8_t* _ext_flag_18 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.situation[0].linked_cause[0].
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000164") << "| Reading ext flag from ros->denm.situation[0].linked_cause[0].: " << int(*_ext_flag_18);
                        }
                        
                        
                        // Field name: cc_and_scc
                        // Choice
                           // #0  reserved0   SubCauseCodeType   
                           // #1  trafficCondition1   TrafficConditionSubCauseCode   
                           // #2  accident2   AccidentSubCauseCode   
                           // #3  roadworks3   RoadworksSubCauseCode   
                           // #4  reserved4   SubCauseCodeType   
                           // #5  impassability5   ImpassabilitySubCauseCode   
                           // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode   
                           // #7  aquaplaning7   SubCauseCodeType   
                           // #8  reserved8   SubCauseCodeType   
                           // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode   
                           // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode   
                           // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode   
                           // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode   
                           // #13  reserved13   SubCauseCodeType   
                           // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode   
                           // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode   
                           // #16  reserved16   SubCauseCodeType   
                           // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode   
                           // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode   
                           // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode   
                           // #20  violence20   SubCauseCodeType   
                           // #21  reserved21   SubCauseCodeType   
                           // #22  reserved22   SubCauseCodeType   
                           // #23  reserved23   SubCauseCodeType   
                           // #24  reserved24   SubCauseCodeType   
                           // #25  reserved25   SubCauseCodeType   
                           // #26  slowVehicle26   SlowVehicleSubCauseCode   
                           // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode   
                           // #28  publicTransportVehicleApproaching28   SubCauseCodeType   
                           // #29  reserved29   SubCauseCodeType   
                           // #30  reserved30   SubCauseCodeType   
                           // #31  reserved31   SubCauseCodeType   
                           // #32  reserved32   SubCauseCodeType   
                           // #33  reserved33   SubCauseCodeType   
                           // #34  reserved34   SubCauseCodeType   
                           // #35  reserved35   SubCauseCodeType   
                           // #36  reserved36   SubCauseCodeType   
                           // #37  reserved37   SubCauseCodeType   
                           // #38  reserved38   SubCauseCodeType   
                           // #39  reserved39   SubCauseCodeType   
                           // #40  reserved40   SubCauseCodeType   
                           // #41  reserved41   SubCauseCodeType   
                           // #42  reserved42   SubCauseCodeType   
                           // #43  reserved43   SubCauseCodeType   
                           // #44  reserved44   SubCauseCodeType   
                           // #45  reserved45   SubCauseCodeType   
                           // #46  reserved46   SubCauseCodeType   
                           // #47  reserved47   SubCauseCodeType   
                           // #48  reserved48   SubCauseCodeType   
                           // #49  reserved49   SubCauseCodeType   
                           // #50  reserved50   SubCauseCodeType   
                           // #51  reserved51   SubCauseCodeType   
                           // #52  reserved52   SubCauseCodeType   
                           // #53  reserved53   SubCauseCodeType   
                           // #54  reserved54   SubCauseCodeType   
                           // #55  reserved55   SubCauseCodeType   
                           // #56  reserved56   SubCauseCodeType   
                           // #57  reserved57   SubCauseCodeType   
                           // #58  reserved58   SubCauseCodeType   
                           // #59  reserved59   SubCauseCodeType   
                           // #60  reserved60   SubCauseCodeType   
                           // #61  reserved61   SubCauseCodeType   
                           // #62  reserved62   SubCauseCodeType   
                           // #63  reserved63   SubCauseCodeType   
                           // #64  reserved64   SubCauseCodeType   
                           // #65  reserved65   SubCauseCodeType   
                           // #66  reserved66   SubCauseCodeType   
                           // #67  reserved67   SubCauseCodeType   
                           // #68  reserved68   SubCauseCodeType   
                           // #69  reserved69   SubCauseCodeType   
                           // #70  reserved70   SubCauseCodeType   
                           // #71  reserved71   SubCauseCodeType   
                           // #72  reserved72   SubCauseCodeType   
                           // #73  reserved73   SubCauseCodeType   
                           // #74  reserved74   SubCauseCodeType   
                           // #75  reserved75   SubCauseCodeType   
                           // #76  reserved76   SubCauseCodeType   
                           // #77  reserved77   SubCauseCodeType   
                           // #78  reserved78   SubCauseCodeType   
                           // #79  reserved79   SubCauseCodeType   
                           // #80  reserved80   SubCauseCodeType   
                           // #81  reserved81   SubCauseCodeType   
                           // #82  reserved82   SubCauseCodeType   
                           // #83  reserved83   SubCauseCodeType   
                           // #84  reserved84   SubCauseCodeType   
                           // #85  reserved85   SubCauseCodeType   
                           // #86  reserved86   SubCauseCodeType   
                           // #87  reserved87   SubCauseCodeType   
                           // #88  reserved88   SubCauseCodeType   
                           // #89  reserved89   SubCauseCodeType   
                           // #90  reserved90   SubCauseCodeType   
                           // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode   
                           // #92  postCrash92   PostCrashSubCauseCode   
                           // #93  humanProblem93   HumanProblemSubCauseCode   
                           // #94  stationaryVehicle94   StationaryVehicleSubCauseCode   
                           // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode   
                           // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode   
                           // #97  collisionRisk97   CollisionRiskSubCauseCode   
                           // #98  signalViolation98   SignalViolationSubCauseCode   
                           // #99  dangerousSituation99   DangerousSituationSubCauseCode   
                           // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode   
                           // #101  reserved101   SubCauseCodeType   
                           // #102  reserved102   SubCauseCodeType   
                           // #103  reserved103   SubCauseCodeType   
                           // #104  reserved104   SubCauseCodeType   
                           // #105  reserved105   SubCauseCodeType   
                           // #106  reserved106   SubCauseCodeType   
                           // #107  reserved107   SubCauseCodeType   
                           // #108  reserved108   SubCauseCodeType   
                           // #109  reserved109   SubCauseCodeType   
                           // #110  reserved110   SubCauseCodeType   
                           // #111  reserved111   SubCauseCodeType   
                           // #112  reserved112   SubCauseCodeType   
                           // #113  reserved113   SubCauseCodeType   
                           // #114  reserved114   SubCauseCodeType   
                           // #115  reserved115   SubCauseCodeType   
                           // #116  reserved116   SubCauseCodeType   
                           // #117  reserved117   SubCauseCodeType   
                           // #118  reserved118   SubCauseCodeType   
                           // #119  reserved119   SubCauseCodeType   
                           // #120  reserved120   SubCauseCodeType   
                           // #121  reserved121   SubCauseCodeType   
                           // #122  reserved122   SubCauseCodeType   
                           // #123  reserved123   SubCauseCodeType   
                           // #124  reserved124   SubCauseCodeType   
                           // #125  reserved125   SubCauseCodeType   
                           // #126  reserved126   SubCauseCodeType   
                           // #127  reserved127   SubCauseCodeType   
                           // #128  reserved128   SubCauseCodeType   
                        uint8_t _choice_2 = *(buffer++);
                        
                        if(_choice_2 == 0) {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_293;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0.push_back(_tmp_293);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_294 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_294;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000165") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved0[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 1)  // CHOICE CauseCodeChoice  fieldName(traffic_condition1)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::TrafficConditionSubCauseCode _tmp_295;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1.push_back(_tmp_295);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_296 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_296;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000166") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 2)  // CHOICE CauseCodeChoice  fieldName(accident2)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::AccidentSubCauseCode _tmp_297;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2.push_back(_tmp_297);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_298 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_298;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000167") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.accident2[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 3)  // CHOICE CauseCodeChoice  fieldName(roadworks3)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::RoadworksSubCauseCode _tmp_299;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3.push_back(_tmp_299);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_300 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_300;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000168") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.roadworks3[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 4)  // CHOICE CauseCodeChoice  fieldName(reserved4)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_301;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4.push_back(_tmp_301);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_302 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_302;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000169") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved4[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 5)  // CHOICE CauseCodeChoice  fieldName(impassability5)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::ImpassabilitySubCauseCode _tmp_303;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5.push_back(_tmp_303);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_304 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_304;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000170") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.impassability5[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 6)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_adhesion6)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionAdhesionSubCauseCode _tmp_305;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.push_back(_tmp_305);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_306 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_306;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000171") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 7)  // CHOICE CauseCodeChoice  fieldName(aquaplaning7)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_307;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7.push_back(_tmp_307);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_308 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_308;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000172") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 8)  // CHOICE CauseCodeChoice  fieldName(reserved8)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_309;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8.push_back(_tmp_309);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_310 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_310;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000173") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved8[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 9)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_surface_condition9)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationSurfaceConditionSubCauseCode _tmp_311;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9.push_back(_tmp_311);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_312 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_312;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000174") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 10)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_obstacle_on_the_road10)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationObstacleOnTheRoadSubCauseCode _tmp_313;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.push_back(_tmp_313);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_314 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_314;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000175") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 11)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_animal_on_the_road11)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationAnimalOnTheRoadSubCauseCode _tmp_315;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.push_back(_tmp_315);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_316 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_316;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000176") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 12)  // CHOICE CauseCodeChoice  fieldName(human_presence_on_the_road12)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::HumanPresenceOnTheRoadSubCauseCode _tmp_317;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12.push_back(_tmp_317);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_318 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_318;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000177") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 13)  // CHOICE CauseCodeChoice  fieldName(reserved13)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_319;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13.push_back(_tmp_319);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_320 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_320;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000178") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved13[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 14)  // CHOICE CauseCodeChoice  fieldName(wrong_way_driving14)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::WrongWayDrivingSubCauseCode _tmp_321;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14.push_back(_tmp_321);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_322 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_322;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000179") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 15)  // CHOICE CauseCodeChoice  fieldName(rescue_and_recovery_work_in_progress15)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::RescueAndRecoveryWorkInProgressSubCauseCode _tmp_323;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.push_back(_tmp_323);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_324 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_324;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000180") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 16)  // CHOICE CauseCodeChoice  fieldName(reserved16)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_325;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16.push_back(_tmp_325);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_326 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_326;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000181") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved16[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 17)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_extreme_weather_condition17)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionExtremeWeatherConditionSubCauseCode _tmp_327;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.push_back(_tmp_327);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_328 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_328;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000182") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 18)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_visibility18)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionVisibilitySubCauseCode _tmp_329;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18.push_back(_tmp_329);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_330 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_330;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000183") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 19)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_precipitation19)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionPrecipitationSubCauseCode _tmp_331;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.push_back(_tmp_331);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_332 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_332;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000184") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 20)  // CHOICE CauseCodeChoice  fieldName(violence20)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_333;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20.push_back(_tmp_333);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_334 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_334;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000185") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.violence20[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 21)  // CHOICE CauseCodeChoice  fieldName(reserved21)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_335;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21.push_back(_tmp_335);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_336 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_336;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000186") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved21[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 22)  // CHOICE CauseCodeChoice  fieldName(reserved22)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_337;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22.push_back(_tmp_337);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_338 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_338;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000187") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved22[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 23)  // CHOICE CauseCodeChoice  fieldName(reserved23)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_339;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23.push_back(_tmp_339);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_340 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_340;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000188") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved23[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 24)  // CHOICE CauseCodeChoice  fieldName(reserved24)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_341;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24.push_back(_tmp_341);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_342 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_342;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000189") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved24[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 25)  // CHOICE CauseCodeChoice  fieldName(reserved25)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_343;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25.push_back(_tmp_343);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_344 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_344;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000190") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved25[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 26)  // CHOICE CauseCodeChoice  fieldName(slow_vehicle26)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SlowVehicleSubCauseCode _tmp_345;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26.push_back(_tmp_345);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_346 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_346;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000191") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 27)  // CHOICE CauseCodeChoice  fieldName(dangerous_end_of_queue27)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::DangerousEndOfQueueSubCauseCode _tmp_347;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27.push_back(_tmp_347);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_348 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_348;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000192") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 28)  // CHOICE CauseCodeChoice  fieldName(public_transport_vehicle_approaching28)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_349;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28.push_back(_tmp_349);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_350 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_350;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000193") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 29)  // CHOICE CauseCodeChoice  fieldName(reserved29)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_351;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29.push_back(_tmp_351);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_352 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_352;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000194") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved29[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 30)  // CHOICE CauseCodeChoice  fieldName(reserved30)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_353;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30.push_back(_tmp_353);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_354 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_354;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000195") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved30[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 31)  // CHOICE CauseCodeChoice  fieldName(reserved31)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_355;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31.push_back(_tmp_355);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_356 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_356;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000196") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved31[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 32)  // CHOICE CauseCodeChoice  fieldName(reserved32)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_357;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32.push_back(_tmp_357);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_358 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_358;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000197") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved32[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 33)  // CHOICE CauseCodeChoice  fieldName(reserved33)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_359;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33.push_back(_tmp_359);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_360 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_360;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000198") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved33[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 34)  // CHOICE CauseCodeChoice  fieldName(reserved34)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_361;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34.push_back(_tmp_361);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_362 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_362;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000199") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved34[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 35)  // CHOICE CauseCodeChoice  fieldName(reserved35)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_363;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35.push_back(_tmp_363);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_364 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_364;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000200") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved35[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 36)  // CHOICE CauseCodeChoice  fieldName(reserved36)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_365;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36.push_back(_tmp_365);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_366 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_366;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000201") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved36[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 37)  // CHOICE CauseCodeChoice  fieldName(reserved37)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_367;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37.push_back(_tmp_367);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_368 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_368;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000202") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved37[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 38)  // CHOICE CauseCodeChoice  fieldName(reserved38)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_369;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38.push_back(_tmp_369);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_370 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_370;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000203") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved38[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 39)  // CHOICE CauseCodeChoice  fieldName(reserved39)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_371;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39.push_back(_tmp_371);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_372 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_372;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000204") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved39[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 40)  // CHOICE CauseCodeChoice  fieldName(reserved40)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_373;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40.push_back(_tmp_373);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_374 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_374;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000205") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved40[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 41)  // CHOICE CauseCodeChoice  fieldName(reserved41)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_375;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41.push_back(_tmp_375);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_376 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_376;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000206") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved41[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 42)  // CHOICE CauseCodeChoice  fieldName(reserved42)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_377;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42.push_back(_tmp_377);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_378 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_378;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000207") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved42[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 43)  // CHOICE CauseCodeChoice  fieldName(reserved43)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_379;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43.push_back(_tmp_379);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_380 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_380;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000208") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved43[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 44)  // CHOICE CauseCodeChoice  fieldName(reserved44)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_381;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44.push_back(_tmp_381);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_382 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_382;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000209") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved44[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 45)  // CHOICE CauseCodeChoice  fieldName(reserved45)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_383;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45.push_back(_tmp_383);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_384 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_384;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000210") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved45[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 46)  // CHOICE CauseCodeChoice  fieldName(reserved46)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_385;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46.push_back(_tmp_385);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_386 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_386;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000211") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved46[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 47)  // CHOICE CauseCodeChoice  fieldName(reserved47)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_387;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47.push_back(_tmp_387);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_388 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_388;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000212") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved47[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 48)  // CHOICE CauseCodeChoice  fieldName(reserved48)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_389;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48.push_back(_tmp_389);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_390 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_390;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000213") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved48[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 49)  // CHOICE CauseCodeChoice  fieldName(reserved49)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_391;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49.push_back(_tmp_391);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_392 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_392;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000214") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved49[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 50)  // CHOICE CauseCodeChoice  fieldName(reserved50)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_393;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50.push_back(_tmp_393);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_394 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_394;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000215") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved50[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 51)  // CHOICE CauseCodeChoice  fieldName(reserved51)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_395;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51.push_back(_tmp_395);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_396 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_396;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000216") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved51[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 52)  // CHOICE CauseCodeChoice  fieldName(reserved52)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_397;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52.push_back(_tmp_397);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_398 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_398;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000217") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved52[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 53)  // CHOICE CauseCodeChoice  fieldName(reserved53)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_399;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53.push_back(_tmp_399);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_400 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_400;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000218") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved53[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 54)  // CHOICE CauseCodeChoice  fieldName(reserved54)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_401;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54.push_back(_tmp_401);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_402 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_402;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000219") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved54[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 55)  // CHOICE CauseCodeChoice  fieldName(reserved55)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_403;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55.push_back(_tmp_403);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_404 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_404;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000220") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved55[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 56)  // CHOICE CauseCodeChoice  fieldName(reserved56)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_405;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56.push_back(_tmp_405);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_406 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_406;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000221") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved56[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 57)  // CHOICE CauseCodeChoice  fieldName(reserved57)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_407;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57.push_back(_tmp_407);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_408 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_408;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000222") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved57[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 58)  // CHOICE CauseCodeChoice  fieldName(reserved58)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_409;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58.push_back(_tmp_409);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_410 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_410;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000223") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved58[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 59)  // CHOICE CauseCodeChoice  fieldName(reserved59)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_411;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59.push_back(_tmp_411);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_412 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_412;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000224") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved59[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 60)  // CHOICE CauseCodeChoice  fieldName(reserved60)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_413;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60.push_back(_tmp_413);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_414 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_414;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000225") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved60[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 61)  // CHOICE CauseCodeChoice  fieldName(reserved61)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_415;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61.push_back(_tmp_415);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_416 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_416;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000226") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved61[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 62)  // CHOICE CauseCodeChoice  fieldName(reserved62)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_417;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62.push_back(_tmp_417);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_418 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_418;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000227") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved62[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 63)  // CHOICE CauseCodeChoice  fieldName(reserved63)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_419;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63.push_back(_tmp_419);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_420 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_420;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000228") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved63[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 64)  // CHOICE CauseCodeChoice  fieldName(reserved64)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_421;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64.push_back(_tmp_421);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_422 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_422;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000229") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved64[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 65)  // CHOICE CauseCodeChoice  fieldName(reserved65)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_423;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65.push_back(_tmp_423);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_424 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_424;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000230") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved65[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 66)  // CHOICE CauseCodeChoice  fieldName(reserved66)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_425;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66.push_back(_tmp_425);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_426 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_426;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000231") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved66[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 67)  // CHOICE CauseCodeChoice  fieldName(reserved67)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_427;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67.push_back(_tmp_427);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_428 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_428;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000232") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved67[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 68)  // CHOICE CauseCodeChoice  fieldName(reserved68)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_429;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68.push_back(_tmp_429);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_430 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_430;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000233") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved68[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 69)  // CHOICE CauseCodeChoice  fieldName(reserved69)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_431;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69.push_back(_tmp_431);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_432 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_432;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000234") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved69[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 70)  // CHOICE CauseCodeChoice  fieldName(reserved70)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_433;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70.push_back(_tmp_433);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_434 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_434;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000235") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved70[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 71)  // CHOICE CauseCodeChoice  fieldName(reserved71)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_435;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71.push_back(_tmp_435);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_436 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_436;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000236") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved71[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 72)  // CHOICE CauseCodeChoice  fieldName(reserved72)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_437;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72.push_back(_tmp_437);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_438 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_438;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000237") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved72[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 73)  // CHOICE CauseCodeChoice  fieldName(reserved73)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_439;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73.push_back(_tmp_439);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_440 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_440;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000238") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved73[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 74)  // CHOICE CauseCodeChoice  fieldName(reserved74)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_441;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74.push_back(_tmp_441);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_442 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_442;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000239") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved74[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 75)  // CHOICE CauseCodeChoice  fieldName(reserved75)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_443;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75.push_back(_tmp_443);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_444 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_444;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000240") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved75[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 76)  // CHOICE CauseCodeChoice  fieldName(reserved76)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_445;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76.push_back(_tmp_445);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_446 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_446;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000241") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved76[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 77)  // CHOICE CauseCodeChoice  fieldName(reserved77)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_447;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77.push_back(_tmp_447);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_448 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_448;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000242") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved77[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 78)  // CHOICE CauseCodeChoice  fieldName(reserved78)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_449;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78.push_back(_tmp_449);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_450 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_450;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000243") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved78[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 79)  // CHOICE CauseCodeChoice  fieldName(reserved79)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_451;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79.push_back(_tmp_451);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_452 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_452;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000244") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved79[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 80)  // CHOICE CauseCodeChoice  fieldName(reserved80)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_453;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80.push_back(_tmp_453);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_454 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_454;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000245") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved80[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 81)  // CHOICE CauseCodeChoice  fieldName(reserved81)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_455;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81.push_back(_tmp_455);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_456 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_456;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000246") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved81[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 82)  // CHOICE CauseCodeChoice  fieldName(reserved82)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_457;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82.push_back(_tmp_457);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_458 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_458;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000247") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved82[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 83)  // CHOICE CauseCodeChoice  fieldName(reserved83)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_459;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83.push_back(_tmp_459);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_460 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_460;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000248") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved83[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 84)  // CHOICE CauseCodeChoice  fieldName(reserved84)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_461;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84.push_back(_tmp_461);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_462 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_462;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000249") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved84[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 85)  // CHOICE CauseCodeChoice  fieldName(reserved85)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_463;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85.push_back(_tmp_463);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_464 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_464;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000250") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved85[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 86)  // CHOICE CauseCodeChoice  fieldName(reserved86)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_465;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86.push_back(_tmp_465);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_466 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_466;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000251") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved86[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 87)  // CHOICE CauseCodeChoice  fieldName(reserved87)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_467;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87.push_back(_tmp_467);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_468 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_468;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000252") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved87[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 88)  // CHOICE CauseCodeChoice  fieldName(reserved88)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_469;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88.push_back(_tmp_469);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_470 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_470;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000253") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved88[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 89)  // CHOICE CauseCodeChoice  fieldName(reserved89)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_471;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89.push_back(_tmp_471);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_472 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_472;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000254") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved89[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 90)  // CHOICE CauseCodeChoice  fieldName(reserved90)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_473;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90.push_back(_tmp_473);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_474 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_474;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000255") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved90[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 91)  // CHOICE CauseCodeChoice  fieldName(vehicle_breakdown91)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::VehicleBreakdownSubCauseCode _tmp_475;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91.push_back(_tmp_475);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_476 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_476;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000256") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 92)  // CHOICE CauseCodeChoice  fieldName(post_crash92)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::PostCrashSubCauseCode _tmp_477;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92.push_back(_tmp_477);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_478 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_478;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000257") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.post_crash92[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 93)  // CHOICE CauseCodeChoice  fieldName(human_problem93)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::HumanProblemSubCauseCode _tmp_479;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93.push_back(_tmp_479);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_480 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_480;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000258") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.human_problem93[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 94)  // CHOICE CauseCodeChoice  fieldName(stationary_vehicle94)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::StationaryVehicleSubCauseCode _tmp_481;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94.push_back(_tmp_481);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_482 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_482;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000259") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 95)  // CHOICE CauseCodeChoice  fieldName(emergency_vehicle_approaching95)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::EmergencyVehicleApproachingSubCauseCode _tmp_483;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95.push_back(_tmp_483);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_484 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_484;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000260") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 96)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_dangerous_curve96)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationDangerousCurveSubCauseCode _tmp_485;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.push_back(_tmp_485);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_486 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_486;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000261") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 97)  // CHOICE CauseCodeChoice  fieldName(collision_risk97)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::CollisionRiskSubCauseCode _tmp_487;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97.push_back(_tmp_487);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_488 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_488;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000262") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 98)  // CHOICE CauseCodeChoice  fieldName(signal_violation98)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SignalViolationSubCauseCode _tmp_489;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98.push_back(_tmp_489);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_490 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_490;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000263") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 99)  // CHOICE CauseCodeChoice  fieldName(dangerous_situation99)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::DangerousSituationSubCauseCode _tmp_491;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99.push_back(_tmp_491);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_492 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_492;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000264") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 100)  // CHOICE CauseCodeChoice  fieldName(railway_level_crossing100)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::RailwayLevelCrossingSubCauseCode _tmp_493;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100.push_back(_tmp_493);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_494 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_494;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000265") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 101)  // CHOICE CauseCodeChoice  fieldName(reserved101)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_495;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101.push_back(_tmp_495);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_496 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_496;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000266") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved101[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 102)  // CHOICE CauseCodeChoice  fieldName(reserved102)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_497;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102.push_back(_tmp_497);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_498 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_498;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000267") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved102[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 103)  // CHOICE CauseCodeChoice  fieldName(reserved103)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_499;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103.push_back(_tmp_499);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_500 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_500;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000268") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved103[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 104)  // CHOICE CauseCodeChoice  fieldName(reserved104)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_501;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104.push_back(_tmp_501);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_502 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_502;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000269") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved104[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 105)  // CHOICE CauseCodeChoice  fieldName(reserved105)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_503;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105.push_back(_tmp_503);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_504 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_504;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000270") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved105[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 106)  // CHOICE CauseCodeChoice  fieldName(reserved106)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_505;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106.push_back(_tmp_505);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_506 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_506;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000271") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved106[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 107)  // CHOICE CauseCodeChoice  fieldName(reserved107)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_507;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107.push_back(_tmp_507);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_508 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_508;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000272") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved107[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 108)  // CHOICE CauseCodeChoice  fieldName(reserved108)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_509;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108.push_back(_tmp_509);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_510 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_510;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000273") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved108[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 109)  // CHOICE CauseCodeChoice  fieldName(reserved109)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_511;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109.push_back(_tmp_511);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_512 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_512;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000274") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved109[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 110)  // CHOICE CauseCodeChoice  fieldName(reserved110)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_513;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110.push_back(_tmp_513);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_514 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_514;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000275") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved110[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 111)  // CHOICE CauseCodeChoice  fieldName(reserved111)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_515;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111.push_back(_tmp_515);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_516 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_516;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000276") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved111[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 112)  // CHOICE CauseCodeChoice  fieldName(reserved112)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_517;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112.push_back(_tmp_517);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_518 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_518;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000277") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved112[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 113)  // CHOICE CauseCodeChoice  fieldName(reserved113)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_519;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113.push_back(_tmp_519);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_520 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_520;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000278") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved113[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 114)  // CHOICE CauseCodeChoice  fieldName(reserved114)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_521;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114.push_back(_tmp_521);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_522 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_522;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000279") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved114[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 115)  // CHOICE CauseCodeChoice  fieldName(reserved115)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_523;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115.push_back(_tmp_523);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_524 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_524;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000280") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved115[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 116)  // CHOICE CauseCodeChoice  fieldName(reserved116)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_525;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116.push_back(_tmp_525);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_526 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_526;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000281") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved116[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 117)  // CHOICE CauseCodeChoice  fieldName(reserved117)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_527;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117.push_back(_tmp_527);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_528 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_528;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000282") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved117[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 118)  // CHOICE CauseCodeChoice  fieldName(reserved118)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_529;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118.push_back(_tmp_529);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_530 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_530;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000283") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved118[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 119)  // CHOICE CauseCodeChoice  fieldName(reserved119)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_531;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119.push_back(_tmp_531);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_532 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_532;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000284") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved119[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 120)  // CHOICE CauseCodeChoice  fieldName(reserved120)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_533;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120.push_back(_tmp_533);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_534 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_534;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000285") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved120[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 121)  // CHOICE CauseCodeChoice  fieldName(reserved121)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_535;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121.push_back(_tmp_535);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_536 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_536;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000286") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved121[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 122)  // CHOICE CauseCodeChoice  fieldName(reserved122)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_537;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122.push_back(_tmp_537);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_538 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_538;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000287") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved122[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 123)  // CHOICE CauseCodeChoice  fieldName(reserved123)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_539;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123.push_back(_tmp_539);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_540 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_540;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000288") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved123[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 124)  // CHOICE CauseCodeChoice  fieldName(reserved124)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_541;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124.push_back(_tmp_541);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_542 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_542;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000289") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved124[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 125)  // CHOICE CauseCodeChoice  fieldName(reserved125)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_543;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125.push_back(_tmp_543);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_544 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_544;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000290") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved125[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 126)  // CHOICE CauseCodeChoice  fieldName(reserved126)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_545;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126.push_back(_tmp_545);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_546 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_546;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000291") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved126[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 127)  // CHOICE CauseCodeChoice  fieldName(reserved127)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_547;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127.push_back(_tmp_547);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_548 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_548;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000292") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved127[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else if(_choice_2 == 128)  // CHOICE CauseCodeChoice  fieldName(reserved128)
                        {
                            its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_549;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128.push_back(_tmp_549);
                        
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_550 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_550;
                            ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000293") << "| " << tools::getTypeName(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value) << 
                                             " denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_cause[0].cc_and_scc.reserved128[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_2) << ") selected in CHOICE CauseCodeChoice in 'denm.situation[0].linked_cause[0].cc_and_scc'; message dropped.";
                            return false;
                        }
                        if(*_ext_flag_18) { // from ros->denm.situation[0].linked_cause[0]. 
                            uint8_t* _tmp_551 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_3[*_tmp_551];
                            
                            if(debug)
                                logger->print() << "|" << tools::brown("000294") << "| Reading number of exts from ros->denm.situation[0].linked_cause[0].: " << static_cast<unsigned int>(*_tmp_551);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_551; i++)
                                _array_3[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_551; i++) {
                                uint16_t* _tmp_552 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_552; i++)
                                    buffer++;
                            }
                            
                        }
                }
                
                if(ros->denm.situation[0].event_zone.size() != 0) {
                    // Field name: event_zone
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(1) max(23) span(23)
                    int16_t* _tmp_553 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_553;
                    __aux64__ += 1;     // +min
                    
                    int _if__tmp_553 = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000295") << "| SequenceOf ros->denm.situation[0].event_zone[0]. size: " << int(__aux64__);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 23) {
                        logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].value' " << (__aux64__) << " exceeds max allowable (23); message dropped.";
                        return false;
                    }
                    
                    
                    for(int a = 0; a < _if__tmp_553; a++) {
                        its_container_v4_etsi_its_cdd_msgs::msg::EventPoint seqof_a;  // SEQUENCE
                        ros->denm.situation[0].event_zone[0].elements.push_back(seqof_a);
                    
                            // EventPoint  SEQUENCE
                                //  eventPosition      DeltaReferencePosition     
                                //  eventDeltaTime     PathDeltaTime            OPTIONAL  
                                //  informationQuality InformationQuality         
                            if(*(buffer++)) { 
                                its_container_v4_etsi_its_cdd_msgs::msg::PathDeltaTime _tmp_554;
                                ros->denm.situation[0].event_zone[0].elements[a].event_delta_time.push_back(_tmp_554);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000296") << "| ros->denm.situation[0].event_zone[0].elements[a].event_delta_time " << tools::green("present");
                            }
                            
                            // Field name: event_position
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                
                                // Field name: delta_latitude
                                // Real
                                // Double
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                uint32_t* _tmp_555 = (uint32_t*) buffer; buffer += 4;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value = *_tmp_555;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value += -131071;
                                __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value /= 1.0E7;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000297") << "| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value) << " denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude: " <<
                                                 ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_latitude.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: delta_longitude
                                // Real
                                // Double
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                uint32_t* _tmp_556 = (uint32_t*) buffer; buffer += 4;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value = *_tmp_556;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value += -131071;
                                __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value /= 1.0E7;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000298") << "| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value) << " denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude: " <<
                                                 ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_longitude.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: delta_altitude
                                // Real
                                // Float
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_557 = (uint16_t*) buffer; buffer += 2;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value = *_tmp_557;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value += -12700;
                                __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value;
                                ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value' " << (__aux64__) << " is less than allowable (-12700); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value' " << (__aux64__) << " exceeds max allowable (12800); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000299") << "| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value) << " denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude: " <<
                                                 ros->denm.situation[0].event_zone[0].elements[a].event_position.delta_altitude.value << " (" << __aux64__ << ")";
                                }
                            
                            if(ros->denm.situation[0].event_zone[0].elements[a].event_delta_time.size() != 0) {
                                // Field name: event_delta_time
                                // Real
                                // Float
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                uint8_t* _ext_flag_23 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000300") << "| Reading ext flag from ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].: " << int(*_ext_flag_23);
                                }
                                
                                if(*_ext_flag_23) {
                                    uint8_t* _tmp_559 = (uint8_t*) buffer++;
                                    
                                    if(*_tmp_559) {
                                        uint64_t* _tmp_560 = (uint64_t*)buffer; buffer += 8;
                                        ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value = *_tmp_560;
                                        ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value += INT64_MIN;
                                        __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                        ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value /= 100.0;
                                    }
                                    else
                                    {
                                        uint32_t* _tmp_560 = (uint32_t*) buffer; buffer += 4;
                                        ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value = *_tmp_560;
                                        ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value += INT32_MIN;
                                        __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                        ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value /= 100.0;
                                    }
                                }
                                else
                                {
                                    uint16_t* _tmp_558 = (uint16_t*) buffer; buffer += 2;
                                    ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value = *_tmp_558;
                                    ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value += 1;
                                    __aux64__ = ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value;
                                    ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value /= 100.0;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000301") << "| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value) << " denm.situation[0].event_zone[0].elements[a].event_delta_time[0]: " <<
                                                 ros->denm.situation[0].event_zone[0].elements[a].event_delta_time[0].value << " (" << __aux64__ << ")";
                                }
                            }
                            
                            // Field name: information_quality
                            // Integer
                            // UINT8  min(0) max(7) span(8) datatype(UInt8)
                            uint8_t* _tmp_561 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_561;
                            ros->denm.situation[0].event_zone[0].elements[a].information_quality.value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000302") << "| " << tools::getTypeName(ros->denm.situation[0].event_zone[0].elements[a].information_quality.value) << 
                                             " denm.situation[0].event_zone[0].elements[a].information_quality.value: " << static_cast<int>(ros->denm.situation[0].event_zone[0].elements[a].information_quality.value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].information_quality.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                logger->error() << "Error: Value in 'denm.situation[0].event_zone[0].elements[a].information_quality.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                return false;
                            }
                    }
                }
                if(*_ext_flag_15) { // from ros->denm.situation[0]. 
                    uint8_t* _tmp_562 = (uint8_t*) buffer++;  // number of extensions
                    bool _array_4[*_tmp_562];
                    
                    if(debug)
                        logger->print() << "|" << tools::brown("000303") << "| Reading number of exts from ros->denm.situation[0].: " << static_cast<unsigned int>(*_tmp_562);
                    
                    // Extensions bytemap
                    for(int i = 0; i < *_tmp_562; i++)
                        _array_4[i] = (*buffer++) != 0;
                    
                    if(_array_4[0]) {  // Extension group 1
                        uint16_t* _tmp_563 = (uint16_t*)buffer;  // OpenType length
                        buffer += 2;
                    
                        if(debug) 
                            logger->print() << "|" << tools::brown("000304") << "| Reading open type len from ros->denm.situation[0].: " << _tmp_563;
                    
                        // Optional fields bytemap
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::ActionIdList _tmp_564;
                            ros->denm.situation[0].linked_denms.push_back(_tmp_564);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000305") << "| ros->denm.situation[0].linked_denms " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::Position1d _tmp_565;
                            ros->denm.situation[0].event_end.push_back(_tmp_565);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000306") << "| ros->denm.situation[0].event_end " << tools::green("present");
                        }
                        
                        if(ros->denm.situation[0].linked_denms.size() != 0) {
                            // Field name: linked_denms
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8)
                            uint8_t* _ext_flag_24 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.situation[0].linked_denms[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000307") << "| Reading ext flag from ros->denm.situation[0].linked_denms[0].: " << int(*_ext_flag_24);
                            }
                            
                            int16_t* _tmp_566 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_566;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_566 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000308") << "| SequenceOf ros->denm.situation[0].linked_denms[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_denms[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                logger->error() << "Error: Value in 'denm.situation[0].linked_denms[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                return false;
                            }
                            
                            
                            for(int b = 0; b < _if__tmp_566; b++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::ActionId seqof_b;  // SEQUENCE
                                ros->denm.situation[0].linked_denms[0].elements.push_back(seqof_b);
                            
                                    // ActionId  SEQUENCE
                                        //  originatingStationId StationId          
                                        //  sequenceNumber       SequenceNumber     
                                    
                                    // Field name: originating_station_id
                                    // Integer
                                    // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
                                    uint32_t* _tmp_567 = (uint32_t*) buffer; buffer += 4;
                                    __aux64__ = *_tmp_567;
                                    ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000309") << "| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value) << 
                                                     " denm.situation[0].linked_denms[0].elements[b].originating_station_id.value: " << ros->denm.situation[0].linked_denms[0].elements[b].originating_station_id.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].originating_station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                        logger->error() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].originating_station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: sequence_number
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_568 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_568;
                                    ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000310") << "| " << tools::getTypeName(ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value) << 
                                                     " denm.situation[0].linked_denms[0].elements[b].sequence_number.value: " << ros->denm.situation[0].linked_denms[0].elements[b].sequence_number.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].sequence_number.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->error() << "Error: Value in 'denm.situation[0].linked_denms[0].elements[b].sequence_number.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                            }
                        }
                        
                        if(ros->denm.situation[0].event_end.size() != 0) {
                            // Field name: event_end
                            // Integer
                            // INT16  min(-8190) max(8191) span(16382) datatype(Int16)
                            uint16_t* _tmp_569 = (uint16_t*) buffer; buffer += 2;
                            __aux64__ = *_tmp_569;
                            __aux64__ += -8190;
                            ros->denm.situation[0].event_end[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000311") << "| " << tools::getTypeName(ros->denm.situation[0].event_end[0].value) << 
                                             " denm.situation[0].event_end[0].value: " << ros->denm.situation[0].event_end[0].value;
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < -8190) {
                                logger->error() << "Error: Value in 'denm.situation[0].event_end[0].value' " << (__aux64__) << " is less than allowable (-8190); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 8191) {
                                logger->error() << "Error: Value in 'denm.situation[0].event_end[0].value' " << (__aux64__) << " exceeds max allowable (8191); message dropped.";
                                return false;
                            }
                        }
                    
                    }
                    
                    // Discarding unknown OpenType containers
                    for(int i = 1; i < *_tmp_562; i++) {
                        uint16_t* _tmp_570 = (uint16_t*)buffer;  // OpenType length
                        buffer += 2;
                    
                        if(debug) {
                        }
                    
                        for(int i = 0; i < *_tmp_570; i++)
                            buffer++;
                    }
                    
                }
        }
        
        if(ros->denm.location.size() != 0) {
            // Field name: location
                // LocationContainer  SEQUENCE
                    //  eventSpeed                          Speed                         OPTIONAL  
                    //  eventPositionHeading                Wgs84Angle                    OPTIONAL  
                    //  detectionZonesToEventPosition       Traces                          
                    //  roadType                            RoadType                      OPTIONAL  
                    //  lanePositions                       GeneralizedLanePositions      OPTIONAL  Extension group #1
                    //  occupiedLanes                       OccupiedLanesWithConfidence   OPTIONAL  Extension group #1
                    //  linkedIvims                         IvimReferences                OPTIONAL  Extension group #1
                    //  linkedMapems                        MapReferences                 OPTIONAL  Extension group #1
                    //  detectionZonesToSpecifiedEventPoint TracesExtended                OPTIONAL  Extension group #1
                    //  predictedPaths                      PathPredictedList             OPTIONAL  Extension group #1
                uint8_t* _ext_flag_25 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000312") << "| Reading ext flag from ros->denm.location[0].: " << int(*_ext_flag_25);
                }
                
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::Speed _tmp_571;
                    ros->denm.location[0].event_speed.push_back(_tmp_571);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000313") << "| ros->denm.location[0].event_speed " << tools::green("present");
                }
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::Wgs84Angle _tmp_572;
                    ros->denm.location[0].event_position_heading.push_back(_tmp_572);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000314") << "| ros->denm.location[0].event_position_heading " << tools::green("present");
                }
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::RoadType _tmp_573;
                    ros->denm.location[0].road_type.push_back(_tmp_573);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000315") << "| ros->denm.location[0].road_type " << tools::green("present");
                }
                
                if(ros->denm.location[0].event_speed.size() != 0) {
                    // Field name: event_speed
                        // Speed  SEQUENCE
                            //  speedValue      SpeedValue          
                            //  speedConfidence SpeedConfidence     
                        
                        // Field name: speed_value
                        // Real
                        // Float
                        // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                        uint16_t* _tmp_574 = (uint16_t*) buffer; buffer += 2;
                        ros->denm.location[0].event_speed[0].speed_value.value = *_tmp_574;
                        __aux64__ = ros->denm.location[0].event_speed[0].speed_value.value;
                        ros->denm.location[0].event_speed[0].speed_value.value /= 100.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                            logger->error() << "Error: Value in 'denm.location[0].event_speed[0].speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000316") << "| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_value.value) << " denm.location[0].event_speed[0].speed_value: " <<
                                         ros->denm.location[0].event_speed[0].speed_value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: speed_confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        uint8_t* _tmp_575 = (uint8_t*) buffer++;
                        ros->denm.location[0].event_speed[0].speed_confidence.value = *_tmp_575;
                        ros->denm.location[0].event_speed[0].speed_confidence.value += 1;
                        __aux64__ = ros->denm.location[0].event_speed[0].speed_confidence.value;
                        ros->denm.location[0].event_speed[0].speed_confidence.value /= 100.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->error() << "Error: Value in 'denm.location[0].event_speed[0].speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000317") << "| " << tools::getTypeName(ros->denm.location[0].event_speed[0].speed_confidence.value) << " denm.location[0].event_speed[0].speed_confidence: " <<
                                         ros->denm.location[0].event_speed[0].speed_confidence.value << " (" << __aux64__ << ")";
                        }
                }
                
                if(ros->denm.location[0].event_position_heading.size() != 0) {
                    // Field name: event_position_heading
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        
                        // Field name: value
                        // Real
                        // Float
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        uint16_t* _tmp_576 = (uint16_t*) buffer; buffer += 2;
                        ros->denm.location[0].event_position_heading[0].value.value = *_tmp_576;
                        __aux64__ = ros->denm.location[0].event_position_heading[0].value.value;
                        ros->denm.location[0].event_position_heading[0].value.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->error() << "Error: Value in 'denm.location[0].event_position_heading[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000318") << "| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].value.value) << " denm.location[0].event_position_heading[0].value: " <<
                                         ros->denm.location[0].event_position_heading[0].value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_577 = (uint8_t*) buffer++;
                        ros->denm.location[0].event_position_heading[0].confidence.value = *_tmp_577;
                        ros->denm.location[0].event_position_heading[0].confidence.value += 1;
                        __aux64__ = ros->denm.location[0].event_position_heading[0].confidence.value;
                        ros->denm.location[0].event_position_heading[0].confidence.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->error() << "Error: Value in 'denm.location[0].event_position_heading[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000319") << "| " << tools::getTypeName(ros->denm.location[0].event_position_heading[0].confidence.value) << " denm.location[0].event_position_heading[0].confidence: " <<
                                         ros->denm.location[0].event_position_heading[0].confidence.value << " (" << __aux64__ << ")";
                        }
                }
                
                // Field name: detection_zones_to_event_position
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(7) span(7)
                int16_t* _tmp_578 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_578;
                __aux64__ += 1;     // +min
                
                int _if__tmp_578 = __aux64__;
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000320") << "| SequenceOf ros->denm.location[0].detection_zones_to_event_position. size: " << int(__aux64__);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 7) {
                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                    return false;
                }
                
                
                for(int c = 0; c < _if__tmp_578; c++) {
                    its_container_v4_etsi_its_cdd_msgs::msg::Path seqof_c;  // SEQUENCE_OF
                    ros->denm.location[0].detection_zones_to_event_position.elements.push_back(seqof_c);
                
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(40) span(41)
                    int16_t* _tmp_579 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_579;
                    
                    int _if__tmp_579 = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000321") << "| SequenceOf ros->denm.location[0].detection_zones_to_event_position.elements[c]. size: " << int(__aux64__);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 40) {
                        logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].value' " << (__aux64__) << " exceeds max allowable (40); message dropped.";
                        return false;
                    }
                    
                    
                    for(int d = 0; d < _if__tmp_579; d++) {
                        its_container_v4_etsi_its_cdd_msgs::msg::PathPoint seqof_d;  // SEQUENCE
                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements.push_back(seqof_d);
                    
                            // PathPoint  SEQUENCE
                                //  pathPosition  DeltaReferencePosition     
                                //  pathDeltaTime PathDeltaTime            OPTIONAL  
                            if(*(buffer++)) { 
                                its_container_v4_etsi_its_cdd_msgs::msg::PathDeltaTime _tmp_580;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time.push_back(_tmp_580);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000322") << "| ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time " << tools::green("present");
                            }
                            
                            // Field name: path_position
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                
                                // Field name: delta_latitude
                                // Real
                                // Double
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                uint32_t* _tmp_581 = (uint32_t*) buffer; buffer += 4;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value = *_tmp_581;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value += -131071;
                                __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value /= 1.0E7;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000323") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value) << " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude: " <<
                                                 ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_latitude.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: delta_longitude
                                // Real
                                // Double
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                uint32_t* _tmp_582 = (uint32_t*) buffer; buffer += 4;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value = *_tmp_582;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value += -131071;
                                __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value /= 1.0E7;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000324") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value) << " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude: " <<
                                                 ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_longitude.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: delta_altitude
                                // Real
                                // Float
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_583 = (uint16_t*) buffer; buffer += 2;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value = *_tmp_583;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value += -12700;
                                __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value;
                                ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value' " << (__aux64__) << " is less than allowable (-12700); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value' " << (__aux64__) << " exceeds max allowable (12800); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000325") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value) << " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude: " <<
                                                 ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_position.delta_altitude.value << " (" << __aux64__ << ")";
                                }
                            
                            if(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time.size() != 0) {
                                // Field name: path_delta_time
                                // Real
                                // Float
                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                uint8_t* _ext_flag_33 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000326") << "| Reading ext flag from ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].: " << int(*_ext_flag_33);
                                }
                                
                                if(*_ext_flag_33) {
                                    uint8_t* _tmp_585 = (uint8_t*) buffer++;
                                    
                                    if(*_tmp_585) {
                                        uint64_t* _tmp_586 = (uint64_t*)buffer; buffer += 8;
                                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value = *_tmp_586;
                                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value += INT64_MIN;
                                        __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value /= 100.0;
                                    }
                                    else
                                    {
                                        uint32_t* _tmp_586 = (uint32_t*) buffer; buffer += 4;
                                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value = *_tmp_586;
                                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value += INT32_MIN;
                                        __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                        ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value /= 100.0;
                                    }
                                }
                                else
                                {
                                    uint16_t* _tmp_584 = (uint16_t*) buffer; buffer += 2;
                                    ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value = *_tmp_584;
                                    ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value += 1;
                                    __aux64__ = ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value;
                                    ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value /= 100.0;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000327") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value) << " denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0]: " <<
                                                 ros->denm.location[0].detection_zones_to_event_position.elements[c].elements[d].path_delta_time[0].value << " (" << __aux64__ << ")";
                                }
                            }
                    }
                    
                }
                
                if(ros->denm.location[0].road_type.size() != 0) {
                    // Field name: road_type
                    // Enumerated
                    // INT32  min(0) max(3) span(4) datatype(Int32)
                    uint8_t* _tmp_587 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_587;
                    __aux64__ += 0;
                    ros->denm.location[0].road_type[0].value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.location[0].road_type[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3) {
                        logger->error() << "Error: Value in 'denm.location[0].road_type[0].value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000328") << "| " << tools::getTypeName(ros->denm.location[0].road_type[0].value) << 
                                     " denm.location[0].road_type[0].value: " << static_cast<int>(ros->denm.location[0].road_type[0].value);
                    }
                }
                if(*_ext_flag_25) { // from ros->denm.location[0]. 
                    uint8_t* _tmp_588 = (uint8_t*) buffer++;  // number of extensions
                    bool _array_5[*_tmp_588];
                    
                    if(debug)
                        logger->print() << "|" << tools::brown("000329") << "| Reading number of exts from ros->denm.location[0].: " << static_cast<unsigned int>(*_tmp_588);
                    
                    // Extensions bytemap
                    for(int i = 0; i < *_tmp_588; i++)
                        _array_5[i] = (*buffer++) != 0;
                    
                    if(_array_5[0]) {  // Extension group 1
                        uint16_t* _tmp_589 = (uint16_t*)buffer;  // OpenType length
                        buffer += 2;
                    
                        if(debug) 
                            logger->print() << "|" << tools::brown("000330") << "| Reading open type len from ros->denm.location[0].: " << _tmp_589;
                    
                        // Optional fields bytemap
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::GeneralizedLanePositions _tmp_590;
                            ros->denm.location[0].lane_positions.push_back(_tmp_590);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000331") << "| ros->denm.location[0].lane_positions " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::OccupiedLanesWithConfidence _tmp_591;
                            ros->denm.location[0].occupied_lanes.push_back(_tmp_591);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000332") << "| ros->denm.location[0].occupied_lanes " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::IvimReferences _tmp_592;
                            ros->denm.location[0].linked_ivims.push_back(_tmp_592);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000333") << "| ros->denm.location[0].linked_ivims " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::MapReferences _tmp_593;
                            ros->denm.location[0].linked_mapems.push_back(_tmp_593);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000334") << "| ros->denm.location[0].linked_mapems " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::TracesExtended _tmp_594;
                            ros->denm.location[0].detection_zones_to_specified_event_point.push_back(_tmp_594);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000335") << "| ros->denm.location[0].detection_zones_to_specified_event_point " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::PathPredictedList _tmp_595;
                            ros->denm.location[0].predicted_paths.push_back(_tmp_595);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000336") << "| ros->denm.location[0].predicted_paths " << tools::green("present");
                        }
                        
                        if(ros->denm.location[0].lane_positions.size() != 0) {
                            // Field name: lane_positions
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(4) span(4)
                            int16_t* _tmp_596 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_596;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_596 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000337") << "| SequenceOf ros->denm.location[0].lane_positions[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                return false;
                            }
                            
                            
                            for(int e = 0; e < _if__tmp_596; e++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::GeneralizedLanePosition seqof_e;  // SEQUENCE
                                ros->denm.location[0].lane_positions[0].elements.push_back(seqof_e);
                            
                                    // GeneralizedLanePosition  SEQUENCE
                                        //  lanePositionBased LanePositionOptions     
                                        //  mapBased          MapPosition           OPTIONAL  
                                        //  confidence        MetaInformation         
                                        //  ...
                                    uint8_t* _ext_flag_35 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000338") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].: " << int(*_ext_flag_35);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::MapPosition _tmp_597;
                                        ros->denm.location[0].lane_positions[0].elements[e].map_based.push_back(_tmp_597);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000339") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based " << tools::green("present");
                                    }
                                    
                                    // Field name: lane_position_based
                                    // Choice
                                    uint8_t* _ext_flag_36 = (uint8_t*)buffer++; // ext flag
                                    
                                       // #0  simplelanePosition   LanePosition   
                                       // #1  simpleLaneType   LaneType   
                                       // #2  detailedlanePosition   LanePositionAndType   
                                       // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails   
                                       // #4  trafficIslandPosition   TrafficIslandPosition   
                                    uint8_t _choice_3 = *(buffer++);
                                    
                                    if(*_ext_flag_36)
                                        _choice_3 += 4 + 1; // Ext addition
                                    
                                    if(_choice_3 == 0) {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePosition _tmp_598;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position.push_back(_tmp_598);
                                    
                                        // Integer
                                        // INT8  min(-1) max(14) span(16) datatype(Int8)
                                        uint8_t* _tmp_599 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_599;
                                        __aux64__ += -1;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000340") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simplelane_position[0].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                            return false;
                                        }
                                    }
                                    else if(_choice_3 == 1)  // CHOICE LanePositionOptions  fieldName(simple_lane_type)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LaneType _tmp_600;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type.push_back(_tmp_600);
                                    
                                        // Integer
                                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                        uint8_t* _tmp_601 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_601;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000341") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value) << 
                                                         " denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.simple_lane_type[0].value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                            return false;
                                        }
                                    }
                                    else if(_choice_3 == 2)  // CHOICE LanePositionOptions  fieldName(detailedlane_position)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePositionAndType _tmp_602;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position.push_back(_tmp_602);
                                    
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_37 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000342") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].: " << int(*_ext_flag_37);
                                            }
                                            
                                            
                                            // Field name: transversal_position
                                            // Integer
                                            // INT8  min(-1) max(14) span(16) datatype(Int8)
                                            uint8_t* _tmp_603 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_603;
                                            __aux64__ += -1;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000343") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: lane_type
                                            // Integer
                                            // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                            uint8_t* _tmp_604 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_604;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000344") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: direction
                                            // Integer
                                            // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                            uint8_t* _tmp_605 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_605;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000345") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                return false;
                                            }
                                            if(*_ext_flag_37) { // from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0]. 
                                                uint8_t* _tmp_606 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_6[*_tmp_606];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000346") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.detailedlane_position[0].: " << static_cast<unsigned int>(*_tmp_606);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_606; i++)
                                                    _array_6[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_606; i++) {
                                                    uint16_t* _tmp_607 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_607; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    else if(_choice_3 == 3)  // CHOICE LanePositionOptions  fieldName(lane_position_with_lateral_details)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePositionWithLateralDetails _tmp_608;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details.push_back(_tmp_608);
                                    
                                            // LanePositionWithLateralDetails  SEQUENCE
                                                //  transversalPosition   LanePosition         
                                                //  laneType              LaneType             
                                                //  direction             Direction            
                                                //  distanceToLeftBorder  StandardLength9b     
                                                //  distanceToRightBorder StandardLength9b     
                                                //  ...
                                            uint8_t* _ext_flag_38 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000347") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].: " << int(*_ext_flag_38);
                                            }
                                            
                                            
                                            // Field name: transversal_position
                                            // Integer
                                            // INT8  min(-1) max(14) span(16) datatype(Int8)
                                            uint8_t* _tmp_609 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_609;
                                            __aux64__ += -1;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000348") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: lane_type
                                            // Integer
                                            // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                            uint8_t* _tmp_610 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_610;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000349") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: direction
                                            // Integer
                                            // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                            uint8_t* _tmp_611 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_611;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000350") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: distance_to_left_border
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_612 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value = *_tmp_612;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value' " << (__aux64__) << " exceeds max allowable (511); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000351") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value) << " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border: " <<
                                                             ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_left_border.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: distance_to_right_border
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_613 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value = *_tmp_613;
                                            __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value;
                                            ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value' " << (__aux64__) << " exceeds max allowable (511); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000352") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value) << " denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border: " <<
                                                             ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].distance_to_right_border.value << " (" << __aux64__ << ")";
                                            }
                                            if(*_ext_flag_38) { // from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0]. 
                                                uint8_t* _tmp_614 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_7[*_tmp_614];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000353") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.lane_position_with_lateral_details[0].: " << static_cast<unsigned int>(*_tmp_614);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_614; i++)
                                                    _array_7[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_614; i++) {
                                                    uint16_t* _tmp_615 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_615; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    else if(_choice_3 == 4)  // CHOICE LanePositionOptions  fieldName(traffic_island_position)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::TrafficIslandPosition _tmp_616;
                                        ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position.push_back(_tmp_616);
                                    
                                            // TrafficIslandPosition  SEQUENCE
                                                //  oneSide    LanePositionAndType     
                                                //  otherSide  LanePositionAndType     
                                                //  ...
                                            uint8_t* _ext_flag_41 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000354") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].: " << int(*_ext_flag_41);
                                            }
                                            
                                            
                                            // Field name: one_side
                                                // LanePositionAndType  SEQUENCE
                                                    //  transversalPosition LanePosition     
                                                    //  laneType            LaneType         
                                                    //  direction           Direction        
                                                    //  ...
                                                uint8_t* _ext_flag_42 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000355") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.: " << int(*_ext_flag_42);
                                                }
                                                
                                                
                                                // Field name: transversal_position
                                                // Integer
                                                // INT8  min(-1) max(14) span(16) datatype(Int8)
                                                uint8_t* _tmp_617 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_617;
                                                __aux64__ += -1;
                                                ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000356") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: lane_type
                                                // Integer
                                                // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                                uint8_t* _tmp_618 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_618;
                                                ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000357") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: direction
                                                // Integer
                                                // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                                uint8_t* _tmp_619 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_619;
                                                ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000358") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                    return false;
                                                }
                                                if(*_ext_flag_42) { // from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side. 
                                                    uint8_t* _tmp_620 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_8[*_tmp_620];
                                                    
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000359") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].one_side.: " << static_cast<unsigned int>(*_tmp_620);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_620; i++)
                                                        _array_8[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_620; i++) {
                                                        uint16_t* _tmp_621 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_621; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                            
                                            // Field name: other_side
                                                // LanePositionAndType  SEQUENCE
                                                    //  transversalPosition LanePosition     
                                                    //  laneType            LaneType         
                                                    //  direction           Direction        
                                                    //  ...
                                                uint8_t* _ext_flag_43 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000360") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.: " << int(*_ext_flag_43);
                                                }
                                                
                                                
                                                // Field name: transversal_position
                                                // Integer
                                                // INT8  min(-1) max(14) span(16) datatype(Int8)
                                                uint8_t* _tmp_622 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_622;
                                                __aux64__ += -1;
                                                ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000361") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: lane_type
                                                // Integer
                                                // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                                uint8_t* _tmp_623 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_623;
                                                ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000362") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: direction
                                                // Integer
                                                // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                                uint8_t* _tmp_624 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_624;
                                                ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000363") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                    return false;
                                                }
                                                if(*_ext_flag_43) { // from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side. 
                                                    uint8_t* _tmp_625 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_9[*_tmp_625];
                                                    
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000364") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].other_side.: " << static_cast<unsigned int>(*_tmp_625);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_625; i++)
                                                        _array_9[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_625; i++) {
                                                        uint16_t* _tmp_626 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_626; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                            if(*_ext_flag_41) { // from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0]. 
                                                uint8_t* _tmp_627 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_10[*_tmp_627];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000365") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].lane_position_based.traffic_island_position[0].: " << static_cast<unsigned int>(*_tmp_627);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_627; i++)
                                                    _array_10[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_627; i++) {
                                                    uint16_t* _tmp_628 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_628; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    else
                                    {
                                        uint16_t* _tmp_629 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2 + int(*_tmp_629);            // Ignoring opentype data
                                    }
                                    
                                    if(ros->denm.location[0].lane_positions[0].elements[e].map_based.size() != 0) {
                                        // Field name: map_based
                                            // MapPosition  SEQUENCE
                                                //  mapReference             MapReference               OPTIONAL  
                                                //  laneId                   Identifier1B               OPTIONAL  
                                                //  connectionId             Identifier1B               OPTIONAL  
                                                //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                                //  ...
                                            uint8_t* _ext_flag_44 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].map_based[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000366") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].map_based[0].: " << int(*_ext_flag_44);
                                            }
                                            
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::MapReference _tmp_630;
                                                ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference.push_back(_tmp_630);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000367") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_631;
                                                ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id.push_back(_tmp_631);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000368") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_632;
                                                ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id.push_back(_tmp_632);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000369") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::LongitudinalLanePosition _tmp_633;
                                                ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position.push_back(_tmp_633);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000370") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position " << tools::green("present");
                                            }
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference.size() != 0) {
                                                // Field name: map_reference
                                                // Choice
                                                   // #0  roadsegment   RoadSegmentReferenceId   
                                                   // #1  intersection   IntersectionReferenceId   
                                                uint8_t _choice_4 = *(buffer++);
                                                
                                                if(_choice_4 == 0) {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_634;
                                                    ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment.push_back(_tmp_634);
                                                
                                                        // RoadSegmentReferenceId  SEQUENCE
                                                            //  region     Identifier2B   OPTIONAL  
                                                            //  id         Identifier2B     
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_635;
                                                            ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region.push_back(_tmp_635);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("000371") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                            // Field name: region
                                                            // Integer
                                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                            uint16_t* _tmp_636 = (uint16_t*) buffer; buffer += 2;
                                                            __aux64__ = *_tmp_636;
                                                            ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000372") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                             " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value;
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        // Field name: id
                                                        // Integer
                                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                        uint16_t* _tmp_637 = (uint16_t*) buffer; buffer += 2;
                                                        __aux64__ = *_tmp_637;
                                                        ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000373") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value) << 
                                                                         " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value;
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                            return false;
                                                        }
                                                }
                                                else if(_choice_4 == 1)  // CHOICE MapReference  fieldName(intersection)
                                                {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_638;
                                                    ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection.push_back(_tmp_638);
                                                
                                                        // IntersectionReferenceId  SEQUENCE
                                                            //  region     Identifier2B   OPTIONAL  
                                                            //  id         Identifier2B     
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_639;
                                                            ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region.push_back(_tmp_639);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("000374") << "| ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region.size() != 0) {
                                                            // Field name: region
                                                            // Integer
                                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                            uint16_t* _tmp_640 = (uint16_t*) buffer; buffer += 2;
                                                            __aux64__ = *_tmp_640;
                                                            ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000375") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value) << 
                                                                             " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value;
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        // Field name: id
                                                        // Integer
                                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                        uint16_t* _tmp_641 = (uint16_t*) buffer; buffer += 2;
                                                        __aux64__ = *_tmp_641;
                                                        ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000376") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value) << 
                                                                         " denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value;
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                            return false;
                                                        }
                                                }
                                                else
                                                {
                                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_4) << ") selected in CHOICE MapReference in 'denm.location[0].lane_positions[0].elements[e].map_based[0].map_reference[0]'; message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id.size() != 0) {
                                                // Field name: lane_id
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_642 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_642;
                                                ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000377") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id.size() != 0) {
                                                // Field name: connection_id
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_643 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_643;
                                                ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000378") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value) << 
                                                                 " denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position.size() != 0) {
                                                // Field name: longitudinal_lane_position
                                                    // LongitudinalLanePosition  SEQUENCE
                                                        //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                        //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                    
                                                    // Field name: longitudinal_lane_position_value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_644 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_644;
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                    ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                        logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000379") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                                     ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: longitudinal_lane_position_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_645 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_645;
                                                    __aux64__ = ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                    ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                        logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000380") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                                     ros->denm.location[0].lane_positions[0].elements[e].map_based[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                            if(*_ext_flag_44) { // from ros->denm.location[0].lane_positions[0].elements[e].map_based[0]. 
                                                uint8_t* _tmp_646 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_11[*_tmp_646];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000381") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].map_based[0].: " << static_cast<unsigned int>(*_tmp_646);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_646; i++)
                                                    _array_11[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_646; i++) {
                                                    uint16_t* _tmp_647 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_647; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    
                                    // Field name: confidence
                                        // MetaInformation  SEQUENCE
                                            //  usedDetectionInformation SensorTypes               
                                            //  usedStoredInformation    StoredInformationType     
                                            //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_48 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].confidence.
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000382") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].confidence.: " << int(*_ext_flag_48);
                                        }
                                        
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::ConfidenceLevel _tmp_648;
                                            ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value.push_back(_tmp_648);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000383") << "| ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value " << tools::green("present");
                                        }
                                        
                                        // Field name: used_detection_information
                                        // BitString
                                        // BIT_STRING  min(16) max(16) span(1)
                                        uint8_t* _ext_flag_49 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000384") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.: " << int(*_ext_flag_49);
                                        }
                                        
                                        uint8_t* _tmp_649 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_649 + 16;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000385") << "| denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.value: " << __aux64__;
                                        
                                        int _if__tmp_649 = __aux64__;
                                        for(int f = 0; f < _if__tmp_649; f++) {
                                            uint8_t __c__;
                                            ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.values[f] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 16) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.value' " << (__aux64__) << " is less than allowable (16); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_detection_information.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: used_stored_information
                                        // BitString
                                        // BIT_STRING  min(1) max(168) span(168)
                                        uint8_t* _ext_flag_50 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000386") << "| Reading ext flag from ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.: " << int(*_ext_flag_50);
                                        }
                                        
                                        uint8_t* _tmp_650 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_650 + 1;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000387") << "| denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.value: " << __aux64__;
                                        
                                        int _if__tmp_650 = __aux64__;
                                        for(int g = 0; g < _if__tmp_650; g++) {
                                            uint8_t __c__;
                                            ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.values[g] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 168) {
                                            logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.used_stored_information.value' " << (__aux64__) << " exceeds max allowable (168); message dropped.";
                                            return false;
                                        }
                                        
                                        if(ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value.size() != 0) {
                                            // Field name: confidence_value
                                            // Integer
                                            // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                            uint8_t* _tmp_651 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_651;
                                            __aux64__ += 1;
                                            ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000388") << "| " << tools::getTypeName(ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value) << 
                                                             " denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                logger->error() << "Error: Value in 'denm.location[0].lane_positions[0].elements[e].confidence.confidence_value[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                return false;
                                            }
                                        }
                                        if(*_ext_flag_48) { // from ros->denm.location[0].lane_positions[0].elements[e].confidence. 
                                            uint8_t* _tmp_652 = (uint8_t*) buffer++;  // number of extensions
                                            bool _array_12[*_tmp_652];
                                            
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000389") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].confidence.: " << static_cast<unsigned int>(*_tmp_652);
                                            
                                            // Extensions bytemap
                                            for(int i = 0; i < *_tmp_652; i++)
                                                _array_12[i] = (*buffer++) != 0;
                                            
                                            // Discarding unknown OpenType containers
                                            for(int i = 0; i < *_tmp_652; i++) {
                                                uint16_t* _tmp_653 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2;
                                            
                                                if(debug) {
                                                }
                                            
                                                for(int i = 0; i < *_tmp_653; i++)
                                                    buffer++;
                                            }
                                            
                                        }
                                    if(*_ext_flag_35) { // from ros->denm.location[0].lane_positions[0].elements[e]. 
                                        uint8_t* _tmp_654 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_13[*_tmp_654];
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000390") << "| Reading number of exts from ros->denm.location[0].lane_positions[0].elements[e].: " << static_cast<unsigned int>(*_tmp_654);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_654; i++)
                                            _array_13[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_654; i++) {
                                            uint16_t* _tmp_655 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_655; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                        }
                        
                        if(ros->denm.location[0].occupied_lanes.size() != 0) {
                            // Field name: occupied_lanes
                                // OccupiedLanesWithConfidence  SEQUENCE
                                    //  lanePositionBased OccupiedLanesWithConfidence_lanePositionBased     
                                    //  mapBased          OccupiedLanesWithConfidence_mapBased            OPTIONAL  
                                    //  confidence        MetaInformation                                   
                                    //  ...
                                uint8_t* _ext_flag_51 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000391") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].: " << int(*_ext_flag_51);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::OccupiedLanesWithConfidenceMapBased _tmp_656;
                                    ros->denm.location[0].occupied_lanes[0].map_based.push_back(_tmp_656);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000392") << "| ros->denm.location[0].occupied_lanes[0].map_based " << tools::green("present");
                                }
                                
                                // Field name: lane_position_based
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4)
                                int16_t* _tmp_657 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_657;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_657 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000393") << "| SequenceOf ros->denm.location[0].occupied_lanes[0].lane_position_based. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int h = 0; h < _if__tmp_657; h++) {
                                    its_container_v4_etsi_its_cdd_msgs::msg::LanePositionOptions seqof_h;  // CHOICE
                                    ros->denm.location[0].occupied_lanes[0].lane_position_based.elements.push_back(seqof_h);
                                
                                    // Choice
                                    uint8_t* _ext_flag_52 = (uint8_t*)buffer++; // ext flag
                                    
                                       // #0  simplelanePosition   LanePosition   
                                       // #1  simpleLaneType   LaneType   
                                       // #2  detailedlanePosition   LanePositionAndType   
                                       // #3  lanePositionWithLateralDetails   LanePositionWithLateralDetails   
                                       // #4  trafficIslandPosition   TrafficIslandPosition   
                                    uint8_t _choice_5 = *(buffer++);
                                    
                                    if(*_ext_flag_52)
                                        _choice_5 += 4 + 1; // Ext addition
                                    
                                    if(_choice_5 == 0) {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePosition _tmp_658;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position.push_back(_tmp_658);
                                    
                                        // Integer
                                        // INT8  min(-1) max(14) span(16) datatype(Int8)
                                        uint8_t* _tmp_659 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_659;
                                        __aux64__ += -1;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000394") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simplelane_position[0].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                            return false;
                                        }
                                    }
                                    else if(_choice_5 == 1)  // CHOICE LanePositionOptions  fieldName(simple_lane_type)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LaneType _tmp_660;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type.push_back(_tmp_660);
                                    
                                        // Integer
                                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                        uint8_t* _tmp_661 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_661;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000395") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value) << 
                                                         " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].simple_lane_type[0].value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                            return false;
                                        }
                                    }
                                    else if(_choice_5 == 2)  // CHOICE LanePositionOptions  fieldName(detailedlane_position)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePositionAndType _tmp_662;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position.push_back(_tmp_662);
                                    
                                            // LanePositionAndType  SEQUENCE
                                                //  transversalPosition LanePosition     
                                                //  laneType            LaneType         
                                                //  direction           Direction        
                                                //  ...
                                            uint8_t* _ext_flag_53 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000396") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].: " << int(*_ext_flag_53);
                                            }
                                            
                                            
                                            // Field name: transversal_position
                                            // Integer
                                            // INT8  min(-1) max(14) span(16) datatype(Int8)
                                            uint8_t* _tmp_663 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_663;
                                            __aux64__ += -1;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000397") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: lane_type
                                            // Integer
                                            // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                            uint8_t* _tmp_664 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_664;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000398") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: direction
                                            // Integer
                                            // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                            uint8_t* _tmp_665 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_665;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000399") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                return false;
                                            }
                                            if(*_ext_flag_53) { // from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0]. 
                                                uint8_t* _tmp_666 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_14[*_tmp_666];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000400") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].detailedlane_position[0].: " << static_cast<unsigned int>(*_tmp_666);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_666; i++)
                                                    _array_14[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_666; i++) {
                                                    uint16_t* _tmp_667 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_667; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    else if(_choice_5 == 3)  // CHOICE LanePositionOptions  fieldName(lane_position_with_lateral_details)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePositionWithLateralDetails _tmp_668;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details.push_back(_tmp_668);
                                    
                                            // LanePositionWithLateralDetails  SEQUENCE
                                                //  transversalPosition   LanePosition         
                                                //  laneType              LaneType             
                                                //  direction             Direction            
                                                //  distanceToLeftBorder  StandardLength9b     
                                                //  distanceToRightBorder StandardLength9b     
                                                //  ...
                                            uint8_t* _ext_flag_54 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000401") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].: " << int(*_ext_flag_54);
                                            }
                                            
                                            
                                            // Field name: transversal_position
                                            // Integer
                                            // INT8  min(-1) max(14) span(16) datatype(Int8)
                                            uint8_t* _tmp_669 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_669;
                                            __aux64__ += -1;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000402") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: lane_type
                                            // Integer
                                            // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                            uint8_t* _tmp_670 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_670;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000403") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: direction
                                            // Integer
                                            // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                            uint8_t* _tmp_671 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_671;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000404") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value) << 
                                                             " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: distance_to_left_border
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_672 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value = *_tmp_672;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value' " << (__aux64__) << " exceeds max allowable (511); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000405") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value) << " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border: " <<
                                                             ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_left_border.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: distance_to_right_border
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_673 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value = *_tmp_673;
                                            __aux64__ = ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value;
                                            ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 511) {
                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value' " << (__aux64__) << " exceeds max allowable (511); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000406") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value) << " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border: " <<
                                                             ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].distance_to_right_border.value << " (" << __aux64__ << ")";
                                            }
                                            if(*_ext_flag_54) { // from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0]. 
                                                uint8_t* _tmp_674 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_15[*_tmp_674];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000407") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].lane_position_with_lateral_details[0].: " << static_cast<unsigned int>(*_tmp_674);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_674; i++)
                                                    _array_15[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_674; i++) {
                                                    uint16_t* _tmp_675 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_675; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    else if(_choice_5 == 4)  // CHOICE LanePositionOptions  fieldName(traffic_island_position)
                                    {
                                        its_container_v4_etsi_its_cdd_msgs::msg::TrafficIslandPosition _tmp_676;
                                        ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position.push_back(_tmp_676);
                                    
                                            // TrafficIslandPosition  SEQUENCE
                                                //  oneSide    LanePositionAndType     
                                                //  otherSide  LanePositionAndType     
                                                //  ...
                                            uint8_t* _ext_flag_57 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000408") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].: " << int(*_ext_flag_57);
                                            }
                                            
                                            
                                            // Field name: one_side
                                                // LanePositionAndType  SEQUENCE
                                                    //  transversalPosition LanePosition     
                                                    //  laneType            LaneType         
                                                    //  direction           Direction        
                                                    //  ...
                                                uint8_t* _ext_flag_58 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000409") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.: " << int(*_ext_flag_58);
                                                }
                                                
                                                
                                                // Field name: transversal_position
                                                // Integer
                                                // INT8  min(-1) max(14) span(16) datatype(Int8)
                                                uint8_t* _tmp_677 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_677;
                                                __aux64__ += -1;
                                                ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000410") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value) << 
                                                                 " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: lane_type
                                                // Integer
                                                // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                                uint8_t* _tmp_678 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_678;
                                                ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000411") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value) << 
                                                                 " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: direction
                                                // Integer
                                                // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                                uint8_t* _tmp_679 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_679;
                                                ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000412") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value) << 
                                                                 " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                    return false;
                                                }
                                                if(*_ext_flag_58) { // from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side. 
                                                    uint8_t* _tmp_680 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_16[*_tmp_680];
                                                    
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000413") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].one_side.: " << static_cast<unsigned int>(*_tmp_680);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_680; i++)
                                                        _array_16[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_680; i++) {
                                                        uint16_t* _tmp_681 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_681; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                            
                                            // Field name: other_side
                                                // LanePositionAndType  SEQUENCE
                                                    //  transversalPosition LanePosition     
                                                    //  laneType            LaneType         
                                                    //  direction           Direction        
                                                    //  ...
                                                uint8_t* _ext_flag_59 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000414") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.: " << int(*_ext_flag_59);
                                                }
                                                
                                                
                                                // Field name: transversal_position
                                                // Integer
                                                // INT8  min(-1) max(14) span(16) datatype(Int8)
                                                uint8_t* _tmp_682 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_682;
                                                __aux64__ += -1;
                                                ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000415") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value) << 
                                                                 " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.transversal_position.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: lane_type
                                                // Integer
                                                // UINT8  min(0) max(31) span(32) datatype(UInt8)
                                                uint8_t* _tmp_683 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_683;
                                                ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000416") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value) << 
                                                                 " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 31) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.lane_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: direction
                                                // Integer
                                                // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                                uint8_t* _tmp_684 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_684;
                                                ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000417") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value) << 
                                                                 " denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                    return false;
                                                }
                                                if(*_ext_flag_59) { // from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side. 
                                                    uint8_t* _tmp_685 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_17[*_tmp_685];
                                                    
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000418") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].other_side.: " << static_cast<unsigned int>(*_tmp_685);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_685; i++)
                                                        _array_17[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_685; i++) {
                                                        uint16_t* _tmp_686 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_686; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                            if(*_ext_flag_57) { // from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0]. 
                                                uint8_t* _tmp_687 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_18[*_tmp_687];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000419") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].lane_position_based.elements[h].traffic_island_position[0].: " << static_cast<unsigned int>(*_tmp_687);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_687; i++)
                                                    _array_18[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_687; i++) {
                                                    uint16_t* _tmp_688 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_688; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    else
                                    {
                                        uint16_t* _tmp_689 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2 + int(*_tmp_689);            // Ignoring opentype data
                                    }
                                }
                                
                                if(ros->denm.location[0].occupied_lanes[0].map_based.size() != 0) {
                                    // Field name: map_based
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(4) span(4)
                                    int16_t* _tmp_690 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_690;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_690 = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000420") << "| SequenceOf ros->denm.location[0].occupied_lanes[0].map_based[0]. size: " << int(__aux64__);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int i = 0; i < _if__tmp_690; i++) {
                                        its_container_v4_etsi_its_cdd_msgs::msg::MapPosition seqof_i;  // SEQUENCE
                                        ros->denm.location[0].occupied_lanes[0].map_based[0].elements.push_back(seqof_i);
                                    
                                            // MapPosition  SEQUENCE
                                                //  mapReference             MapReference               OPTIONAL  
                                                //  laneId                   Identifier1B               OPTIONAL  
                                                //  connectionId             Identifier1B               OPTIONAL  
                                                //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                                //  ...
                                            uint8_t* _ext_flag_60 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000421") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].: " << int(*_ext_flag_60);
                                            }
                                            
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::MapReference _tmp_691;
                                                ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference.push_back(_tmp_691);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000422") << "| ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_692;
                                                ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id.push_back(_tmp_692);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000423") << "| ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_693;
                                                ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id.push_back(_tmp_693);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000424") << "| ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::LongitudinalLanePosition _tmp_694;
                                                ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position.push_back(_tmp_694);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000425") << "| ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position " << tools::green("present");
                                            }
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference.size() != 0) {
                                                // Field name: map_reference
                                                // Choice
                                                   // #0  roadsegment   RoadSegmentReferenceId   
                                                   // #1  intersection   IntersectionReferenceId   
                                                uint8_t _choice_6 = *(buffer++);
                                                
                                                if(_choice_6 == 0) {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_695;
                                                    ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment.push_back(_tmp_695);
                                                
                                                        // RoadSegmentReferenceId  SEQUENCE
                                                            //  region     Identifier2B   OPTIONAL  
                                                            //  id         Identifier2B     
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_696;
                                                            ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region.push_back(_tmp_696);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("000426") << "| ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region.size() != 0) {
                                                            // Field name: region
                                                            // Integer
                                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                            uint16_t* _tmp_697 = (uint16_t*) buffer; buffer += 2;
                                                            __aux64__ = *_tmp_697;
                                                            ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000427") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value) << 
                                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value;
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        // Field name: id
                                                        // Integer
                                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                        uint16_t* _tmp_698 = (uint16_t*) buffer; buffer += 2;
                                                        __aux64__ = *_tmp_698;
                                                        ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000428") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value;
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                            return false;
                                                        }
                                                }
                                                else if(_choice_6 == 1)  // CHOICE MapReference  fieldName(intersection)
                                                {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_699;
                                                    ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection.push_back(_tmp_699);
                                                
                                                        // IntersectionReferenceId  SEQUENCE
                                                            //  region     Identifier2B   OPTIONAL  
                                                            //  id         Identifier2B     
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_700;
                                                            ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region.push_back(_tmp_700);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("000429") << "| ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region.size() != 0) {
                                                            // Field name: region
                                                            // Integer
                                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                            uint16_t* _tmp_701 = (uint16_t*) buffer; buffer += 2;
                                                            __aux64__ = *_tmp_701;
                                                            ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000430") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value) << 
                                                                             " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value;
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        // Field name: id
                                                        // Integer
                                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                        uint16_t* _tmp_702 = (uint16_t*) buffer; buffer += 2;
                                                        __aux64__ = *_tmp_702;
                                                        ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000431") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value) << 
                                                                         " denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value: " << ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value;
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                            return false;
                                                        }
                                                }
                                                else
                                                {
                                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_6) << ") selected in CHOICE MapReference in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].map_reference[0]'; message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id.size() != 0) {
                                                // Field name: lane_id
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_703 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_703;
                                                ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000432") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id.size() != 0) {
                                                // Field name: connection_id
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_704 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_704;
                                                ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000433") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value) << 
                                                                 " denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position.size() != 0) {
                                                // Field name: longitudinal_lane_position
                                                    // LongitudinalLanePosition  SEQUENCE
                                                        //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                        //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                    
                                                    // Field name: longitudinal_lane_position_value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_705 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_705;
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                    ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000434") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                                     ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: longitudinal_lane_position_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_706 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_706;
                                                    __aux64__ = ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                    ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000435") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                                     ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                            if(*_ext_flag_60) { // from ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i]. 
                                                uint8_t* _tmp_707 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_19[*_tmp_707];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000436") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].map_based[0].elements[i].: " << static_cast<unsigned int>(*_tmp_707);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_707; i++)
                                                    _array_19[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_707; i++) {
                                                    uint16_t* _tmp_708 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_708; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                }
                                
                                // Field name: confidence
                                    // MetaInformation  SEQUENCE
                                        //  usedDetectionInformation SensorTypes               
                                        //  usedStoredInformation    StoredInformationType     
                                        //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_64 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].confidence.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000437") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].confidence.: " << int(*_ext_flag_64);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ConfidenceLevel _tmp_709;
                                        ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.push_back(_tmp_709);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000438") << "| ros->denm.location[0].occupied_lanes[0].confidence.confidence_value " << tools::green("present");
                                    }
                                    
                                    // Field name: used_detection_information
                                    // BitString
                                    // BIT_STRING  min(16) max(16) span(1)
                                    uint8_t* _ext_flag_65 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000439") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.: " << int(*_ext_flag_65);
                                    }
                                    
                                    uint8_t* _tmp_710 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_710 + 16;
                                    buffer += 1;
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000440") << "| denm.location[0].occupied_lanes[0].confidence.used_detection_information.value: " << __aux64__;
                                    
                                    int _if__tmp_710 = __aux64__;
                                    for(int j = 0; j < _if__tmp_710; j++) {
                                        uint8_t __c__;
                                        ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values.push_back(__c__);
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        ros->denm.location[0].occupied_lanes[0].confidence.used_detection_information.values[j] = (*__b__ == 1);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 16) {
                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (__aux64__) << " is less than allowable (16); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_detection_information.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: used_stored_information
                                    // BitString
                                    // BIT_STRING  min(1) max(168) span(168)
                                    uint8_t* _ext_flag_66 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000441") << "| Reading ext flag from ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.: " << int(*_ext_flag_66);
                                    }
                                    
                                    uint8_t* _tmp_711 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_711 + 1;
                                    buffer += 1;
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000442") << "| denm.location[0].occupied_lanes[0].confidence.used_stored_information.value: " << __aux64__;
                                    
                                    int _if__tmp_711 = __aux64__;
                                    for(int k = 0; k < _if__tmp_711; k++) {
                                        uint8_t __c__;
                                        ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values.push_back(__c__);
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        ros->denm.location[0].occupied_lanes[0].confidence.used_stored_information.values[k] = (*__b__ == 1);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 168) {
                                        logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.used_stored_information.value' " << (__aux64__) << " exceeds max allowable (168); message dropped.";
                                        return false;
                                    }
                                    
                                    if(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value.size() != 0) {
                                        // Field name: confidence_value
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_712 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_712;
                                        __aux64__ += 1;
                                        ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000443") << "| " << tools::getTypeName(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value) << 
                                                         " denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->error() << "Error: Value in 'denm.location[0].occupied_lanes[0].confidence.confidence_value[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                    }
                                    if(*_ext_flag_64) { // from ros->denm.location[0].occupied_lanes[0].confidence. 
                                        uint8_t* _tmp_713 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_20[*_tmp_713];
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000444") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].confidence.: " << static_cast<unsigned int>(*_tmp_713);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_713; i++)
                                            _array_20[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_713; i++) {
                                            uint16_t* _tmp_714 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_714; i++)
                                                buffer++;
                                        }
                                        
                                    }
                                if(*_ext_flag_51) { // from ros->denm.location[0].occupied_lanes[0]. 
                                    uint8_t* _tmp_715 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_21[*_tmp_715];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000445") << "| Reading number of exts from ros->denm.location[0].occupied_lanes[0].: " << static_cast<unsigned int>(*_tmp_715);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_715; i++)
                                        _array_21[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_715; i++) {
                                        uint16_t* _tmp_716 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_716; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.location[0].linked_ivims.size() != 0) {
                            // Field name: linked_ivims
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8)
                            uint8_t* _ext_flag_67 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].linked_ivims[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000446") << "| Reading ext flag from ros->denm.location[0].linked_ivims[0].: " << int(*_ext_flag_67);
                            }
                            
                            int16_t* _tmp_717 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_717;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_717 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000447") << "| SequenceOf ros->denm.location[0].linked_ivims[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                return false;
                            }
                            
                            
                            for(int l = 0; l < _if__tmp_717; l++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::IvimReference seqof_l;  // SEQUENCE
                                ros->denm.location[0].linked_ivims[0].elements.push_back(seqof_l);
                            
                                    // IvimReference  SEQUENCE
                                        //  serviceProviderId       Provider                    
                                        //  iviIdentificationNumber IviIdentificationNumber     
                                    
                                    // Field name: service_provider_id
                                        // Provider  SEQUENCE
                                            //  countryCode        CountryCode          
                                            //  providerIdentifier IssuerIdentifier     
                                        
                                        // Field name: country_code
                                        // BitString
                                        // BIT_STRING  min(10) max(10) span(1)
                                        uint8_t* _tmp_718 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_718 + 10;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000448") << "| denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.value: " << __aux64__;
                                        
                                        int _if__tmp_718 = __aux64__;
                                        for(int m = 0; m < _if__tmp_718; m++) {
                                            uint8_t __c__;
                                            ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.values[m] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 10) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.value' " << (__aux64__) << " is less than allowable (10); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 10) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.country_code.value' " << (__aux64__) << " exceeds max allowable (10); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: provider_identifier
                                        // Integer
                                        // UINT16  min(0) max(16383) span(16384) datatype(UInt16)
                                        uint16_t* _tmp_719 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = *_tmp_719;
                                        ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000449") << "| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value) << 
                                                         " denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value: " << ros->denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value;
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].service_provider_id.provider_identifier.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                            return false;
                                        }
                                    
                                    // Field name: ivi_identification_number
                                    // Integer
                                    // UINT16  min(1) max(32767) span(32767) datatype(UInt16)
                                    uint8_t* _ext_flag_68 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000450") << "| Reading ext flag from ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.: " << int(*_ext_flag_68);
                                    }
                                    
                                    if(*_ext_flag_68) {
                                        uint8_t* _tmp_721 = (uint8_t*) buffer++;
                                        
                                        if(*_tmp_721) {
                                            uint64_t* _tmp_722 = (uint64_t*)buffer; buffer += 8;
                                            __aux64__ = *_tmp_722;
                                            __aux64__ += INT64_MIN;
                                            ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value = __aux64__;
                                        }
                                        else
                                        {
                                            uint32_t* _tmp_722 = (uint32_t*) buffer; buffer += 4;
                                            __aux64__ = *_tmp_722;
                                            __aux64__ += INT32_MIN;
                                            ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value = __aux64__;
                                        }
                                    }
                                    else
                                    {
                                        uint16_t* _tmp_720 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = *_tmp_720;
                                        __aux64__ += 1;
                                        ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value = __aux64__;
                                    
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000451") << "| " << tools::getTypeName(ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value) << 
                                                         " denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value: " << ros->denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value;
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_ivims[0].elements[l].ivi_identification_number.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                    }
                            }
                        }
                        
                        if(ros->denm.location[0].linked_mapems.size() != 0) {
                            // Field name: linked_mapems
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8)
                            uint8_t* _ext_flag_69 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].linked_mapems[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000452") << "| Reading ext flag from ros->denm.location[0].linked_mapems[0].: " << int(*_ext_flag_69);
                            }
                            
                            int16_t* _tmp_723 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_723;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_723 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000453") << "| SequenceOf ros->denm.location[0].linked_mapems[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                return false;
                            }
                            
                            
                            for(int n = 0; n < _if__tmp_723; n++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::MapReference seqof_n;  // CHOICE
                                ros->denm.location[0].linked_mapems[0].elements.push_back(seqof_n);
                            
                                // Choice
                                   // #0  roadsegment   RoadSegmentReferenceId   
                                   // #1  intersection   IntersectionReferenceId   
                                uint8_t _choice_7 = *(buffer++);
                                
                                if(_choice_7 == 0) {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_724;
                                    ros->denm.location[0].linked_mapems[0].elements[n].roadsegment.push_back(_tmp_724);
                                
                                        // RoadSegmentReferenceId  SEQUENCE
                                            //  region     Identifier2B   OPTIONAL  
                                            //  id         Identifier2B     
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_725;
                                            ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region.push_back(_tmp_725);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000454") << "| ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region " << tools::green("present");
                                        }
                                        
                                        if(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region.size() != 0) {
                                            // Field name: region
                                            // Integer
                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                            uint16_t* _tmp_726 = (uint16_t*) buffer; buffer += 2;
                                            __aux64__ = *_tmp_726;
                                            ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000455") << "| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value) << 
                                                             " denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value;
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                return false;
                                            }
                                        }
                                        
                                        // Field name: id
                                        // Integer
                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                        uint16_t* _tmp_727 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = *_tmp_727;
                                        ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000456") << "| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value) << 
                                                         " denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value;
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                            return false;
                                        }
                                }
                                else if(_choice_7 == 1)  // CHOICE MapReference  fieldName(intersection)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_728;
                                    ros->denm.location[0].linked_mapems[0].elements[n].intersection.push_back(_tmp_728);
                                
                                        // IntersectionReferenceId  SEQUENCE
                                            //  region     Identifier2B   OPTIONAL  
                                            //  id         Identifier2B     
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_729;
                                            ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region.push_back(_tmp_729);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000457") << "| ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region " << tools::green("present");
                                        }
                                        
                                        if(ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region.size() != 0) {
                                            // Field name: region
                                            // Integer
                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                            uint16_t* _tmp_730 = (uint16_t*) buffer; buffer += 2;
                                            __aux64__ = *_tmp_730;
                                            ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000458") << "| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value) << 
                                                             " denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value: " << ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value;
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                return false;
                                            }
                                        }
                                        
                                        // Field name: id
                                        // Integer
                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                        uint16_t* _tmp_731 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = *_tmp_731;
                                        ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000459") << "| " << tools::getTypeName(ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value) << 
                                                         " denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value: " << ros->denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value;
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->error() << "Error: Value in 'denm.location[0].linked_mapems[0].elements[n].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                            return false;
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_7) << ") selected in CHOICE MapReference in 'denm.location[0].linked_mapems[0].elements[n]'; message dropped.";
                                    return false;
                                }
                            }
                        }
                        
                        if(ros->denm.location[0].detection_zones_to_specified_event_point.size() != 0) {
                            // Field name: detection_zones_to_specified_event_point
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(7) span(7)
                            int16_t* _tmp_732 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_732;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_732 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000460") << "| SequenceOf ros->denm.location[0].detection_zones_to_specified_event_point[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                return false;
                            }
                            
                            
                            for(int o = 0; o < _if__tmp_732; o++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::PathExtended seqof_o;  // SEQUENCE
                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements.push_back(seqof_o);
                            
                                    // PathExtended  SEQUENCE
                                        //  pointOfEventZone PathExtended_pointOfEventZone     
                                        //  path             Path                              
                                    
                                    // Field name: point_of_event_zone
                                    // Integer
                                    // UINT8  min(1) max(23) span(23) datatype(UInt8)
                                    uint8_t* _tmp_733 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_733;
                                    __aux64__ += 1;
                                    ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000461") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value) << 
                                                     " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value: " << static_cast<int>(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 23) {
                                        logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].point_of_event_zone.value' " << (__aux64__) << " exceeds max allowable (23); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: path
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(0) max(40) span(41)
                                    int16_t* _tmp_734 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_734;
                                    
                                    int _if__tmp_734 = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000462") << "| SequenceOf ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path. size: " << int(__aux64__);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 40) {
                                        logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.value' " << (__aux64__) << " exceeds max allowable (40); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int p = 0; p < _if__tmp_734; p++) {
                                        its_container_v4_etsi_its_cdd_msgs::msg::PathPoint seqof_p;  // SEQUENCE
                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements.push_back(seqof_p);
                                    
                                            // PathPoint  SEQUENCE
                                                //  pathPosition  DeltaReferencePosition     
                                                //  pathDeltaTime PathDeltaTime            OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::PathDeltaTime _tmp_735;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time.push_back(_tmp_735);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000463") << "| ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time " << tools::green("present");
                                            }
                                            
                                            // Field name: path_position
                                                // DeltaReferencePosition  SEQUENCE
                                                    //  deltaLatitude  DeltaLatitude      
                                                    //  deltaLongitude DeltaLongitude     
                                                    //  deltaAltitude  DeltaAltitude      
                                                
                                                // Field name: delta_latitude
                                                // Real
                                                // Double
                                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                                uint32_t* _tmp_736 = (uint32_t*) buffer; buffer += 4;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value = *_tmp_736;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value += -131071;
                                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value /= 1.0E7;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000464") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value) << " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude: " <<
                                                                 ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_latitude.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: delta_longitude
                                                // Real
                                                // Double
                                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                                uint32_t* _tmp_737 = (uint32_t*) buffer; buffer += 4;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value = *_tmp_737;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value += -131071;
                                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value /= 1.0E7;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000465") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value) << " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude: " <<
                                                                 ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_longitude.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: delta_altitude
                                                // Real
                                                // Float
                                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_738 = (uint16_t*) buffer; buffer += 2;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value = *_tmp_738;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value += -12700;
                                                __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value;
                                                ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -12700) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value' " << (__aux64__) << " is less than allowable (-12700); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 12800) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value' " << (__aux64__) << " exceeds max allowable (12800); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000466") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value) << " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude: " <<
                                                                 ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_position.delta_altitude.value << " (" << __aux64__ << ")";
                                                }
                                            
                                            if(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time.size() != 0) {
                                                // Field name: path_delta_time
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(65535) span(65535) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _ext_flag_74 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000467") << "| Reading ext flag from ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].: " << int(*_ext_flag_74);
                                                }
                                                
                                                if(*_ext_flag_74) {
                                                    uint8_t* _tmp_740 = (uint8_t*) buffer++;
                                                    
                                                    if(*_tmp_740) {
                                                        uint64_t* _tmp_741 = (uint64_t*)buffer; buffer += 8;
                                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value = *_tmp_741;
                                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value += INT64_MIN;
                                                        __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value /= 100.0;
                                                    }
                                                    else
                                                    {
                                                        uint32_t* _tmp_741 = (uint32_t*) buffer; buffer += 4;
                                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value = *_tmp_741;
                                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value += INT32_MIN;
                                                        __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                                        ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value /= 100.0;
                                                    }
                                                }
                                                else
                                                {
                                                    uint16_t* _tmp_739 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value = *_tmp_739;
                                                    ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value += 1;
                                                    __aux64__ = ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value;
                                                    ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value /= 100.0;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->error() << "Error: Value in 'denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000468") << "| " << tools::getTypeName(ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value) << " denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0]: " <<
                                                                 ros->denm.location[0].detection_zones_to_specified_event_point[0].elements[o].path.elements[p].path_delta_time[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                            }
                        }
                        
                        if(ros->denm.location[0].predicted_paths.size() != 0) {
                            // Field name: predicted_paths
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(16) span(16)
                            uint8_t* _ext_flag_75 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].predicted_paths[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000469") << "| Reading ext flag from ros->denm.location[0].predicted_paths[0].: " << int(*_ext_flag_75);
                            }
                            
                            int16_t* _tmp_742 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_742;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_742 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000470") << "| SequenceOf ros->denm.location[0].predicted_paths[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                return false;
                            }
                            
                            
                            for(int q = 0; q < _if__tmp_742; q++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::PathPredicted2 seqof_q;  // SEQUENCE
                                ros->denm.location[0].predicted_paths[0].elements.push_back(seqof_q);
                            
                                    // PathPredicted2  SEQUENCE
                                        //  pathPredicted   PathPredicted       
                                        //  usageIndication UsageIndication     
                                        //  confidenceLevel ConfidenceLevel     
                                        //  ...
                                    uint8_t* _ext_flag_76 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].predicted_paths[0].elements[q].
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000471") << "| Reading ext flag from ros->denm.location[0].predicted_paths[0].elements[q].: " << int(*_ext_flag_76);
                                    }
                                    
                                    
                                    // Field name: path_predicted
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_77 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000472") << "| Reading ext flag from ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.: " << int(*_ext_flag_77);
                                    }
                                    
                                    int16_t* _tmp_743 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_743;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_743 = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000473") << "| SequenceOf ros->denm.location[0].predicted_paths[0].elements[q].path_predicted. size: " << int(__aux64__);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int r = 0; r < _if__tmp_743; r++) {
                                        its_container_v4_etsi_its_cdd_msgs::msg::PathPointPredicted seqof_r;  // SEQUENCE
                                        ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements.push_back(seqof_r);
                                    
                                            // PathPointPredicted  SEQUENCE
                                                //  deltaLatitude                DeltaLatitude            
                                                //  deltaLongitude               DeltaLongitude           
                                                //  horizontalPositionConfidence PosConfidenceEllipse   OPTIONAL  
                                                //  deltaAltitude                DeltaAltitude            
                                                //  altitudeConfidence           AltitudeConfidence       
                                                //  pathDeltaTime                PathDeltaTimeChoice      
                                                //  symmetricAreaOffset          StandardLength9b       OPTIONAL  
                                                //  asymmetricAreaOffset         StandardLength9b       OPTIONAL  
                                                //  ...
                                            uint8_t* _ext_flag_78 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000474") << "| Reading ext flag from ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].: " << int(*_ext_flag_78);
                                            }
                                            
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::PosConfidenceEllipse _tmp_744;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence.push_back(_tmp_744);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000475") << "| ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::StandardLength9b _tmp_745;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset.push_back(_tmp_745);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000476") << "| ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::StandardLength9b _tmp_746;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset.push_back(_tmp_746);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000477") << "| ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset " << tools::green("present");
                                            }
                                            
                                            // Field name: delta_latitude
                                            // Real
                                            // Double
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            uint32_t* _tmp_747 = (uint32_t*) buffer; buffer += 4;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value = *_tmp_747;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value += -131071;
                                            __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value /= 1.0E7;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000478") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude: " <<
                                                             ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_latitude.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: delta_longitude
                                            // Real
                                            // Double
                                            // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                            uint32_t* _tmp_748 = (uint32_t*) buffer; buffer += 4;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value = *_tmp_748;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value += -131071;
                                            __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value /= 1.0E7;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000479") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude: " <<
                                                             ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_longitude.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence.size() != 0) {
                                                // Field name: horizontal_position_confidence
                                                    // PosConfidenceEllipse  SEQUENCE
                                                        //  semiMajorConfidence  SemiAxisLength     
                                                        //  semiMinorConfidence  SemiAxisLength     
                                                        //  semiMajorOrientation HeadingValue       
                                                    
                                                    // Field name: semi_major_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                    uint16_t* _tmp_749 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value = *_tmp_749;
                                                    __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value;
                                                    ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000480") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence: " <<
                                                                     ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: semi_minor_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                                    uint16_t* _tmp_750 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value = *_tmp_750;
                                                    __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value;
                                                    ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000481") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence: " <<
                                                                     ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_minor_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: semi_major_orientation
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_751 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value = *_tmp_751;
                                                    __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value;
                                                    ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000482") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation: " <<
                                                                     ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].horizontal_position_confidence[0].semi_major_orientation.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                            
                                            // Field name: delta_altitude
                                            // Real
                                            // Float
                                            // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_752 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value = *_tmp_752;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value += -12700;
                                            __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -12700) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value' " << (__aux64__) << " is less than allowable (-12700); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 12800) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value' " << (__aux64__) << " exceeds max allowable (12800); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000483") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude: " <<
                                                             ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].delta_altitude.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: altitude_confidence
                                            // Enumerated
                                            // INT32  min(0) max(15) span(16) datatype(Int32)
                                            uint8_t* _tmp_753 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_753;
                                            __aux64__ += 0;
                                            ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value = __aux64__;
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000484") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value) << 
                                                             " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].altitude_confidence.value);
                                            }
                                            
                                            // Field name: path_delta_time
                                            // Choice
                                               // #0  deltaTimeHighPrecision   DeltaTimeTenthOfSecond   
                                               // #1  deltaTimeBigRange   DeltaTimeTenSeconds   
                                            uint8_t _choice_8 = *(buffer++);
                                            
                                            if(_choice_8 == 0) {
                                                its_container_v4_etsi_its_cdd_msgs::msg::DeltaTimeTenthOfSecond _tmp_754;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision.push_back(_tmp_754);
                                            
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(127) span(128) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_755 = (uint8_t*) buffer++;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value = *_tmp_755;
                                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000485") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0]: " <<
                                                                 ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_high_precision[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            else if(_choice_8 == 1)  // CHOICE PathDeltaTimeChoice  fieldName(delta_time_big_range)
                                            {
                                                its_container_v4_etsi_its_cdd_msgs::msg::DeltaTimeTenSeconds _tmp_756;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range.push_back(_tmp_756);
                                            
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(127) span(128) scaleDivisor(0.1) dataType(Float)
                                                uint8_t* _tmp_757 = (uint8_t*) buffer++;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value = *_tmp_757;
                                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value /= 0.1;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000486") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0]: " <<
                                                                 ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time.delta_time_big_range[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            else
                                            {
                                                logger->warning() << "Wrong option (" << static_cast<int>(_choice_8) << ") selected in CHOICE PathDeltaTimeChoice in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].path_delta_time'; message dropped.";
                                                return false;
                                            }
                                            
                                            if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset.size() != 0) {
                                                // Field name: symmetric_area_offset
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_758 = (uint16_t*) buffer; buffer += 2;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value = *_tmp_758;
                                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 511) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value' " << (__aux64__) << " exceeds max allowable (511); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000487") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0]: " <<
                                                                 ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].symmetric_area_offset[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset.size() != 0) {
                                                // Field name: asymmetric_area_offset
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(511) span(512) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_759 = (uint16_t*) buffer; buffer += 2;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value = *_tmp_759;
                                                __aux64__ = ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value;
                                                ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 511) {
                                                    logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value' " << (__aux64__) << " exceeds max allowable (511); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000488") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value) << " denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0]: " <<
                                                                 ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].asymmetric_area_offset[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            if(*_ext_flag_78) { // from ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r]. 
                                                uint8_t* _tmp_760 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_22[*_tmp_760];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000489") << "| Reading number of exts from ros->denm.location[0].predicted_paths[0].elements[q].path_predicted.elements[r].: " << static_cast<unsigned int>(*_tmp_760);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_760; i++)
                                                    _array_22[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_760; i++) {
                                                    uint16_t* _tmp_761 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_761; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    
                                    // Field name: usage_indication
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) datatype(Int32)
                                    uint8_t* _ext_flag_91 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000490") << "| Reading ext flag from ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.: " << int(*_ext_flag_91);
                                    }
                                    
                                    uint8_t* _tmp_762 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_762;
                                    __aux64__ += 0;
                                    ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].usage_indication.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].usage_indication.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000491") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value) << 
                                                     " denm.location[0].predicted_paths[0].elements[q].usage_indication.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].usage_indication.value);
                                    }
                                    
                                    // Field name: confidence_level
                                    // Integer
                                    // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                    uint8_t* _tmp_763 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_763;
                                    __aux64__ += 1;
                                    ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000492") << "| " << tools::getTypeName(ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value) << 
                                                     " denm.location[0].predicted_paths[0].elements[q].confidence_level.value: " << static_cast<int>(ros->denm.location[0].predicted_paths[0].elements[q].confidence_level.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].confidence_level.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                        logger->error() << "Error: Value in 'denm.location[0].predicted_paths[0].elements[q].confidence_level.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                        return false;
                                    }
                                    if(*_ext_flag_76) { // from ros->denm.location[0].predicted_paths[0].elements[q]. 
                                        uint8_t* _tmp_764 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_23[*_tmp_764];
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000493") << "| Reading number of exts from ros->denm.location[0].predicted_paths[0].elements[q].: " << static_cast<unsigned int>(*_tmp_764);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_764; i++)
                                            _array_23[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_764; i++) {
                                            uint16_t* _tmp_765 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_765; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                        }
                    
                    }
                    
                    // Discarding unknown OpenType containers
                    for(int i = 1; i < *_tmp_588; i++) {
                        uint16_t* _tmp_766 = (uint16_t*)buffer;  // OpenType length
                        buffer += 2;
                    
                        if(debug) {
                        }
                    
                        for(int i = 0; i < *_tmp_766; i++)
                            buffer++;
                    }
                    
                }
        }
        
        if(ros->denm.alacarte.size() != 0) {
            // Field name: alacarte
                // AlacarteContainer  SEQUENCE
                    //  lanePosition        LanePosition                 OPTIONAL  
                    //  impactReduction     ImpactReductionContainer     OPTIONAL  
                    //  externalTemperature Temperature                  OPTIONAL  
                    //  roadWorks           RoadWorksContainerExtended   OPTIONAL  
                    //  positioningSolution PositioningSolutionType      OPTIONAL  
                    //  stationaryVehicle   StationaryVehicleContainer   OPTIONAL  
                    //  roadConfiguration   RoadConfigurationContainer   OPTIONAL  Extension group #1
                    //  precrash            PreCrashContainer            OPTIONAL  Extension group #1
                uint8_t* _ext_flag_92 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000494") << "| Reading ext flag from ros->denm.alacarte[0].: " << int(*_ext_flag_92);
                }
                
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::LanePosition _tmp_767;
                    ros->denm.alacarte[0].lane_position.push_back(_tmp_767);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000495") << "| ros->denm.alacarte[0].lane_position " << tools::green("present");
                }
                if(*(buffer++)) { 
                    denm_v2_23_denm_pdu_description_msgs::msg::ImpactReductionContainer _tmp_768;
                    ros->denm.alacarte[0].impact_reduction.push_back(_tmp_768);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000496") << "| ros->denm.alacarte[0].impact_reduction " << tools::green("present");
                }
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::Temperature _tmp_769;
                    ros->denm.alacarte[0].external_temperature.push_back(_tmp_769);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000497") << "| ros->denm.alacarte[0].external_temperature " << tools::green("present");
                }
                if(*(buffer++)) { 
                    denm_v2_23_denm_pdu_description_msgs::msg::RoadWorksContainerExtended _tmp_770;
                    ros->denm.alacarte[0].road_works.push_back(_tmp_770);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000498") << "| ros->denm.alacarte[0].road_works " << tools::green("present");
                }
                if(*(buffer++)) { 
                    its_container_v4_etsi_its_cdd_msgs::msg::PositioningSolutionType _tmp_771;
                    ros->denm.alacarte[0].positioning_solution.push_back(_tmp_771);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000499") << "| ros->denm.alacarte[0].positioning_solution " << tools::green("present");
                }
                if(*(buffer++)) { 
                    denm_v2_23_denm_pdu_description_msgs::msg::StationaryVehicleContainer _tmp_772;
                    ros->denm.alacarte[0].stationary_vehicle.push_back(_tmp_772);
                
                    if(debug)
                        logger->print() << "|" << tools::brown("000500") << "| ros->denm.alacarte[0].stationary_vehicle " << tools::green("present");
                }
                
                if(ros->denm.alacarte[0].lane_position.size() != 0) {
                    // Field name: lane_position
                    // Integer
                    // INT8  min(-1) max(14) span(16) datatype(Int8)
                    uint8_t* _tmp_773 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_773;
                    __aux64__ += -1;
                    ros->denm.alacarte[0].lane_position[0].value = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000501") << "| " << tools::getTypeName(ros->denm.alacarte[0].lane_position[0].value) << 
                                     " denm.alacarte[0].lane_position[0].value: " << static_cast<int>(ros->denm.alacarte[0].lane_position[0].value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -1) {
                        logger->error() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 14) {
                        logger->error() << "Error: Value in 'denm.alacarte[0].lane_position[0].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                        return false;
                    }
                }
                
                if(ros->denm.alacarte[0].impact_reduction.size() != 0) {
                    // Field name: impact_reduction
                        // ImpactReductionContainer  SEQUENCE
                            //  heightLonCarrLeft         HeightLonCarr                 
                            //  heightLonCarrRight        HeightLonCarr                 
                            //  posLonCarrLeft            PosLonCarr                    
                            //  posLonCarrRight           PosLonCarr                    
                            //  positionOfPillars         PositionOfPillars             
                            //  posCentMass               PosCentMass                   
                            //  wheelBaseVehicle          WheelBaseVehicle              
                            //  turningRadius             TurningRadius                 
                            //  posFrontAx                PosFrontAx                    
                            //  positionOfOccupants       PositionOfOccupants           
                            //  vehicleMass               VehicleMass                   
                            //  requestResponseIndication RequestResponseIndication     
                        
                        // Field name: height_lon_carr_left
                        // Real
                        // Float
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        uint8_t* _tmp_774 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value = *_tmp_774;
                        ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value;
                        ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value /= 100.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000502") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value) << " denm.alacarte[0].impact_reduction[0].height_lon_carr_left: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_left.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: height_lon_carr_right
                        // Real
                        // Float
                        // FLOAT  min(1) max(100) span(100) scaleDivisor(100.0) dataType(Float)
                        uint8_t* _tmp_775 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value = *_tmp_775;
                        ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value;
                        ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value /= 100.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000503") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value) << " denm.alacarte[0].impact_reduction[0].height_lon_carr_right: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].height_lon_carr_right.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: pos_lon_carr_left
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        uint8_t* _tmp_776 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value = *_tmp_776;
                        ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value;
                        ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value /= 100.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000504") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value) << " denm.alacarte[0].impact_reduction[0].pos_lon_carr_left: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_left.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: pos_lon_carr_right
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                        uint8_t* _tmp_777 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value = *_tmp_777;
                        ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value;
                        ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value /= 100.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000505") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value) << " denm.alacarte[0].impact_reduction[0].pos_lon_carr_right: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].pos_lon_carr_right.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: position_of_pillars
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(3) span(3)
                        uint8_t* _ext_flag_97 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000506") << "| Reading ext flag from ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.: " << int(*_ext_flag_97);
                        }
                        
                        int16_t* _tmp_778 = (int16_t*)buffer;
                        buffer += 2;
                        __aux64__ = *_tmp_778;
                        __aux64__ += 1;     // +min
                        
                        int _if__tmp_778 = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000507") << "| SequenceOf ros->denm.alacarte[0].impact_reduction[0].position_of_pillars. size: " << int(__aux64__);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                            return false;
                        }
                        
                        
                        for(int s = 0; s < _if__tmp_778; s++) {
                            its_container_v4_etsi_its_cdd_msgs::msg::PosPillar seqof_s;  // FLOAT
                            ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements.push_back(seqof_s);
                        
                            // Real
                            // Float
                            // FLOAT  min(1) max(30) span(30) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_779 = (uint8_t*) buffer++;
                            ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value = *_tmp_779;
                            ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value += 1;
                            __aux64__ = ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value;
                            ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 30) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value' " << (__aux64__) << " exceeds max allowable (30); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000508") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value) << " denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s]: " <<
                                             ros->denm.alacarte[0].impact_reduction[0].position_of_pillars.elements[s].value << " (" << __aux64__ << ")";
                            }
                            
                        }
                        
                        // Field name: pos_cent_mass
                        // Real
                        // Float
                        // FLOAT  min(1) max(63) span(63) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_780 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value = *_tmp_780;
                        ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value;
                        ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 63) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_cent_mass.value' " << (__aux64__) << " exceeds max allowable (63); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000509") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value) << " denm.alacarte[0].impact_reduction[0].pos_cent_mass: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].pos_cent_mass.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: wheel_base_vehicle
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_781 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value = *_tmp_781;
                        ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value;
                        ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000510") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value) << " denm.alacarte[0].impact_reduction[0].wheel_base_vehicle: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].wheel_base_vehicle.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: turning_radius
                        // Real
                        // Float
                        // FLOAT  min(1) max(255) span(255) scaleDivisor(2.5) dataType(Float)
                        uint8_t* _tmp_782 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].turning_radius.value = *_tmp_782;
                        ros->denm.alacarte[0].impact_reduction[0].turning_radius.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].turning_radius.value;
                        ros->denm.alacarte[0].impact_reduction[0].turning_radius.value /= 2.5;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].turning_radius.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000511") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].turning_radius.value) << " denm.alacarte[0].impact_reduction[0].turning_radius: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].turning_radius.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: pos_front_ax
                        // Real
                        // Float
                        // FLOAT  min(1) max(20) span(20) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_783 = (uint8_t*) buffer++;
                        ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value = *_tmp_783;
                        ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value += 1;
                        __aux64__ = ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value;
                        ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 20) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].pos_front_ax.value' " << (__aux64__) << " exceeds max allowable (20); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000512") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value) << " denm.alacarte[0].impact_reduction[0].pos_front_ax: " <<
                                         ros->denm.alacarte[0].impact_reduction[0].pos_front_ax.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: position_of_occupants
                        // BitString
                        // BIT_STRING  min(20) max(20) span(1)
                        uint8_t* _tmp_784 = (uint8_t*)buffer;
                        __aux64__ = *_tmp_784 + 20;
                        buffer += 1;
                        
                        if(debug)
                            logger->print() << "|" << tools::brown("000513") << "| denm.alacarte[0].impact_reduction[0].position_of_occupants.value: " << __aux64__;
                        
                        int _if__tmp_784 = __aux64__;
                        for(int t = 0; t < _if__tmp_784; t++) {
                            uint8_t __c__;
                            ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values.push_back(__c__);
                            uint8_t* __b__ = (uint8_t*)buffer++;
                            ros->denm.alacarte[0].impact_reduction[0].position_of_occupants.values[t] = (*__b__ == 1);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 20) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (__aux64__) << " is less than allowable (20); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 20) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].position_of_occupants.value' " << (__aux64__) << " exceeds max allowable (20); message dropped.";
                            return false;
                        }
                        
                        // Field name: vehicle_mass
                        // Integer
                        // UINT16  min(1) max(1024) span(1024) datatype(UInt16)
                        uint16_t* _tmp_785 = (uint16_t*) buffer; buffer += 2;
                        __aux64__ = *_tmp_785;
                        __aux64__ += 1;
                        ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000514") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value) << 
                                         " denm.alacarte[0].impact_reduction[0].vehicle_mass.value: " << ros->denm.alacarte[0].impact_reduction[0].vehicle_mass.value;
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 1024) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].vehicle_mass.value' " << (__aux64__) << " exceeds max allowable (1024); message dropped.";
                            return false;
                        }
                        
                        // Field name: request_response_indication
                        // Enumerated
                        // INT32  min(0) max(1) span(2) datatype(Int32)
                        uint8_t* _tmp_786 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_786;
                        __aux64__ += 0;
                        ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value = __aux64__;
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 1) {
                            logger->error() << "Error: Value in 'denm.alacarte[0].impact_reduction[0].request_response_indication.value' " << (__aux64__) << " exceeds max allowable (1); message dropped.";
                            return false;
                        }
                        
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000515") << "| " << tools::getTypeName(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value) << 
                                         " denm.alacarte[0].impact_reduction[0].request_response_indication.value: " << static_cast<int>(ros->denm.alacarte[0].impact_reduction[0].request_response_indication.value);
                        }
                }
                
                if(ros->denm.alacarte[0].external_temperature.size() != 0) {
                    // Field name: external_temperature
                    // Integer
                    // INT8  min(-60) max(67) span(128) datatype(Int8)
                    uint8_t* _tmp_787 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_787;
                    __aux64__ += -60;
                    ros->denm.alacarte[0].external_temperature[0].value = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000516") << "| " << tools::getTypeName(ros->denm.alacarte[0].external_temperature[0].value) << 
                                     " denm.alacarte[0].external_temperature[0].value: " << static_cast<int>(ros->denm.alacarte[0].external_temperature[0].value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -60) {
                        logger->error() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' " << (__aux64__) << " is less than allowable (-60); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 67) {
                        logger->error() << "Error: Value in 'denm.alacarte[0].external_temperature[0].value' " << (__aux64__) << " exceeds max allowable (67); message dropped.";
                        return false;
                    }
                }
                
                if(ros->denm.alacarte[0].road_works.size() != 0) {
                    // Field name: road_works
                        // RoadWorksContainerExtended  SEQUENCE
                            //  lightBarSirenInUse      LightBarSirenInUse       OPTIONAL  
                            //  closedLanes             ClosedLanes              OPTIONAL  
                            //  restriction             RestrictedTypes          OPTIONAL  
                            //  speedLimit              SpeedLimit               OPTIONAL  
                            //  incidentIndication      CauseCodeV2              OPTIONAL  
                            //  recommendedPath         ItineraryPath            OPTIONAL  
                            //  startingPointSpeedLimit DeltaReferencePosition   OPTIONAL  
                            //  trafficFlowRule         TrafficRule              OPTIONAL  
                            //  referenceDenms          ActionIdList             OPTIONAL  
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::LightBarSirenInUse _tmp_788;
                            ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.push_back(_tmp_788);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000517") << "| ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::ClosedLanes _tmp_789;
                            ros->denm.alacarte[0].road_works[0].closed_lanes.push_back(_tmp_789);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000518") << "| ros->denm.alacarte[0].road_works[0].closed_lanes " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::RestrictedTypes _tmp_790;
                            ros->denm.alacarte[0].road_works[0].restriction.push_back(_tmp_790);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000519") << "| ros->denm.alacarte[0].road_works[0].restriction " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::SpeedLimit _tmp_791;
                            ros->denm.alacarte[0].road_works[0].speed_limit.push_back(_tmp_791);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000520") << "| ros->denm.alacarte[0].road_works[0].speed_limit " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::CauseCodeV2 _tmp_792;
                            ros->denm.alacarte[0].road_works[0].incident_indication.push_back(_tmp_792);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000521") << "| ros->denm.alacarte[0].road_works[0].incident_indication " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::ItineraryPath _tmp_793;
                            ros->denm.alacarte[0].road_works[0].recommended_path.push_back(_tmp_793);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000522") << "| ros->denm.alacarte[0].road_works[0].recommended_path " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::DeltaReferencePosition _tmp_794;
                            ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.push_back(_tmp_794);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000523") << "| ros->denm.alacarte[0].road_works[0].starting_point_speed_limit " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::TrafficRule _tmp_795;
                            ros->denm.alacarte[0].road_works[0].traffic_flow_rule.push_back(_tmp_795);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000524") << "| ros->denm.alacarte[0].road_works[0].traffic_flow_rule " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::ActionIdList _tmp_796;
                            ros->denm.alacarte[0].road_works[0].reference_denms.push_back(_tmp_796);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000525") << "| ros->denm.alacarte[0].road_works[0].reference_denms " << tools::green("present");
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use.size() != 0) {
                            // Field name: light_bar_siren_in_use
                            // BitString
                            // BIT_STRING  min(2) max(2) span(1)
                            uint8_t* _tmp_797 = (uint8_t*)buffer;
                            __aux64__ = *_tmp_797 + 2;
                            buffer += 1;
                            
                            if(debug)
                                logger->print() << "|" << tools::brown("000526") << "| denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value: " << __aux64__;
                            
                            int _if__tmp_797 = __aux64__;
                            for(int u = 0; u < _if__tmp_797; u++) {
                                uint8_t __c__;
                                ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values.push_back(__c__);
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                ros->denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].values[u] = (*__b__ == 1);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 2) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (__aux64__) << " is less than allowable (2); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 2) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].light_bar_siren_in_use[0].value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].closed_lanes.size() != 0) {
                            // Field name: closed_lanes
                                // ClosedLanes  SEQUENCE
                                    //  innerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  outerhardShoulderStatus HardShoulderStatus   OPTIONAL  
                                    //  drivingLaneStatus       DrivingLaneStatus    OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_104 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_works[0].closed_lanes[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000527") << "| Reading ext flag from ros->denm.alacarte[0].road_works[0].closed_lanes[0].: " << int(*_ext_flag_104);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::HardShoulderStatus _tmp_798;
                                    ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.push_back(_tmp_798);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000528") << "| ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::HardShoulderStatus _tmp_799;
                                    ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.push_back(_tmp_799);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000529") << "| ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::DrivingLaneStatus _tmp_800;
                                    ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.push_back(_tmp_800);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000530") << "| ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status " << tools::green("present");
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status.size() != 0) {
                                    // Field name: innerhard_shoulder_status
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) datatype(Int32)
                                    uint8_t* _tmp_801 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_801;
                                    __aux64__ += 0;
                                    ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000531") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].innerhard_shoulder_status[0].value);
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status.size() != 0) {
                                    // Field name: outerhard_shoulder_status
                                    // Enumerated
                                    // INT32  min(0) max(2) span(3) datatype(Int32)
                                    uint8_t* _tmp_802 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_802;
                                    __aux64__ += 0;
                                    ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 2) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000532") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value) << 
                                                     " denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].closed_lanes[0].outerhard_shoulder_status[0].value);
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status.size() != 0) {
                                    // Field name: driving_lane_status
                                    // BitString
                                    // BIT_STRING  min(1) max(13) span(13)
                                    uint8_t* _tmp_803 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_803 + 1;
                                    buffer += 1;
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000533") << "| denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value: " << __aux64__;
                                    
                                    int _if__tmp_803 = __aux64__;
                                    for(int v = 0; v < _if__tmp_803; v++) {
                                        uint8_t __c__;
                                        ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values.push_back(__c__);
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        ros->denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].values[v] = (*__b__ == 1);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].closed_lanes[0].driving_lane_status[0].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                        return false;
                                    }
                                }
                                if(*_ext_flag_104) { // from ros->denm.alacarte[0].road_works[0].closed_lanes[0]. 
                                    uint8_t* _tmp_804 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_24[*_tmp_804];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000534") << "| Reading number of exts from ros->denm.alacarte[0].road_works[0].closed_lanes[0].: " << static_cast<unsigned int>(*_tmp_804);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_804; i++)
                                        _array_24[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_804; i++) {
                                        uint16_t* _tmp_805 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_805; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].restriction.size() != 0) {
                            // Field name: restriction
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(3) span(3)
                            uint8_t* _ext_flag_107 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_works[0].restriction[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000535") << "| Reading ext flag from ros->denm.alacarte[0].road_works[0].restriction[0].: " << int(*_ext_flag_107);
                            }
                            
                            int16_t* _tmp_806 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_806;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_806 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000536") << "| SequenceOf ros->denm.alacarte[0].road_works[0].restriction[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                return false;
                            }
                            
                            
                            for(int w = 0; w < _if__tmp_806; w++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::StationType seqof_w;  // INTEGER
                                ros->denm.alacarte[0].road_works[0].restriction[0].elements.push_back(seqof_w);
                            
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_807 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_807;
                                ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000537") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value) << 
                                                 " denm.alacarte[0].road_works[0].restriction[0].elements[w].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].restriction[0].elements[w].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[w].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].restriction[0].elements[w].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].speed_limit.size() != 0) {
                            // Field name: speed_limit
                            // Integer
                            // UINT8  min(1) max(255) span(255) datatype(UInt8)
                            uint8_t* _tmp_808 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_808;
                            __aux64__ += 1;
                            ros->denm.alacarte[0].road_works[0].speed_limit[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000538") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].speed_limit[0].value) << 
                                             " denm.alacarte[0].road_works[0].speed_limit[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].speed_limit[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].speed_limit[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].incident_indication.size() != 0) {
                            // Field name: incident_indication
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_108 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_works[0].incident_indication[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000539") << "| Reading ext flag from ros->denm.alacarte[0].road_works[0].incident_indication[0].: " << int(*_ext_flag_108);
                                }
                                
                                
                                // Field name: cc_and_scc
                                // Choice
                                   // #0  reserved0   SubCauseCodeType   
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode   
                                   // #2  accident2   AccidentSubCauseCode   
                                   // #3  roadworks3   RoadworksSubCauseCode   
                                   // #4  reserved4   SubCauseCodeType   
                                   // #5  impassability5   ImpassabilitySubCauseCode   
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode   
                                   // #7  aquaplaning7   SubCauseCodeType   
                                   // #8  reserved8   SubCauseCodeType   
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode   
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode   
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode   
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode   
                                   // #13  reserved13   SubCauseCodeType   
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode   
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode   
                                   // #16  reserved16   SubCauseCodeType   
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode   
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode   
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode   
                                   // #20  violence20   SubCauseCodeType   
                                   // #21  reserved21   SubCauseCodeType   
                                   // #22  reserved22   SubCauseCodeType   
                                   // #23  reserved23   SubCauseCodeType   
                                   // #24  reserved24   SubCauseCodeType   
                                   // #25  reserved25   SubCauseCodeType   
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode   
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode   
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType   
                                   // #29  reserved29   SubCauseCodeType   
                                   // #30  reserved30   SubCauseCodeType   
                                   // #31  reserved31   SubCauseCodeType   
                                   // #32  reserved32   SubCauseCodeType   
                                   // #33  reserved33   SubCauseCodeType   
                                   // #34  reserved34   SubCauseCodeType   
                                   // #35  reserved35   SubCauseCodeType   
                                   // #36  reserved36   SubCauseCodeType   
                                   // #37  reserved37   SubCauseCodeType   
                                   // #38  reserved38   SubCauseCodeType   
                                   // #39  reserved39   SubCauseCodeType   
                                   // #40  reserved40   SubCauseCodeType   
                                   // #41  reserved41   SubCauseCodeType   
                                   // #42  reserved42   SubCauseCodeType   
                                   // #43  reserved43   SubCauseCodeType   
                                   // #44  reserved44   SubCauseCodeType   
                                   // #45  reserved45   SubCauseCodeType   
                                   // #46  reserved46   SubCauseCodeType   
                                   // #47  reserved47   SubCauseCodeType   
                                   // #48  reserved48   SubCauseCodeType   
                                   // #49  reserved49   SubCauseCodeType   
                                   // #50  reserved50   SubCauseCodeType   
                                   // #51  reserved51   SubCauseCodeType   
                                   // #52  reserved52   SubCauseCodeType   
                                   // #53  reserved53   SubCauseCodeType   
                                   // #54  reserved54   SubCauseCodeType   
                                   // #55  reserved55   SubCauseCodeType   
                                   // #56  reserved56   SubCauseCodeType   
                                   // #57  reserved57   SubCauseCodeType   
                                   // #58  reserved58   SubCauseCodeType   
                                   // #59  reserved59   SubCauseCodeType   
                                   // #60  reserved60   SubCauseCodeType   
                                   // #61  reserved61   SubCauseCodeType   
                                   // #62  reserved62   SubCauseCodeType   
                                   // #63  reserved63   SubCauseCodeType   
                                   // #64  reserved64   SubCauseCodeType   
                                   // #65  reserved65   SubCauseCodeType   
                                   // #66  reserved66   SubCauseCodeType   
                                   // #67  reserved67   SubCauseCodeType   
                                   // #68  reserved68   SubCauseCodeType   
                                   // #69  reserved69   SubCauseCodeType   
                                   // #70  reserved70   SubCauseCodeType   
                                   // #71  reserved71   SubCauseCodeType   
                                   // #72  reserved72   SubCauseCodeType   
                                   // #73  reserved73   SubCauseCodeType   
                                   // #74  reserved74   SubCauseCodeType   
                                   // #75  reserved75   SubCauseCodeType   
                                   // #76  reserved76   SubCauseCodeType   
                                   // #77  reserved77   SubCauseCodeType   
                                   // #78  reserved78   SubCauseCodeType   
                                   // #79  reserved79   SubCauseCodeType   
                                   // #80  reserved80   SubCauseCodeType   
                                   // #81  reserved81   SubCauseCodeType   
                                   // #82  reserved82   SubCauseCodeType   
                                   // #83  reserved83   SubCauseCodeType   
                                   // #84  reserved84   SubCauseCodeType   
                                   // #85  reserved85   SubCauseCodeType   
                                   // #86  reserved86   SubCauseCodeType   
                                   // #87  reserved87   SubCauseCodeType   
                                   // #88  reserved88   SubCauseCodeType   
                                   // #89  reserved89   SubCauseCodeType   
                                   // #90  reserved90   SubCauseCodeType   
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode   
                                   // #92  postCrash92   PostCrashSubCauseCode   
                                   // #93  humanProblem93   HumanProblemSubCauseCode   
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode   
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode   
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode   
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode   
                                   // #98  signalViolation98   SignalViolationSubCauseCode   
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode   
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode   
                                   // #101  reserved101   SubCauseCodeType   
                                   // #102  reserved102   SubCauseCodeType   
                                   // #103  reserved103   SubCauseCodeType   
                                   // #104  reserved104   SubCauseCodeType   
                                   // #105  reserved105   SubCauseCodeType   
                                   // #106  reserved106   SubCauseCodeType   
                                   // #107  reserved107   SubCauseCodeType   
                                   // #108  reserved108   SubCauseCodeType   
                                   // #109  reserved109   SubCauseCodeType   
                                   // #110  reserved110   SubCauseCodeType   
                                   // #111  reserved111   SubCauseCodeType   
                                   // #112  reserved112   SubCauseCodeType   
                                   // #113  reserved113   SubCauseCodeType   
                                   // #114  reserved114   SubCauseCodeType   
                                   // #115  reserved115   SubCauseCodeType   
                                   // #116  reserved116   SubCauseCodeType   
                                   // #117  reserved117   SubCauseCodeType   
                                   // #118  reserved118   SubCauseCodeType   
                                   // #119  reserved119   SubCauseCodeType   
                                   // #120  reserved120   SubCauseCodeType   
                                   // #121  reserved121   SubCauseCodeType   
                                   // #122  reserved122   SubCauseCodeType   
                                   // #123  reserved123   SubCauseCodeType   
                                   // #124  reserved124   SubCauseCodeType   
                                   // #125  reserved125   SubCauseCodeType   
                                   // #126  reserved126   SubCauseCodeType   
                                   // #127  reserved127   SubCauseCodeType   
                                   // #128  reserved128   SubCauseCodeType   
                                uint8_t _choice_9 = *(buffer++);
                                
                                if(_choice_9 == 0) {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_809;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0.push_back(_tmp_809);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_810 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_810;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000540") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved0[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 1)  // CHOICE CauseCodeChoice  fieldName(traffic_condition1)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::TrafficConditionSubCauseCode _tmp_811;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1.push_back(_tmp_811);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_812 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_812;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000541") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 2)  // CHOICE CauseCodeChoice  fieldName(accident2)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AccidentSubCauseCode _tmp_813;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2.push_back(_tmp_813);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_814 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_814;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000542") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.accident2[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 3)  // CHOICE CauseCodeChoice  fieldName(roadworks3)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadworksSubCauseCode _tmp_815;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3.push_back(_tmp_815);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_816 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_816;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000543") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.roadworks3[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 4)  // CHOICE CauseCodeChoice  fieldName(reserved4)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_817;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4.push_back(_tmp_817);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_818 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_818;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000544") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved4[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 5)  // CHOICE CauseCodeChoice  fieldName(impassability5)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::ImpassabilitySubCauseCode _tmp_819;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5.push_back(_tmp_819);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_820 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_820;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000545") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.impassability5[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 6)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_adhesion6)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionAdhesionSubCauseCode _tmp_821;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6.push_back(_tmp_821);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_822 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_822;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000546") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 7)  // CHOICE CauseCodeChoice  fieldName(aquaplaning7)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_823;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7.push_back(_tmp_823);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_824 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_824;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000547") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 8)  // CHOICE CauseCodeChoice  fieldName(reserved8)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_825;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8.push_back(_tmp_825);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_826 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_826;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000548") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved8[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 9)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_surface_condition9)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationSurfaceConditionSubCauseCode _tmp_827;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9.push_back(_tmp_827);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_828 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_828;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000549") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 10)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_obstacle_on_the_road10)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationObstacleOnTheRoadSubCauseCode _tmp_829;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.push_back(_tmp_829);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_830 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_830;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000550") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 11)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_animal_on_the_road11)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationAnimalOnTheRoadSubCauseCode _tmp_831;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11.push_back(_tmp_831);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_832 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_832;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000551") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 12)  // CHOICE CauseCodeChoice  fieldName(human_presence_on_the_road12)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HumanPresenceOnTheRoadSubCauseCode _tmp_833;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12.push_back(_tmp_833);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_834 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_834;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000552") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 13)  // CHOICE CauseCodeChoice  fieldName(reserved13)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_835;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13.push_back(_tmp_835);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_836 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_836;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000553") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved13[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 14)  // CHOICE CauseCodeChoice  fieldName(wrong_way_driving14)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::WrongWayDrivingSubCauseCode _tmp_837;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14.push_back(_tmp_837);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_838 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_838;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000554") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 15)  // CHOICE CauseCodeChoice  fieldName(rescue_and_recovery_work_in_progress15)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RescueAndRecoveryWorkInProgressSubCauseCode _tmp_839;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15.push_back(_tmp_839);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_840 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_840;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000555") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 16)  // CHOICE CauseCodeChoice  fieldName(reserved16)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_841;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16.push_back(_tmp_841);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_842 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_842;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000556") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved16[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 17)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_extreme_weather_condition17)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionExtremeWeatherConditionSubCauseCode _tmp_843;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.push_back(_tmp_843);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_844 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_844;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000557") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 18)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_visibility18)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionVisibilitySubCauseCode _tmp_845;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18.push_back(_tmp_845);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_846 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_846;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000558") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 19)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_precipitation19)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionPrecipitationSubCauseCode _tmp_847;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19.push_back(_tmp_847);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_848 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_848;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000559") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 20)  // CHOICE CauseCodeChoice  fieldName(violence20)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_849;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20.push_back(_tmp_849);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_850 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_850;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000560") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.violence20[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 21)  // CHOICE CauseCodeChoice  fieldName(reserved21)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_851;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21.push_back(_tmp_851);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_852 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_852;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000561") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved21[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 22)  // CHOICE CauseCodeChoice  fieldName(reserved22)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_853;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22.push_back(_tmp_853);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_854 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_854;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000562") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved22[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 23)  // CHOICE CauseCodeChoice  fieldName(reserved23)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_855;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23.push_back(_tmp_855);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_856 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_856;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000563") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved23[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 24)  // CHOICE CauseCodeChoice  fieldName(reserved24)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_857;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24.push_back(_tmp_857);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_858 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_858;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000564") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved24[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 25)  // CHOICE CauseCodeChoice  fieldName(reserved25)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_859;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25.push_back(_tmp_859);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_860 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_860;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000565") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved25[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 26)  // CHOICE CauseCodeChoice  fieldName(slow_vehicle26)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SlowVehicleSubCauseCode _tmp_861;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26.push_back(_tmp_861);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_862 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_862;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000566") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 27)  // CHOICE CauseCodeChoice  fieldName(dangerous_end_of_queue27)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::DangerousEndOfQueueSubCauseCode _tmp_863;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27.push_back(_tmp_863);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_864 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_864;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000567") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 28)  // CHOICE CauseCodeChoice  fieldName(public_transport_vehicle_approaching28)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_865;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28.push_back(_tmp_865);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_866 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_866;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000568") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 29)  // CHOICE CauseCodeChoice  fieldName(reserved29)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_867;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29.push_back(_tmp_867);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_868 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_868;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000569") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved29[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 30)  // CHOICE CauseCodeChoice  fieldName(reserved30)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_869;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30.push_back(_tmp_869);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_870 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_870;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000570") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved30[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 31)  // CHOICE CauseCodeChoice  fieldName(reserved31)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_871;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31.push_back(_tmp_871);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_872 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_872;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000571") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved31[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 32)  // CHOICE CauseCodeChoice  fieldName(reserved32)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_873;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32.push_back(_tmp_873);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_874 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_874;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000572") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved32[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 33)  // CHOICE CauseCodeChoice  fieldName(reserved33)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_875;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33.push_back(_tmp_875);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_876 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_876;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000573") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved33[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 34)  // CHOICE CauseCodeChoice  fieldName(reserved34)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_877;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34.push_back(_tmp_877);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_878 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_878;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000574") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved34[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 35)  // CHOICE CauseCodeChoice  fieldName(reserved35)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_879;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35.push_back(_tmp_879);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_880 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_880;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000575") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved35[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 36)  // CHOICE CauseCodeChoice  fieldName(reserved36)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_881;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36.push_back(_tmp_881);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_882 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_882;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000576") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved36[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 37)  // CHOICE CauseCodeChoice  fieldName(reserved37)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_883;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37.push_back(_tmp_883);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_884 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_884;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000577") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved37[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 38)  // CHOICE CauseCodeChoice  fieldName(reserved38)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_885;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38.push_back(_tmp_885);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_886 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_886;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000578") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved38[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 39)  // CHOICE CauseCodeChoice  fieldName(reserved39)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_887;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39.push_back(_tmp_887);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_888 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_888;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000579") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved39[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 40)  // CHOICE CauseCodeChoice  fieldName(reserved40)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_889;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40.push_back(_tmp_889);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_890 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_890;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000580") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved40[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 41)  // CHOICE CauseCodeChoice  fieldName(reserved41)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_891;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41.push_back(_tmp_891);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_892 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_892;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000581") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved41[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 42)  // CHOICE CauseCodeChoice  fieldName(reserved42)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_893;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42.push_back(_tmp_893);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_894 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_894;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000582") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved42[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 43)  // CHOICE CauseCodeChoice  fieldName(reserved43)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_895;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43.push_back(_tmp_895);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_896 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_896;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000583") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved43[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 44)  // CHOICE CauseCodeChoice  fieldName(reserved44)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_897;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44.push_back(_tmp_897);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_898 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_898;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000584") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved44[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 45)  // CHOICE CauseCodeChoice  fieldName(reserved45)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_899;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45.push_back(_tmp_899);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_900 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_900;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000585") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved45[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 46)  // CHOICE CauseCodeChoice  fieldName(reserved46)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_901;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46.push_back(_tmp_901);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_902 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_902;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000586") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved46[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 47)  // CHOICE CauseCodeChoice  fieldName(reserved47)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_903;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47.push_back(_tmp_903);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_904 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_904;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000587") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved47[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 48)  // CHOICE CauseCodeChoice  fieldName(reserved48)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_905;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48.push_back(_tmp_905);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_906 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_906;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000588") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved48[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 49)  // CHOICE CauseCodeChoice  fieldName(reserved49)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_907;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49.push_back(_tmp_907);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_908 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_908;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000589") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved49[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 50)  // CHOICE CauseCodeChoice  fieldName(reserved50)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_909;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50.push_back(_tmp_909);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_910 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_910;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000590") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved50[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 51)  // CHOICE CauseCodeChoice  fieldName(reserved51)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_911;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51.push_back(_tmp_911);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_912 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_912;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000591") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved51[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 52)  // CHOICE CauseCodeChoice  fieldName(reserved52)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_913;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52.push_back(_tmp_913);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_914 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_914;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000592") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved52[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 53)  // CHOICE CauseCodeChoice  fieldName(reserved53)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_915;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53.push_back(_tmp_915);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_916 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_916;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000593") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved53[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 54)  // CHOICE CauseCodeChoice  fieldName(reserved54)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_917;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54.push_back(_tmp_917);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_918 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_918;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000594") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved54[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 55)  // CHOICE CauseCodeChoice  fieldName(reserved55)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_919;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55.push_back(_tmp_919);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_920 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_920;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000595") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved55[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 56)  // CHOICE CauseCodeChoice  fieldName(reserved56)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_921;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56.push_back(_tmp_921);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_922 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_922;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000596") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved56[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 57)  // CHOICE CauseCodeChoice  fieldName(reserved57)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_923;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57.push_back(_tmp_923);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_924 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_924;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000597") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved57[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 58)  // CHOICE CauseCodeChoice  fieldName(reserved58)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_925;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58.push_back(_tmp_925);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_926 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_926;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000598") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved58[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 59)  // CHOICE CauseCodeChoice  fieldName(reserved59)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_927;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59.push_back(_tmp_927);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_928 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_928;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000599") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved59[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 60)  // CHOICE CauseCodeChoice  fieldName(reserved60)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_929;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60.push_back(_tmp_929);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_930 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_930;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000600") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved60[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 61)  // CHOICE CauseCodeChoice  fieldName(reserved61)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_931;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61.push_back(_tmp_931);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_932 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_932;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000601") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved61[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 62)  // CHOICE CauseCodeChoice  fieldName(reserved62)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_933;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62.push_back(_tmp_933);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_934 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_934;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000602") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved62[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 63)  // CHOICE CauseCodeChoice  fieldName(reserved63)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_935;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63.push_back(_tmp_935);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_936 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_936;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000603") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved63[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 64)  // CHOICE CauseCodeChoice  fieldName(reserved64)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_937;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64.push_back(_tmp_937);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_938 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_938;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000604") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved64[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 65)  // CHOICE CauseCodeChoice  fieldName(reserved65)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_939;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65.push_back(_tmp_939);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_940 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_940;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000605") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved65[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 66)  // CHOICE CauseCodeChoice  fieldName(reserved66)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_941;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66.push_back(_tmp_941);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_942 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_942;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000606") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved66[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 67)  // CHOICE CauseCodeChoice  fieldName(reserved67)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_943;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67.push_back(_tmp_943);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_944 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_944;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000607") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved67[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 68)  // CHOICE CauseCodeChoice  fieldName(reserved68)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_945;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68.push_back(_tmp_945);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_946 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_946;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000608") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved68[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 69)  // CHOICE CauseCodeChoice  fieldName(reserved69)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_947;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69.push_back(_tmp_947);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_948 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_948;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000609") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved69[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 70)  // CHOICE CauseCodeChoice  fieldName(reserved70)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_949;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70.push_back(_tmp_949);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_950 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_950;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000610") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved70[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 71)  // CHOICE CauseCodeChoice  fieldName(reserved71)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_951;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71.push_back(_tmp_951);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_952 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_952;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000611") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved71[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 72)  // CHOICE CauseCodeChoice  fieldName(reserved72)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_953;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72.push_back(_tmp_953);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_954 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_954;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000612") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved72[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 73)  // CHOICE CauseCodeChoice  fieldName(reserved73)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_955;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73.push_back(_tmp_955);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_956 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_956;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000613") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved73[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 74)  // CHOICE CauseCodeChoice  fieldName(reserved74)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_957;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74.push_back(_tmp_957);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_958 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_958;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000614") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved74[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 75)  // CHOICE CauseCodeChoice  fieldName(reserved75)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_959;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75.push_back(_tmp_959);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_960 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_960;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000615") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved75[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 76)  // CHOICE CauseCodeChoice  fieldName(reserved76)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_961;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76.push_back(_tmp_961);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_962 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_962;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000616") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved76[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 77)  // CHOICE CauseCodeChoice  fieldName(reserved77)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_963;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77.push_back(_tmp_963);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_964 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_964;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000617") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved77[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 78)  // CHOICE CauseCodeChoice  fieldName(reserved78)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_965;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78.push_back(_tmp_965);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_966 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_966;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000618") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved78[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 79)  // CHOICE CauseCodeChoice  fieldName(reserved79)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_967;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79.push_back(_tmp_967);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_968 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_968;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000619") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved79[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 80)  // CHOICE CauseCodeChoice  fieldName(reserved80)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_969;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80.push_back(_tmp_969);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_970 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_970;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000620") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved80[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 81)  // CHOICE CauseCodeChoice  fieldName(reserved81)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_971;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81.push_back(_tmp_971);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_972 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_972;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000621") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved81[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 82)  // CHOICE CauseCodeChoice  fieldName(reserved82)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_973;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82.push_back(_tmp_973);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_974 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_974;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000622") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved82[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 83)  // CHOICE CauseCodeChoice  fieldName(reserved83)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_975;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83.push_back(_tmp_975);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_976 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_976;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000623") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved83[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 84)  // CHOICE CauseCodeChoice  fieldName(reserved84)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_977;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84.push_back(_tmp_977);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_978 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_978;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000624") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved84[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 85)  // CHOICE CauseCodeChoice  fieldName(reserved85)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_979;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85.push_back(_tmp_979);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_980 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_980;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000625") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved85[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 86)  // CHOICE CauseCodeChoice  fieldName(reserved86)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_981;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86.push_back(_tmp_981);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_982 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_982;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000626") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved86[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 87)  // CHOICE CauseCodeChoice  fieldName(reserved87)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_983;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87.push_back(_tmp_983);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_984 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_984;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000627") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved87[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 88)  // CHOICE CauseCodeChoice  fieldName(reserved88)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_985;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88.push_back(_tmp_985);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_986 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_986;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000628") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved88[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 89)  // CHOICE CauseCodeChoice  fieldName(reserved89)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_987;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89.push_back(_tmp_987);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_988 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_988;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000629") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved89[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 90)  // CHOICE CauseCodeChoice  fieldName(reserved90)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_989;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90.push_back(_tmp_989);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_990 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_990;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000630") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved90[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 91)  // CHOICE CauseCodeChoice  fieldName(vehicle_breakdown91)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::VehicleBreakdownSubCauseCode _tmp_991;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91.push_back(_tmp_991);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_992 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_992;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000631") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 92)  // CHOICE CauseCodeChoice  fieldName(post_crash92)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::PostCrashSubCauseCode _tmp_993;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92.push_back(_tmp_993);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_994 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_994;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000632") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.post_crash92[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 93)  // CHOICE CauseCodeChoice  fieldName(human_problem93)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HumanProblemSubCauseCode _tmp_995;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93.push_back(_tmp_995);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_996 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_996;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000633") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.human_problem93[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 94)  // CHOICE CauseCodeChoice  fieldName(stationary_vehicle94)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::StationaryVehicleSubCauseCode _tmp_997;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94.push_back(_tmp_997);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_998 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_998;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000634") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 95)  // CHOICE CauseCodeChoice  fieldName(emergency_vehicle_approaching95)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::EmergencyVehicleApproachingSubCauseCode _tmp_999;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95.push_back(_tmp_999);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1000 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1000;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000635") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 96)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_dangerous_curve96)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationDangerousCurveSubCauseCode _tmp_1001;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96.push_back(_tmp_1001);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1002 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1002;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000636") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 97)  // CHOICE CauseCodeChoice  fieldName(collision_risk97)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::CollisionRiskSubCauseCode _tmp_1003;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97.push_back(_tmp_1003);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1004 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1004;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000637") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 98)  // CHOICE CauseCodeChoice  fieldName(signal_violation98)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SignalViolationSubCauseCode _tmp_1005;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98.push_back(_tmp_1005);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1006 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1006;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000638") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 99)  // CHOICE CauseCodeChoice  fieldName(dangerous_situation99)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::DangerousSituationSubCauseCode _tmp_1007;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99.push_back(_tmp_1007);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1008 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1008;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000639") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 100)  // CHOICE CauseCodeChoice  fieldName(railway_level_crossing100)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RailwayLevelCrossingSubCauseCode _tmp_1009;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100.push_back(_tmp_1009);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1010 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1010;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000640") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 101)  // CHOICE CauseCodeChoice  fieldName(reserved101)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1011;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101.push_back(_tmp_1011);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1012 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1012;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000641") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved101[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 102)  // CHOICE CauseCodeChoice  fieldName(reserved102)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1013;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102.push_back(_tmp_1013);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1014 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1014;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000642") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved102[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 103)  // CHOICE CauseCodeChoice  fieldName(reserved103)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1015;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103.push_back(_tmp_1015);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1016 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1016;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000643") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved103[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 104)  // CHOICE CauseCodeChoice  fieldName(reserved104)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1017;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104.push_back(_tmp_1017);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1018 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1018;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000644") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved104[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 105)  // CHOICE CauseCodeChoice  fieldName(reserved105)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1019;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105.push_back(_tmp_1019);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1020 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1020;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000645") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved105[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 106)  // CHOICE CauseCodeChoice  fieldName(reserved106)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1021;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106.push_back(_tmp_1021);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1022 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1022;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000646") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved106[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 107)  // CHOICE CauseCodeChoice  fieldName(reserved107)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1023;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107.push_back(_tmp_1023);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1024 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1024;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000647") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved107[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 108)  // CHOICE CauseCodeChoice  fieldName(reserved108)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1025;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108.push_back(_tmp_1025);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1026 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1026;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000648") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved108[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 109)  // CHOICE CauseCodeChoice  fieldName(reserved109)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1027;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109.push_back(_tmp_1027);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1028 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1028;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000649") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved109[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 110)  // CHOICE CauseCodeChoice  fieldName(reserved110)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1029;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110.push_back(_tmp_1029);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1030 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1030;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000650") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved110[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 111)  // CHOICE CauseCodeChoice  fieldName(reserved111)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1031;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111.push_back(_tmp_1031);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1032 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1032;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000651") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved111[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 112)  // CHOICE CauseCodeChoice  fieldName(reserved112)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1033;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112.push_back(_tmp_1033);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1034 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1034;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000652") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved112[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 113)  // CHOICE CauseCodeChoice  fieldName(reserved113)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1035;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113.push_back(_tmp_1035);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1036 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1036;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000653") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved113[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 114)  // CHOICE CauseCodeChoice  fieldName(reserved114)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1037;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114.push_back(_tmp_1037);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1038 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1038;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000654") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved114[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 115)  // CHOICE CauseCodeChoice  fieldName(reserved115)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1039;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115.push_back(_tmp_1039);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1040 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1040;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000655") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved115[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 116)  // CHOICE CauseCodeChoice  fieldName(reserved116)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1041;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116.push_back(_tmp_1041);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1042 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1042;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000656") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved116[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 117)  // CHOICE CauseCodeChoice  fieldName(reserved117)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1043;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117.push_back(_tmp_1043);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1044 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1044;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000657") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved117[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 118)  // CHOICE CauseCodeChoice  fieldName(reserved118)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1045;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118.push_back(_tmp_1045);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1046 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1046;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000658") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved118[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 119)  // CHOICE CauseCodeChoice  fieldName(reserved119)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1047;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119.push_back(_tmp_1047);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1048 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1048;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000659") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved119[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 120)  // CHOICE CauseCodeChoice  fieldName(reserved120)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1049;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120.push_back(_tmp_1049);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1050 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1050;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000660") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved120[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 121)  // CHOICE CauseCodeChoice  fieldName(reserved121)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1051;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121.push_back(_tmp_1051);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1052 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1052;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000661") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved121[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 122)  // CHOICE CauseCodeChoice  fieldName(reserved122)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1053;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122.push_back(_tmp_1053);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1054 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1054;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000662") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved122[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 123)  // CHOICE CauseCodeChoice  fieldName(reserved123)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1055;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123.push_back(_tmp_1055);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1056 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1056;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000663") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved123[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 124)  // CHOICE CauseCodeChoice  fieldName(reserved124)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1057;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124.push_back(_tmp_1057);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1058 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1058;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000664") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved124[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 125)  // CHOICE CauseCodeChoice  fieldName(reserved125)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1059;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125.push_back(_tmp_1059);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1060 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1060;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000665") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved125[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 126)  // CHOICE CauseCodeChoice  fieldName(reserved126)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1061;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126.push_back(_tmp_1061);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1062 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1062;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000666") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved126[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 127)  // CHOICE CauseCodeChoice  fieldName(reserved127)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1063;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127.push_back(_tmp_1063);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1064 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1064;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000667") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved127[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_9 == 128)  // CHOICE CauseCodeChoice  fieldName(reserved128)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1065;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128.push_back(_tmp_1065);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1066 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1066;
                                    ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000668") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc.reserved128[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_9) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].road_works[0].incident_indication[0].cc_and_scc'; message dropped.";
                                    return false;
                                }
                                if(*_ext_flag_108) { // from ros->denm.alacarte[0].road_works[0].incident_indication[0]. 
                                    uint8_t* _tmp_1067 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_25[*_tmp_1067];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000669") << "| Reading number of exts from ros->denm.alacarte[0].road_works[0].incident_indication[0].: " << static_cast<unsigned int>(*_tmp_1067);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1067; i++)
                                        _array_25[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1067; i++) {
                                        uint16_t* _tmp_1068 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1068; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].recommended_path.size() != 0) {
                            // Field name: recommended_path
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(40) span(40)
                            int16_t* _tmp_1069 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_1069;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_1069 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000670") << "| SequenceOf ros->denm.alacarte[0].road_works[0].recommended_path[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 40) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].value' " << (__aux64__) << " exceeds max allowable (40); message dropped.";
                                return false;
                            }
                            
                            
                            for(int x = 0; x < _if__tmp_1069; x++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::ReferencePosition seqof_x;  // SEQUENCE
                                ros->denm.alacarte[0].road_works[0].recommended_path[0].elements.push_back(seqof_x);
                            
                                    // ReferencePosition  SEQUENCE
                                        //  latitude                  Latitude                 
                                        //  longitude                 Longitude                
                                        //  positionConfidenceEllipse PosConfidenceEllipse     
                                        //  altitude                  Altitude                 
                                    
                                    // Field name: latitude
                                    // Real
                                    // Double
                                    // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                    uint32_t* _tmp_1070 = (uint32_t*) buffer; buffer += 4;
                                    ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value = *_tmp_1070;
                                    ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value += -900000000;
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value;
                                    ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value /= 1.0E7;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000671") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value) << " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude: " <<
                                                     ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].latitude.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: longitude
                                    // Real
                                    // Double
                                    // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                    uint32_t* _tmp_1071 = (uint32_t*) buffer; buffer += 4;
                                    ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value = *_tmp_1071;
                                    ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value += -1800000000;
                                    __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value;
                                    ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value /= 1.0E7;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000672") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value) << " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude: " <<
                                                     ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].longitude.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: position_confidence_ellipse
                                        // PosConfidenceEllipse  SEQUENCE
                                            //  semiMajorConfidence  SemiAxisLength     
                                            //  semiMinorConfidence  SemiAxisLength     
                                            //  semiMajorOrientation HeadingValue       
                                        
                                        // Field name: semi_major_confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1072 = (uint16_t*) buffer; buffer += 2;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value = *_tmp_1072;
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000673") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value) << " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence: " <<
                                                         ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: semi_minor_confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1073 = (uint16_t*) buffer; buffer += 2;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value = *_tmp_1073;
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000674") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value) << " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence: " <<
                                                         ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: semi_major_orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1074 = (uint16_t*) buffer; buffer += 2;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value = *_tmp_1074;
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000675") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value) << " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation: " <<
                                                         ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].position_confidence_ellipse.semi_major_orientation.value << " (" << __aux64__ << ")";
                                        }
                                    
                                    // Field name: altitude
                                        // Altitude  SEQUENCE
                                            //  altitudeValue      AltitudeValue          
                                            //  altitudeConfidence AltitudeConfidence     
                                        
                                        // Field name: altitude_value
                                        // Real
                                        // Float
                                        // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                        uint32_t* _tmp_1075 = (uint32_t*) buffer; buffer += 4;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value = *_tmp_1075;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value += -100000;
                                        __aux64__ = ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000676") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value) << " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value: " <<
                                                         ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: altitude_confidence
                                        // Enumerated
                                        // INT32  min(0) max(15) span(16) datatype(Int32)
                                        uint8_t* _tmp_1076 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_1076;
                                        __aux64__ += 0;
                                        ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value = __aux64__;
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000677") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value) << 
                                                         " denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].recommended_path[0].elements[x].altitude.altitude_confidence.value);
                                        }
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit.size() != 0) {
                            // Field name: starting_point_speed_limit
                                // DeltaReferencePosition  SEQUENCE
                                    //  deltaLatitude  DeltaLatitude      
                                    //  deltaLongitude DeltaLongitude     
                                    //  deltaAltitude  DeltaAltitude      
                                
                                // Field name: delta_latitude
                                // Real
                                // Double
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                uint32_t* _tmp_1077 = (uint32_t*) buffer; buffer += 4;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value = *_tmp_1077;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value += -131071;
                                __aux64__ = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value /= 1.0E7;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000678") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value) << " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude: " <<
                                                 ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_latitude.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: delta_longitude
                                // Real
                                // Double
                                // DOUBLE  min(-131071) max(131072) span(262144) scaleDivisor(1.0E7) dataType(Double)
                                uint32_t* _tmp_1078 = (uint32_t*) buffer; buffer += 4;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value = *_tmp_1078;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value += -131071;
                                __aux64__ = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value /= 1.0E7;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -131071) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' " << (__aux64__) << " is less than allowable (-131071); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 131072) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value' " << (__aux64__) << " exceeds max allowable (131072); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000679") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value) << " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude: " <<
                                                 ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_longitude.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: delta_altitude
                                // Real
                                // Float
                                // FLOAT  min(-12700) max(12800) span(25501) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_1079 = (uint16_t*) buffer; buffer += 2;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value = *_tmp_1079;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value += -12700;
                                __aux64__ = ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value;
                                ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -12700) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' " << (__aux64__) << " is less than allowable (-12700); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 12800) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value' " << (__aux64__) << " exceeds max allowable (12800); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000680") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value) << " denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude: " <<
                                                 ros->denm.alacarte[0].road_works[0].starting_point_speed_limit[0].delta_altitude.value << " (" << __aux64__ << ")";
                                }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].traffic_flow_rule.size() != 0) {
                            // Field name: traffic_flow_rule
                            // Enumerated
                            // INT32  min(0) max(4) span(5) datatype(Int32)
                            uint8_t* _ext_flag_120 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000681") << "| Reading ext flag from ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].: " << int(*_ext_flag_120);
                            }
                            
                            uint8_t* _tmp_1080 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_1080;
                            __aux64__ += 0;
                            ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value = __aux64__;
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].traffic_flow_rule[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                return false;
                            }
                            
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000682") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value) << 
                                             " denm.alacarte[0].road_works[0].traffic_flow_rule[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_works[0].traffic_flow_rule[0].value);
                            }
                        }
                        
                        if(ros->denm.alacarte[0].road_works[0].reference_denms.size() != 0) {
                            // Field name: reference_denms
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(8) span(8)
                            uint8_t* _ext_flag_121 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_works[0].reference_denms[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000683") << "| Reading ext flag from ros->denm.alacarte[0].road_works[0].reference_denms[0].: " << int(*_ext_flag_121);
                            }
                            
                            int16_t* _tmp_1081 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_1081;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_1081 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000684") << "| SequenceOf ros->denm.alacarte[0].road_works[0].reference_denms[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                return false;
                            }
                            
                            
                            for(int y = 0; y < _if__tmp_1081; y++) {
                                its_container_v4_etsi_its_cdd_msgs::msg::ActionId seqof_y;  // SEQUENCE
                                ros->denm.alacarte[0].road_works[0].reference_denms[0].elements.push_back(seqof_y);
                            
                                    // ActionId  SEQUENCE
                                        //  originatingStationId StationId          
                                        //  sequenceNumber       SequenceNumber     
                                    
                                    // Field name: originating_station_id
                                    // Integer
                                    // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
                                    uint32_t* _tmp_1082 = (uint32_t*) buffer; buffer += 4;
                                    __aux64__ = *_tmp_1082;
                                    ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000685") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].originating_station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: sequence_number
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_1083 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_1083;
                                    ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000686") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value) << 
                                                     " denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value: " << ros->denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_works[0].reference_denms[0].elements[y].sequence_number.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                            }
                        }
                }
                
                if(ros->denm.alacarte[0].positioning_solution.size() != 0) {
                    // Field name: positioning_solution
                    // Enumerated
                    // INT32  min(0) max(6) span(7) datatype(Int32)
                    uint8_t* _ext_flag_122 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].positioning_solution[0].
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000687") << "| Reading ext flag from ros->denm.alacarte[0].positioning_solution[0].: " << int(*_ext_flag_122);
                    }
                    
                    uint8_t* _tmp_1084 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_1084;
                    __aux64__ += 0;
                    ros->denm.alacarte[0].positioning_solution[0].value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 6) {
                        logger->error() << "Error: Value in 'denm.alacarte[0].positioning_solution[0].value' " << (__aux64__) << " exceeds max allowable (6); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000688") << "| " << tools::getTypeName(ros->denm.alacarte[0].positioning_solution[0].value) << 
                                     " denm.alacarte[0].positioning_solution[0].value: " << static_cast<int>(ros->denm.alacarte[0].positioning_solution[0].value);
                    }
                }
                
                if(ros->denm.alacarte[0].stationary_vehicle.size() != 0) {
                    // Field name: stationary_vehicle
                        // StationaryVehicleContainer  SEQUENCE
                            //  stationarySince        StationarySince          OPTIONAL  
                            //  stationaryCause        CauseCodeV2              OPTIONAL  
                            //  carryingDangerousGoods DangerousGoodsExtended   OPTIONAL  
                            //  numberOfOccupants      NumberOfOccupants        OPTIONAL  
                            //  vehicleIdentification  VehicleIdentification    OPTIONAL  
                            //  energyStorageType      EnergyStorageType        OPTIONAL  
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::StationarySince _tmp_1085;
                            ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.push_back(_tmp_1085);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000689") << "| ros->denm.alacarte[0].stationary_vehicle[0].stationary_since " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::CauseCodeV2 _tmp_1086;
                            ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.push_back(_tmp_1086);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000690") << "| ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::DangerousGoodsExtended _tmp_1087;
                            ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.push_back(_tmp_1087);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000691") << "| ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::NumberOfOccupants _tmp_1088;
                            ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.push_back(_tmp_1088);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000692") << "| ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::VehicleIdentification _tmp_1089;
                            ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.push_back(_tmp_1089);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000693") << "| ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v4_etsi_its_cdd_msgs::msg::EnergyStorageType _tmp_1090;
                            ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.push_back(_tmp_1090);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000694") << "| ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type " << tools::green("present");
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since.size() != 0) {
                            // Field name: stationary_since
                            // Enumerated
                            // INT32  min(0) max(3) span(4) datatype(Int32)
                            uint8_t* _tmp_1091 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_1091;
                            __aux64__ += 0;
                            ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value = __aux64__;
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                return false;
                            }
                            
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000695") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_since[0].value);
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause.size() != 0) {
                            // Field name: stationary_cause
                                // CauseCodeV2  SEQUENCE
                                    //  ccAndScc   CauseCodeChoice     
                                    //  ...
                                uint8_t* _ext_flag_124 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000696") << "| Reading ext flag from ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].: " << int(*_ext_flag_124);
                                }
                                
                                
                                // Field name: cc_and_scc
                                // Choice
                                   // #0  reserved0   SubCauseCodeType   
                                   // #1  trafficCondition1   TrafficConditionSubCauseCode   
                                   // #2  accident2   AccidentSubCauseCode   
                                   // #3  roadworks3   RoadworksSubCauseCode   
                                   // #4  reserved4   SubCauseCodeType   
                                   // #5  impassability5   ImpassabilitySubCauseCode   
                                   // #6  adverseWeatherCondition_Adhesion6   AdverseWeatherCondition_AdhesionSubCauseCode   
                                   // #7  aquaplaning7   SubCauseCodeType   
                                   // #8  reserved8   SubCauseCodeType   
                                   // #9  hazardousLocation_SurfaceCondition9   HazardousLocation_SurfaceConditionSubCauseCode   
                                   // #10  hazardousLocation_ObstacleOnTheRoad10   HazardousLocation_ObstacleOnTheRoadSubCauseCode   
                                   // #11  hazardousLocation_AnimalOnTheRoad11   HazardousLocation_AnimalOnTheRoadSubCauseCode   
                                   // #12  humanPresenceOnTheRoad12   HumanPresenceOnTheRoadSubCauseCode   
                                   // #13  reserved13   SubCauseCodeType   
                                   // #14  wrongWayDriving14   WrongWayDrivingSubCauseCode   
                                   // #15  rescueAndRecoveryWorkInProgress15   RescueAndRecoveryWorkInProgressSubCauseCode   
                                   // #16  reserved16   SubCauseCodeType   
                                   // #17  adverseWeatherCondition_ExtremeWeatherCondition17   AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode   
                                   // #18  adverseWeatherCondition_Visibility18   AdverseWeatherCondition_VisibilitySubCauseCode   
                                   // #19  adverseWeatherCondition_Precipitation19   AdverseWeatherCondition_PrecipitationSubCauseCode   
                                   // #20  violence20   SubCauseCodeType   
                                   // #21  reserved21   SubCauseCodeType   
                                   // #22  reserved22   SubCauseCodeType   
                                   // #23  reserved23   SubCauseCodeType   
                                   // #24  reserved24   SubCauseCodeType   
                                   // #25  reserved25   SubCauseCodeType   
                                   // #26  slowVehicle26   SlowVehicleSubCauseCode   
                                   // #27  dangerousEndOfQueue27   DangerousEndOfQueueSubCauseCode   
                                   // #28  publicTransportVehicleApproaching28   SubCauseCodeType   
                                   // #29  reserved29   SubCauseCodeType   
                                   // #30  reserved30   SubCauseCodeType   
                                   // #31  reserved31   SubCauseCodeType   
                                   // #32  reserved32   SubCauseCodeType   
                                   // #33  reserved33   SubCauseCodeType   
                                   // #34  reserved34   SubCauseCodeType   
                                   // #35  reserved35   SubCauseCodeType   
                                   // #36  reserved36   SubCauseCodeType   
                                   // #37  reserved37   SubCauseCodeType   
                                   // #38  reserved38   SubCauseCodeType   
                                   // #39  reserved39   SubCauseCodeType   
                                   // #40  reserved40   SubCauseCodeType   
                                   // #41  reserved41   SubCauseCodeType   
                                   // #42  reserved42   SubCauseCodeType   
                                   // #43  reserved43   SubCauseCodeType   
                                   // #44  reserved44   SubCauseCodeType   
                                   // #45  reserved45   SubCauseCodeType   
                                   // #46  reserved46   SubCauseCodeType   
                                   // #47  reserved47   SubCauseCodeType   
                                   // #48  reserved48   SubCauseCodeType   
                                   // #49  reserved49   SubCauseCodeType   
                                   // #50  reserved50   SubCauseCodeType   
                                   // #51  reserved51   SubCauseCodeType   
                                   // #52  reserved52   SubCauseCodeType   
                                   // #53  reserved53   SubCauseCodeType   
                                   // #54  reserved54   SubCauseCodeType   
                                   // #55  reserved55   SubCauseCodeType   
                                   // #56  reserved56   SubCauseCodeType   
                                   // #57  reserved57   SubCauseCodeType   
                                   // #58  reserved58   SubCauseCodeType   
                                   // #59  reserved59   SubCauseCodeType   
                                   // #60  reserved60   SubCauseCodeType   
                                   // #61  reserved61   SubCauseCodeType   
                                   // #62  reserved62   SubCauseCodeType   
                                   // #63  reserved63   SubCauseCodeType   
                                   // #64  reserved64   SubCauseCodeType   
                                   // #65  reserved65   SubCauseCodeType   
                                   // #66  reserved66   SubCauseCodeType   
                                   // #67  reserved67   SubCauseCodeType   
                                   // #68  reserved68   SubCauseCodeType   
                                   // #69  reserved69   SubCauseCodeType   
                                   // #70  reserved70   SubCauseCodeType   
                                   // #71  reserved71   SubCauseCodeType   
                                   // #72  reserved72   SubCauseCodeType   
                                   // #73  reserved73   SubCauseCodeType   
                                   // #74  reserved74   SubCauseCodeType   
                                   // #75  reserved75   SubCauseCodeType   
                                   // #76  reserved76   SubCauseCodeType   
                                   // #77  reserved77   SubCauseCodeType   
                                   // #78  reserved78   SubCauseCodeType   
                                   // #79  reserved79   SubCauseCodeType   
                                   // #80  reserved80   SubCauseCodeType   
                                   // #81  reserved81   SubCauseCodeType   
                                   // #82  reserved82   SubCauseCodeType   
                                   // #83  reserved83   SubCauseCodeType   
                                   // #84  reserved84   SubCauseCodeType   
                                   // #85  reserved85   SubCauseCodeType   
                                   // #86  reserved86   SubCauseCodeType   
                                   // #87  reserved87   SubCauseCodeType   
                                   // #88  reserved88   SubCauseCodeType   
                                   // #89  reserved89   SubCauseCodeType   
                                   // #90  reserved90   SubCauseCodeType   
                                   // #91  vehicleBreakdown91   VehicleBreakdownSubCauseCode   
                                   // #92  postCrash92   PostCrashSubCauseCode   
                                   // #93  humanProblem93   HumanProblemSubCauseCode   
                                   // #94  stationaryVehicle94   StationaryVehicleSubCauseCode   
                                   // #95  emergencyVehicleApproaching95   EmergencyVehicleApproachingSubCauseCode   
                                   // #96  hazardousLocation_DangerousCurve96   HazardousLocation_DangerousCurveSubCauseCode   
                                   // #97  collisionRisk97   CollisionRiskSubCauseCode   
                                   // #98  signalViolation98   SignalViolationSubCauseCode   
                                   // #99  dangerousSituation99   DangerousSituationSubCauseCode   
                                   // #100  railwayLevelCrossing100   RailwayLevelCrossingSubCauseCode   
                                   // #101  reserved101   SubCauseCodeType   
                                   // #102  reserved102   SubCauseCodeType   
                                   // #103  reserved103   SubCauseCodeType   
                                   // #104  reserved104   SubCauseCodeType   
                                   // #105  reserved105   SubCauseCodeType   
                                   // #106  reserved106   SubCauseCodeType   
                                   // #107  reserved107   SubCauseCodeType   
                                   // #108  reserved108   SubCauseCodeType   
                                   // #109  reserved109   SubCauseCodeType   
                                   // #110  reserved110   SubCauseCodeType   
                                   // #111  reserved111   SubCauseCodeType   
                                   // #112  reserved112   SubCauseCodeType   
                                   // #113  reserved113   SubCauseCodeType   
                                   // #114  reserved114   SubCauseCodeType   
                                   // #115  reserved115   SubCauseCodeType   
                                   // #116  reserved116   SubCauseCodeType   
                                   // #117  reserved117   SubCauseCodeType   
                                   // #118  reserved118   SubCauseCodeType   
                                   // #119  reserved119   SubCauseCodeType   
                                   // #120  reserved120   SubCauseCodeType   
                                   // #121  reserved121   SubCauseCodeType   
                                   // #122  reserved122   SubCauseCodeType   
                                   // #123  reserved123   SubCauseCodeType   
                                   // #124  reserved124   SubCauseCodeType   
                                   // #125  reserved125   SubCauseCodeType   
                                   // #126  reserved126   SubCauseCodeType   
                                   // #127  reserved127   SubCauseCodeType   
                                   // #128  reserved128   SubCauseCodeType   
                                uint8_t _choice_10 = *(buffer++);
                                
                                if(_choice_10 == 0) {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1092;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0.push_back(_tmp_1092);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1093 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1093;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000697") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved0[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 1)  // CHOICE CauseCodeChoice  fieldName(traffic_condition1)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::TrafficConditionSubCauseCode _tmp_1094;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1.push_back(_tmp_1094);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1095 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1095;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000698") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.traffic_condition1[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 2)  // CHOICE CauseCodeChoice  fieldName(accident2)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AccidentSubCauseCode _tmp_1096;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2.push_back(_tmp_1096);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1097 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1097;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000699") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.accident2[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 3)  // CHOICE CauseCodeChoice  fieldName(roadworks3)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadworksSubCauseCode _tmp_1098;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3.push_back(_tmp_1098);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1099 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1099;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000700") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.roadworks3[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 4)  // CHOICE CauseCodeChoice  fieldName(reserved4)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1100;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4.push_back(_tmp_1100);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1101 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1101;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000701") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved4[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 5)  // CHOICE CauseCodeChoice  fieldName(impassability5)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::ImpassabilitySubCauseCode _tmp_1102;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5.push_back(_tmp_1102);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1103 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1103;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000702") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.impassability5[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 6)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_adhesion6)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionAdhesionSubCauseCode _tmp_1104;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6.push_back(_tmp_1104);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1105 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1105;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000703") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_adhesion6[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 7)  // CHOICE CauseCodeChoice  fieldName(aquaplaning7)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1106;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7.push_back(_tmp_1106);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1107 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1107;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000704") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.aquaplaning7[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 8)  // CHOICE CauseCodeChoice  fieldName(reserved8)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1108;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8.push_back(_tmp_1108);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1109 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1109;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000705") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved8[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 9)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_surface_condition9)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationSurfaceConditionSubCauseCode _tmp_1110;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9.push_back(_tmp_1110);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1111 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1111;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000706") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_surface_condition9[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 10)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_obstacle_on_the_road10)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationObstacleOnTheRoadSubCauseCode _tmp_1112;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10.push_back(_tmp_1112);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1113 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1113;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000707") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_obstacle_on_the_road10[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 11)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_animal_on_the_road11)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationAnimalOnTheRoadSubCauseCode _tmp_1114;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11.push_back(_tmp_1114);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1115 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1115;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000708") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_animal_on_the_road11[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 12)  // CHOICE CauseCodeChoice  fieldName(human_presence_on_the_road12)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HumanPresenceOnTheRoadSubCauseCode _tmp_1116;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12.push_back(_tmp_1116);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1117 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1117;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000709") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_presence_on_the_road12[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 13)  // CHOICE CauseCodeChoice  fieldName(reserved13)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1118;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13.push_back(_tmp_1118);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1119 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1119;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000710") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved13[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 14)  // CHOICE CauseCodeChoice  fieldName(wrong_way_driving14)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::WrongWayDrivingSubCauseCode _tmp_1120;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14.push_back(_tmp_1120);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1121 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1121;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000711") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.wrong_way_driving14[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 15)  // CHOICE CauseCodeChoice  fieldName(rescue_and_recovery_work_in_progress15)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RescueAndRecoveryWorkInProgressSubCauseCode _tmp_1122;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15.push_back(_tmp_1122);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1123 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1123;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000712") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.rescue_and_recovery_work_in_progress15[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 16)  // CHOICE CauseCodeChoice  fieldName(reserved16)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1124;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16.push_back(_tmp_1124);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1125 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1125;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000713") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved16[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 17)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_extreme_weather_condition17)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionExtremeWeatherConditionSubCauseCode _tmp_1126;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17.push_back(_tmp_1126);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1127 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1127;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000714") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_extreme_weather_condition17[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 18)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_visibility18)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionVisibilitySubCauseCode _tmp_1128;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18.push_back(_tmp_1128);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1129 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1129;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000715") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_visibility18[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 19)  // CHOICE CauseCodeChoice  fieldName(adverse_weather_condition_precipitation19)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::AdverseWeatherConditionPrecipitationSubCauseCode _tmp_1130;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19.push_back(_tmp_1130);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1131 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1131;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000716") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.adverse_weather_condition_precipitation19[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 20)  // CHOICE CauseCodeChoice  fieldName(violence20)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1132;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20.push_back(_tmp_1132);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1133 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1133;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000717") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.violence20[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 21)  // CHOICE CauseCodeChoice  fieldName(reserved21)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1134;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21.push_back(_tmp_1134);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1135 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1135;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000718") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved21[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 22)  // CHOICE CauseCodeChoice  fieldName(reserved22)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1136;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22.push_back(_tmp_1136);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1137 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1137;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000719") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved22[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 23)  // CHOICE CauseCodeChoice  fieldName(reserved23)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1138;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23.push_back(_tmp_1138);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1139 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1139;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000720") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved23[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 24)  // CHOICE CauseCodeChoice  fieldName(reserved24)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1140;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24.push_back(_tmp_1140);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1141 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1141;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000721") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved24[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 25)  // CHOICE CauseCodeChoice  fieldName(reserved25)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1142;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25.push_back(_tmp_1142);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1143 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1143;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000722") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved25[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 26)  // CHOICE CauseCodeChoice  fieldName(slow_vehicle26)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SlowVehicleSubCauseCode _tmp_1144;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26.push_back(_tmp_1144);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1145 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1145;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000723") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.slow_vehicle26[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 27)  // CHOICE CauseCodeChoice  fieldName(dangerous_end_of_queue27)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::DangerousEndOfQueueSubCauseCode _tmp_1146;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27.push_back(_tmp_1146);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1147 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1147;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000724") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_end_of_queue27[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 28)  // CHOICE CauseCodeChoice  fieldName(public_transport_vehicle_approaching28)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1148;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28.push_back(_tmp_1148);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1149 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1149;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000725") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.public_transport_vehicle_approaching28[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 29)  // CHOICE CauseCodeChoice  fieldName(reserved29)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1150;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29.push_back(_tmp_1150);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1151 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1151;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000726") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved29[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 30)  // CHOICE CauseCodeChoice  fieldName(reserved30)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1152;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30.push_back(_tmp_1152);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1153 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1153;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000727") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved30[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 31)  // CHOICE CauseCodeChoice  fieldName(reserved31)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1154;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31.push_back(_tmp_1154);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1155 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1155;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000728") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved31[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 32)  // CHOICE CauseCodeChoice  fieldName(reserved32)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1156;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32.push_back(_tmp_1156);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1157 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1157;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000729") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved32[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 33)  // CHOICE CauseCodeChoice  fieldName(reserved33)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1158;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33.push_back(_tmp_1158);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1159 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1159;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000730") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved33[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 34)  // CHOICE CauseCodeChoice  fieldName(reserved34)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1160;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34.push_back(_tmp_1160);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1161 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1161;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000731") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved34[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 35)  // CHOICE CauseCodeChoice  fieldName(reserved35)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1162;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35.push_back(_tmp_1162);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1163 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1163;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000732") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved35[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 36)  // CHOICE CauseCodeChoice  fieldName(reserved36)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1164;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36.push_back(_tmp_1164);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1165 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1165;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000733") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved36[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 37)  // CHOICE CauseCodeChoice  fieldName(reserved37)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1166;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37.push_back(_tmp_1166);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1167 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1167;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000734") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved37[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 38)  // CHOICE CauseCodeChoice  fieldName(reserved38)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1168;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38.push_back(_tmp_1168);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1169 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1169;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000735") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved38[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 39)  // CHOICE CauseCodeChoice  fieldName(reserved39)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1170;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39.push_back(_tmp_1170);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1171 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1171;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000736") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved39[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 40)  // CHOICE CauseCodeChoice  fieldName(reserved40)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1172;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40.push_back(_tmp_1172);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1173 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1173;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000737") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved40[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 41)  // CHOICE CauseCodeChoice  fieldName(reserved41)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1174;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41.push_back(_tmp_1174);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1175 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1175;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000738") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved41[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 42)  // CHOICE CauseCodeChoice  fieldName(reserved42)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1176;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42.push_back(_tmp_1176);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1177 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1177;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000739") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved42[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 43)  // CHOICE CauseCodeChoice  fieldName(reserved43)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1178;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43.push_back(_tmp_1178);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1179 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1179;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000740") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved43[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 44)  // CHOICE CauseCodeChoice  fieldName(reserved44)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1180;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44.push_back(_tmp_1180);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1181 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1181;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000741") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved44[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 45)  // CHOICE CauseCodeChoice  fieldName(reserved45)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1182;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45.push_back(_tmp_1182);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1183 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1183;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000742") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved45[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 46)  // CHOICE CauseCodeChoice  fieldName(reserved46)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1184;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46.push_back(_tmp_1184);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1185 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1185;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000743") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved46[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 47)  // CHOICE CauseCodeChoice  fieldName(reserved47)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1186;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47.push_back(_tmp_1186);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1187 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1187;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000744") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved47[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 48)  // CHOICE CauseCodeChoice  fieldName(reserved48)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1188;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48.push_back(_tmp_1188);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1189 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1189;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000745") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved48[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 49)  // CHOICE CauseCodeChoice  fieldName(reserved49)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1190;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49.push_back(_tmp_1190);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1191 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1191;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000746") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved49[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 50)  // CHOICE CauseCodeChoice  fieldName(reserved50)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1192;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50.push_back(_tmp_1192);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1193 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1193;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000747") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved50[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 51)  // CHOICE CauseCodeChoice  fieldName(reserved51)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1194;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51.push_back(_tmp_1194);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1195 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1195;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000748") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved51[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 52)  // CHOICE CauseCodeChoice  fieldName(reserved52)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1196;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52.push_back(_tmp_1196);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1197 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1197;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000749") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved52[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 53)  // CHOICE CauseCodeChoice  fieldName(reserved53)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1198;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53.push_back(_tmp_1198);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1199 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1199;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000750") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved53[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 54)  // CHOICE CauseCodeChoice  fieldName(reserved54)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1200;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54.push_back(_tmp_1200);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1201 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1201;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000751") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved54[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 55)  // CHOICE CauseCodeChoice  fieldName(reserved55)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1202;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55.push_back(_tmp_1202);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1203 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1203;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000752") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved55[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 56)  // CHOICE CauseCodeChoice  fieldName(reserved56)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1204;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56.push_back(_tmp_1204);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1205 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1205;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000753") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved56[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 57)  // CHOICE CauseCodeChoice  fieldName(reserved57)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1206;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57.push_back(_tmp_1206);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1207 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1207;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000754") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved57[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 58)  // CHOICE CauseCodeChoice  fieldName(reserved58)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1208;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58.push_back(_tmp_1208);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1209 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1209;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000755") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved58[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 59)  // CHOICE CauseCodeChoice  fieldName(reserved59)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1210;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59.push_back(_tmp_1210);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1211 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1211;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000756") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved59[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 60)  // CHOICE CauseCodeChoice  fieldName(reserved60)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1212;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60.push_back(_tmp_1212);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1213 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1213;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000757") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved60[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 61)  // CHOICE CauseCodeChoice  fieldName(reserved61)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1214;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61.push_back(_tmp_1214);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1215 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1215;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000758") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved61[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 62)  // CHOICE CauseCodeChoice  fieldName(reserved62)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1216;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62.push_back(_tmp_1216);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1217 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1217;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000759") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved62[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 63)  // CHOICE CauseCodeChoice  fieldName(reserved63)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1218;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63.push_back(_tmp_1218);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1219 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1219;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000760") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved63[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 64)  // CHOICE CauseCodeChoice  fieldName(reserved64)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1220;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64.push_back(_tmp_1220);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1221 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1221;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000761") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved64[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 65)  // CHOICE CauseCodeChoice  fieldName(reserved65)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1222;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65.push_back(_tmp_1222);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1223 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1223;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000762") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved65[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 66)  // CHOICE CauseCodeChoice  fieldName(reserved66)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1224;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66.push_back(_tmp_1224);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1225 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1225;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000763") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved66[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 67)  // CHOICE CauseCodeChoice  fieldName(reserved67)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1226;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67.push_back(_tmp_1226);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1227 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1227;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000764") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved67[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 68)  // CHOICE CauseCodeChoice  fieldName(reserved68)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1228;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68.push_back(_tmp_1228);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1229 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1229;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000765") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved68[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 69)  // CHOICE CauseCodeChoice  fieldName(reserved69)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1230;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69.push_back(_tmp_1230);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1231 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1231;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000766") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved69[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 70)  // CHOICE CauseCodeChoice  fieldName(reserved70)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1232;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70.push_back(_tmp_1232);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1233 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1233;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000767") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved70[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 71)  // CHOICE CauseCodeChoice  fieldName(reserved71)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1234;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71.push_back(_tmp_1234);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1235 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1235;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000768") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved71[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 72)  // CHOICE CauseCodeChoice  fieldName(reserved72)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1236;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72.push_back(_tmp_1236);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1237 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1237;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000769") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved72[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 73)  // CHOICE CauseCodeChoice  fieldName(reserved73)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1238;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73.push_back(_tmp_1238);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1239 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1239;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000770") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved73[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 74)  // CHOICE CauseCodeChoice  fieldName(reserved74)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1240;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74.push_back(_tmp_1240);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1241 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1241;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000771") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved74[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 75)  // CHOICE CauseCodeChoice  fieldName(reserved75)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1242;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75.push_back(_tmp_1242);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1243 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1243;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000772") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved75[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 76)  // CHOICE CauseCodeChoice  fieldName(reserved76)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1244;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76.push_back(_tmp_1244);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1245 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1245;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000773") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved76[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 77)  // CHOICE CauseCodeChoice  fieldName(reserved77)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1246;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77.push_back(_tmp_1246);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1247 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1247;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000774") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved77[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 78)  // CHOICE CauseCodeChoice  fieldName(reserved78)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1248;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78.push_back(_tmp_1248);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1249 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1249;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000775") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved78[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 79)  // CHOICE CauseCodeChoice  fieldName(reserved79)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1250;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79.push_back(_tmp_1250);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1251 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1251;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000776") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved79[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 80)  // CHOICE CauseCodeChoice  fieldName(reserved80)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1252;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80.push_back(_tmp_1252);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1253 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1253;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000777") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved80[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 81)  // CHOICE CauseCodeChoice  fieldName(reserved81)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1254;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81.push_back(_tmp_1254);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1255 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1255;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000778") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved81[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 82)  // CHOICE CauseCodeChoice  fieldName(reserved82)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1256;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82.push_back(_tmp_1256);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1257 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1257;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000779") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved82[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 83)  // CHOICE CauseCodeChoice  fieldName(reserved83)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1258;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83.push_back(_tmp_1258);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1259 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1259;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000780") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved83[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 84)  // CHOICE CauseCodeChoice  fieldName(reserved84)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1260;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84.push_back(_tmp_1260);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1261 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1261;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000781") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved84[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 85)  // CHOICE CauseCodeChoice  fieldName(reserved85)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1262;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85.push_back(_tmp_1262);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1263 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1263;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000782") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved85[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 86)  // CHOICE CauseCodeChoice  fieldName(reserved86)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1264;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86.push_back(_tmp_1264);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1265 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1265;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000783") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved86[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 87)  // CHOICE CauseCodeChoice  fieldName(reserved87)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1266;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87.push_back(_tmp_1266);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1267 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1267;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000784") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved87[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 88)  // CHOICE CauseCodeChoice  fieldName(reserved88)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1268;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88.push_back(_tmp_1268);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1269 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1269;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000785") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved88[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 89)  // CHOICE CauseCodeChoice  fieldName(reserved89)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1270;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89.push_back(_tmp_1270);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1271 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1271;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000786") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved89[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 90)  // CHOICE CauseCodeChoice  fieldName(reserved90)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1272;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90.push_back(_tmp_1272);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1273 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1273;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000787") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved90[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 91)  // CHOICE CauseCodeChoice  fieldName(vehicle_breakdown91)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::VehicleBreakdownSubCauseCode _tmp_1274;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91.push_back(_tmp_1274);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1275 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1275;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000788") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.vehicle_breakdown91[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 92)  // CHOICE CauseCodeChoice  fieldName(post_crash92)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::PostCrashSubCauseCode _tmp_1276;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92.push_back(_tmp_1276);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1277 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1277;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000789") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.post_crash92[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 93)  // CHOICE CauseCodeChoice  fieldName(human_problem93)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HumanProblemSubCauseCode _tmp_1278;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93.push_back(_tmp_1278);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1279 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1279;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000790") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.human_problem93[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 94)  // CHOICE CauseCodeChoice  fieldName(stationary_vehicle94)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::StationaryVehicleSubCauseCode _tmp_1280;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94.push_back(_tmp_1280);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1281 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1281;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000791") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.stationary_vehicle94[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 95)  // CHOICE CauseCodeChoice  fieldName(emergency_vehicle_approaching95)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::EmergencyVehicleApproachingSubCauseCode _tmp_1282;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95.push_back(_tmp_1282);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1283 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1283;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000792") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.emergency_vehicle_approaching95[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 96)  // CHOICE CauseCodeChoice  fieldName(hazardous_location_dangerous_curve96)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::HazardousLocationDangerousCurveSubCauseCode _tmp_1284;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96.push_back(_tmp_1284);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1285 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1285;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000793") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.hazardous_location_dangerous_curve96[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 97)  // CHOICE CauseCodeChoice  fieldName(collision_risk97)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::CollisionRiskSubCauseCode _tmp_1286;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97.push_back(_tmp_1286);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1287 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1287;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000794") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.collision_risk97[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 98)  // CHOICE CauseCodeChoice  fieldName(signal_violation98)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SignalViolationSubCauseCode _tmp_1288;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98.push_back(_tmp_1288);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1289 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1289;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000795") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.signal_violation98[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 99)  // CHOICE CauseCodeChoice  fieldName(dangerous_situation99)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::DangerousSituationSubCauseCode _tmp_1290;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99.push_back(_tmp_1290);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1291 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1291;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000796") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.dangerous_situation99[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 100)  // CHOICE CauseCodeChoice  fieldName(railway_level_crossing100)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RailwayLevelCrossingSubCauseCode _tmp_1292;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100.push_back(_tmp_1292);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1293 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1293;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000797") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.railway_level_crossing100[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 101)  // CHOICE CauseCodeChoice  fieldName(reserved101)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1294;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101.push_back(_tmp_1294);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1295 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1295;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000798") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved101[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 102)  // CHOICE CauseCodeChoice  fieldName(reserved102)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1296;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102.push_back(_tmp_1296);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1297 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1297;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000799") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved102[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 103)  // CHOICE CauseCodeChoice  fieldName(reserved103)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1298;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103.push_back(_tmp_1298);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1299 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1299;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000800") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved103[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 104)  // CHOICE CauseCodeChoice  fieldName(reserved104)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1300;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104.push_back(_tmp_1300);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1301 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1301;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000801") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved104[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 105)  // CHOICE CauseCodeChoice  fieldName(reserved105)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1302;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105.push_back(_tmp_1302);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1303 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1303;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000802") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved105[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 106)  // CHOICE CauseCodeChoice  fieldName(reserved106)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1304;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106.push_back(_tmp_1304);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1305 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1305;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000803") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved106[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 107)  // CHOICE CauseCodeChoice  fieldName(reserved107)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1306;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107.push_back(_tmp_1306);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1307 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1307;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000804") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved107[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 108)  // CHOICE CauseCodeChoice  fieldName(reserved108)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1308;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108.push_back(_tmp_1308);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1309 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1309;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000805") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved108[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 109)  // CHOICE CauseCodeChoice  fieldName(reserved109)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1310;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109.push_back(_tmp_1310);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1311 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1311;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000806") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved109[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 110)  // CHOICE CauseCodeChoice  fieldName(reserved110)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1312;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110.push_back(_tmp_1312);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1313 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1313;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000807") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved110[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 111)  // CHOICE CauseCodeChoice  fieldName(reserved111)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1314;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111.push_back(_tmp_1314);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1315 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1315;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000808") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved111[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 112)  // CHOICE CauseCodeChoice  fieldName(reserved112)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1316;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112.push_back(_tmp_1316);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1317 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1317;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000809") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved112[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 113)  // CHOICE CauseCodeChoice  fieldName(reserved113)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1318;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113.push_back(_tmp_1318);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1319 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1319;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000810") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved113[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 114)  // CHOICE CauseCodeChoice  fieldName(reserved114)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1320;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114.push_back(_tmp_1320);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1321 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1321;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000811") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved114[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 115)  // CHOICE CauseCodeChoice  fieldName(reserved115)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1322;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115.push_back(_tmp_1322);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1323 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1323;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000812") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved115[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 116)  // CHOICE CauseCodeChoice  fieldName(reserved116)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1324;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116.push_back(_tmp_1324);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1325 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1325;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000813") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved116[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 117)  // CHOICE CauseCodeChoice  fieldName(reserved117)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1326;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117.push_back(_tmp_1326);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1327 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1327;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000814") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved117[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 118)  // CHOICE CauseCodeChoice  fieldName(reserved118)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1328;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118.push_back(_tmp_1328);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1329 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1329;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000815") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved118[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 119)  // CHOICE CauseCodeChoice  fieldName(reserved119)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1330;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119.push_back(_tmp_1330);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1331 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1331;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000816") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved119[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 120)  // CHOICE CauseCodeChoice  fieldName(reserved120)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1332;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120.push_back(_tmp_1332);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1333 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1333;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000817") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved120[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 121)  // CHOICE CauseCodeChoice  fieldName(reserved121)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1334;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121.push_back(_tmp_1334);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1335 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1335;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000818") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved121[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 122)  // CHOICE CauseCodeChoice  fieldName(reserved122)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1336;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122.push_back(_tmp_1336);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1337 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1337;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000819") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved122[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 123)  // CHOICE CauseCodeChoice  fieldName(reserved123)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1338;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123.push_back(_tmp_1338);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1339 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1339;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000820") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved123[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 124)  // CHOICE CauseCodeChoice  fieldName(reserved124)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1340;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124.push_back(_tmp_1340);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1341 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1341;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000821") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved124[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 125)  // CHOICE CauseCodeChoice  fieldName(reserved125)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1342;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125.push_back(_tmp_1342);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1343 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1343;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000822") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved125[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 126)  // CHOICE CauseCodeChoice  fieldName(reserved126)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1344;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126.push_back(_tmp_1344);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1345 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1345;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000823") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved126[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 127)  // CHOICE CauseCodeChoice  fieldName(reserved127)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1346;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127.push_back(_tmp_1346);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1347 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1347;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000824") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved127[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else if(_choice_10 == 128)  // CHOICE CauseCodeChoice  fieldName(reserved128)
                                {
                                    its_container_v4_etsi_its_cdd_msgs::msg::SubCauseCodeType _tmp_1348;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128.push_back(_tmp_1348);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1349 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1349;
                                    ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000825") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value) << 
                                                     " denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc.reserved128[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_10) << ") selected in CHOICE CauseCodeChoice in 'denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].cc_and_scc'; message dropped.";
                                    return false;
                                }
                                if(*_ext_flag_124) { // from ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0]. 
                                    uint8_t* _tmp_1350 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_26[*_tmp_1350];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000826") << "| Reading number of exts from ros->denm.alacarte[0].stationary_vehicle[0].stationary_cause[0].: " << static_cast<unsigned int>(*_tmp_1350);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1350; i++)
                                        _array_26[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1350; i++) {
                                        uint16_t* _tmp_1351 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1351; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods.size() != 0) {
                            // Field name: carrying_dangerous_goods
                                // DangerousGoodsExtended  SEQUENCE
                                    //  dangerousGoodsType  DangerousGoodsBasic                            
                                    //  unNumber            DangerousGoodsExtended_unNumber                
                                    //  elevatedTemperature DangerousGoodsExtended_elevatedTemperature     
                                    //  tunnelsRestricted   DangerousGoodsExtended_tunnelsRestricted       
                                    //  limitedQuantity     DangerousGoodsExtended_limitedQuantity         
                                    //  emergencyActionCode DangerousGoodsExtended_emergencyActionCode   OPTIONAL  
                                    //  phoneNumber         PhoneNumber                                  OPTIONAL  
                                    //  companyName         DangerousGoodsExtended_companyName           OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_126 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000827") << "| Reading ext flag from ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].: " << int(*_ext_flag_126);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::DangerousGoodsExtendedEmergencyActionCode _tmp_1352;
                                    ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.push_back(_tmp_1352);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000828") << "| ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::PhoneNumber _tmp_1353;
                                    ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.push_back(_tmp_1353);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000829") << "| ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::DangerousGoodsExtendedCompanyName _tmp_1354;
                                    ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.push_back(_tmp_1354);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000830") << "| ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name " << tools::green("present");
                                }
                                
                                // Field name: dangerous_goods_type
                                // Enumerated
                                // INT32  min(0) max(19) span(20) datatype(Int32)
                                uint8_t* _tmp_1355 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_1355;
                                __aux64__ += 0;
                                ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value = __aux64__;
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 19) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value' " << (__aux64__) << " exceeds max allowable (19); message dropped.";
                                    return false;
                                }
                                
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000831") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].dangerous_goods_type.value);
                                }
                                
                                // Field name: un_number
                                // Integer
                                // UINT16  min(0) max(9999) span(10000) datatype(UInt16)
                                uint16_t* _tmp_1356 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_1356;
                                ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000832") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value) << 
                                                 " denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value: " << ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 9999) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].un_number.value' " << (__aux64__) << " exceeds max allowable (9999); message dropped.";
                                    return false;
                                }
                                
                                // Field name: elevated_temperature
                                // Value
                                // Boolean
                                uint8_t* _tmp_1357 = (uint8_t*)buffer;
                                buffer++;
                                ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature.value = (*_tmp_1357 == 1);
                                if(debug)
                                    logger->print() << "|" << tools::brown("000833") << "| \033[37;1mbool  \033[0m ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].elevated_temperature.: " << (*_tmp_1357);
                                
                                // Field name: tunnels_restricted
                                // Value
                                // Boolean
                                uint8_t* _tmp_1358 = (uint8_t*)buffer;
                                buffer++;
                                ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted.value = (*_tmp_1358 == 1);
                                if(debug)
                                    logger->print() << "|" << tools::brown("000834") << "| \033[37;1mbool  \033[0m ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].tunnels_restricted.: " << (*_tmp_1358);
                                
                                // Field name: limited_quantity
                                // Value
                                // Boolean
                                uint8_t* _tmp_1359 = (uint8_t*)buffer;
                                buffer++;
                                ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity.value = (*_tmp_1359 == 1);
                                if(debug)
                                    logger->print() << "|" << tools::brown("000835") << "| \033[37;1mbool  \033[0m ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].limited_quantity.: " << (*_tmp_1359);
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code.size() != 0) {
                                    // Field name: emergency_action_code
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_1360 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1360 + 1;
                                    buffer += 1;
                                    
                                    int _if__tmp_1360 = __aux64__;
                                    for(int z = 0; z < _if__tmp_1360; z++) {  // DangerousGoodsExtended_emergencyActionCode
                                        char* __tmp__ = (char*)buffer++;
                                        ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].emergency_action_code[0].value += *__tmp__;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number.size() != 0) {
                                    // Field name: phone_number
                                    // Text
                                    
                                    // TEXT  min(1) max(16) span(16)
                                    uint8_t* _tmp_1361 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1361 + 1;
                                    buffer += 1;
                                    
                                    int _if__tmp_1361 = __aux64__;
                                    for(int a = 0; a < _if__tmp_1361; a++) {  // PhoneNumber
                                        char* __tmp__ = (char*)buffer++;
                                        ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].phone_number[0].value += *__tmp__;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name.size() != 0) {
                                    // Field name: company_name
                                    // Text
                                    
                                    // TEXT  min(1) max(24) span(24)
                                    uint8_t* _tmp_1362 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1362 + 1;
                                    buffer += 1;
                                    
                                    int _if__tmp_1362 = __aux64__;
                                    for(int b = 0; b < _if__tmp_1362; b++) {  // DangerousGoodsExtended_companyName
                                        char* __tmp__ = (char*)buffer++;
                                        ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].company_name[0].value += *__tmp__;
                                    }
                                }
                                if(*_ext_flag_126) { // from ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0]. 
                                    uint8_t* _tmp_1363 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_27[*_tmp_1363];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000836") << "| Reading number of exts from ros->denm.alacarte[0].stationary_vehicle[0].carrying_dangerous_goods[0].: " << static_cast<unsigned int>(*_tmp_1363);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1363; i++)
                                        _array_27[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1363; i++) {
                                        uint16_t* _tmp_1364 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1364; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants.size() != 0) {
                            // Field name: number_of_occupants
                            // Integer
                            // UINT8  min(0) max(127) span(128) datatype(UInt8)
                            uint8_t* _tmp_1365 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_1365;
                            ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000837") << "| " << tools::getTypeName(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value) << 
                                             " denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value: " << static_cast<int>(ros->denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].number_of_occupants[0].value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification.size() != 0) {
                            // Field name: vehicle_identification
                                // VehicleIdentification  SEQUENCE
                                    //  wMInumber  WMInumber    OPTIONAL  
                                    //  vDS        VDS          OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_128 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000838") << "| Reading ext flag from ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].: " << int(*_ext_flag_128);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::WMInumber _tmp_1366;
                                    ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.push_back(_tmp_1366);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000839") << "| ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::VDS _tmp_1367;
                                    ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.push_back(_tmp_1367);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000840") << "| ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds " << tools::green("present");
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber.size() != 0) {
                                    // Field name: w_m_inumber
                                    // Text
                                    
                                    // TEXT  min(1) max(3) span(3)
                                    uint8_t* _tmp_1368 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1368 + 1;
                                    buffer += 1;
                                    
                                    int _if__tmp_1368 = __aux64__;
                                    for(int c = 0; c < _if__tmp_1368; c++) {  // WMInumber
                                        char* __tmp__ = (char*)buffer++;
                                        ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].w_m_inumber[0].value += *__tmp__;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds.size() != 0) {
                                    // Field name: v_ds
                                    // Text
                                    
                                    // TEXT  min(6) max(6) span(1)
                                    uint8_t* _tmp_1369 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1369 + 6;
                                    buffer += 1;
                                    
                                    int _if__tmp_1369 = __aux64__;
                                    for(int d = 0; d < _if__tmp_1369; d++) {  // VDS
                                        char* __tmp__ = (char*)buffer++;
                                        ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].v_ds[0].value += *__tmp__;
                                    }
                                }
                                if(*_ext_flag_128) { // from ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0]. 
                                    uint8_t* _tmp_1370 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_28[*_tmp_1370];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000841") << "| Reading number of exts from ros->denm.alacarte[0].stationary_vehicle[0].vehicle_identification[0].: " << static_cast<unsigned int>(*_tmp_1370);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1370; i++)
                                        _array_28[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1370; i++) {
                                        uint16_t* _tmp_1371 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1371; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type.size() != 0) {
                            // Field name: energy_storage_type
                            // BitString
                            // BIT_STRING  min(7) max(7) span(1)
                            uint8_t* _tmp_1372 = (uint8_t*)buffer;
                            __aux64__ = *_tmp_1372 + 7;
                            buffer += 1;
                            
                            if(debug)
                                logger->print() << "|" << tools::brown("000842") << "| denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value: " << __aux64__;
                            
                            int _if__tmp_1372 = __aux64__;
                            for(int e = 0; e < _if__tmp_1372; e++) {
                                uint8_t __c__;
                                ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values.push_back(__c__);
                                uint8_t* __b__ = (uint8_t*)buffer++;
                                ros->denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].values[e] = (*__b__ == 1);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 7) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (__aux64__) << " is less than allowable (7); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                logger->error() << "Error: Value in 'denm.alacarte[0].stationary_vehicle[0].energy_storage_type[0].value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                return false;
                            }
                        }
                }
                if(*_ext_flag_92) { // from ros->denm.alacarte[0]. 
                    uint8_t* _tmp_1373 = (uint8_t*) buffer++;  // number of extensions
                    bool _array_29[*_tmp_1373];
                    
                    if(debug)
                        logger->print() << "|" << tools::brown("000843") << "| Reading number of exts from ros->denm.alacarte[0].: " << static_cast<unsigned int>(*_tmp_1373);
                    
                    // Extensions bytemap
                    for(int i = 0; i < *_tmp_1373; i++)
                        _array_29[i] = (*buffer++) != 0;
                    
                    if(_array_29[0]) {  // Extension group 1
                        uint16_t* _tmp_1374 = (uint16_t*)buffer;  // OpenType length
                        buffer += 2;
                    
                        if(debug) 
                            logger->print() << "|" << tools::brown("000844") << "| Reading open type len from ros->denm.alacarte[0].: " << _tmp_1374;
                    
                        // Optional fields bytemap
                        if(*(buffer++)) { 
                            denm_v2_23_denm_pdu_description_msgs::msg::RoadConfigurationContainer _tmp_1375;
                            ros->denm.alacarte[0].road_configuration.push_back(_tmp_1375);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000845") << "| ros->denm.alacarte[0].road_configuration " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            denm_v2_23_denm_pdu_description_msgs::msg::PreCrashContainer _tmp_1376;
                            ros->denm.alacarte[0].precrash.push_back(_tmp_1376);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000846") << "| ros->denm.alacarte[0].precrash " << tools::green("present");
                        }
                        
                        if(ros->denm.alacarte[0].road_configuration.size() != 0) {
                            // Field name: road_configuration
                                // RoadConfigurationContainer  SEQUENCE
                                    //  roadConfigurationConfidence  MetaInformation                  
                                    //  roadConfigurationSectionList RoadConfigurationSectionList     
                                    //  ...
                                uint8_t* _ext_flag_129 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000847") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].: " << int(*_ext_flag_129);
                                }
                                
                                
                                // Field name: road_configuration_confidence
                                    // MetaInformation  SEQUENCE
                                        //  usedDetectionInformation SensorTypes               
                                        //  usedStoredInformation    StoredInformationType     
                                        //  confidenceValue          ConfidenceLevel         OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_130 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000848") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.: " << int(*_ext_flag_130);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ConfidenceLevel _tmp_1377;
                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.push_back(_tmp_1377);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000849") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value " << tools::green("present");
                                    }
                                    
                                    // Field name: used_detection_information
                                    // BitString
                                    // BIT_STRING  min(16) max(16) span(1)
                                    uint8_t* _ext_flag_131 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000850") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.: " << int(*_ext_flag_131);
                                    }
                                    
                                    uint8_t* _tmp_1378 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1378 + 16;
                                    buffer += 1;
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000851") << "| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value: " << __aux64__;
                                    
                                    int _if__tmp_1378 = __aux64__;
                                    for(int f = 0; f < _if__tmp_1378; f++) {
                                        uint8_t __c__;
                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values.push_back(__c__);
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.values[f] = (*__b__ == 1);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 16) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (__aux64__) << " is less than allowable (16); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_detection_information.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: used_stored_information
                                    // BitString
                                    // BIT_STRING  min(1) max(168) span(168)
                                    uint8_t* _ext_flag_132 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000852") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.: " << int(*_ext_flag_132);
                                    }
                                    
                                    uint8_t* _tmp_1379 = (uint8_t*)buffer;
                                    __aux64__ = *_tmp_1379 + 1;
                                    buffer += 1;
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000853") << "| denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value: " << __aux64__;
                                    
                                    int _if__tmp_1379 = __aux64__;
                                    for(int g = 0; g < _if__tmp_1379; g++) {
                                        uint8_t __c__;
                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values.push_back(__c__);
                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.values[g] = (*__b__ == 1);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 168) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.used_stored_information.value' " << (__aux64__) << " exceeds max allowable (168); message dropped.";
                                        return false;
                                    }
                                    
                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value.size() != 0) {
                                        // Field name: confidence_value
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_1380 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_1380;
                                        __aux64__ += 1;
                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000854") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value) << 
                                                         " denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_confidence.confidence_value[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                    }
                                    if(*_ext_flag_130) { // from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence. 
                                        uint8_t* _tmp_1381 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_30[*_tmp_1381];
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000855") << "| Reading number of exts from ros->denm.alacarte[0].road_configuration[0].road_configuration_confidence.: " << static_cast<unsigned int>(*_tmp_1381);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_1381; i++)
                                            _array_30[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_1381; i++) {
                                            uint16_t* _tmp_1382 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_1382; i++)
                                                buffer++;
                                        }
                                        
                                    }
                                
                                // Field name: road_configuration_section_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(8) span(8)
                                uint8_t* _ext_flag_133 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000856") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.: " << int(*_ext_flag_133);
                                }
                                
                                int16_t* _tmp_1383 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_1383;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_1383 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000857") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int h = 0; h < _if__tmp_1383; h++) {
                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadConfigurationSection seqof_h;  // SEQUENCE
                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements.push_back(seqof_h);
                                
                                        // RoadConfigurationSection  SEQUENCE
                                            //  roadSectionDefinition RoadSectionDefinition      
                                            //  roadType              RoadType                 OPTIONAL  
                                            //  laneConfiguration     BasicLaneConfiguration   OPTIONAL  
                                            //  mapemConfiguration    MapemConfiguration       OPTIONAL  
                                            //  ...
                                        uint8_t* _ext_flag_134 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000858") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].: " << int(*_ext_flag_134);
                                        }
                                        
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::RoadType _tmp_1384;
                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type.push_back(_tmp_1384);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000859") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::BasicLaneConfiguration _tmp_1385;
                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration.push_back(_tmp_1385);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000860") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::MapemConfiguration _tmp_1386;
                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration.push_back(_tmp_1386);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000861") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration " << tools::green("present");
                                        }
                                        
                                        // Field name: road_section_definition
                                            // RoadSectionDefinition  SEQUENCE
                                                //  startingPointSection GeoPosition                                    
                                                //  lengthOfSection      StandardLength2B                             OPTIONAL  
                                                //  endingPointSection   GeoPosition                                  OPTIONAL  
                                                //  connectedPaths       PathReferences                                 
                                                //  includedPaths        PathReferences                                 
                                                //  isEventZoneIncluded  RoadSectionDefinition_isEventZoneIncluded      
                                                //  isEventZoneConnected RoadSectionDefinition_isEventZoneConnected     
                                                //  ...
                                            uint8_t* _ext_flag_135 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000862") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.: " << int(*_ext_flag_135);
                                            }
                                            
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::StandardLength2B _tmp_1387;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section.push_back(_tmp_1387);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000863") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::GeoPosition _tmp_1388;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section.push_back(_tmp_1388);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000864") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section " << tools::green("present");
                                            }
                                            
                                            // Field name: starting_point_section
                                                // GeoPosition  SEQUENCE
                                                    //  latitude   Latitude          
                                                    //  longitude  Longitude         
                                                    //  altitude   AltitudeValue     
                                                
                                                // Field name: latitude
                                                // Real
                                                // Double
                                                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                                uint32_t* _tmp_1389 = (uint32_t*) buffer; buffer += 4;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value = *_tmp_1389;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value += -900000000;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value /= 1.0E7;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000865") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude: " <<
                                                                 ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.latitude.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: longitude
                                                // Real
                                                // Double
                                                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                                uint32_t* _tmp_1390 = (uint32_t*) buffer; buffer += 4;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value = *_tmp_1390;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value += -1800000000;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value /= 1.0E7;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000866") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude: " <<
                                                                 ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.longitude.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: altitude
                                                // Real
                                                // Float
                                                // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                                uint32_t* _tmp_1391 = (uint32_t*) buffer; buffer += 4;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value = *_tmp_1391;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value += -100000;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000867") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude: " <<
                                                                 ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.starting_point_section.altitude.value << " (" << __aux64__ << ")";
                                                }
                                            
                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section.size() != 0) {
                                                // Field name: length_of_section
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(65535) span(65536) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_1392 = (uint16_t*) buffer; buffer += 2;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value = *_tmp_1392;
                                                __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000868") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0]: " <<
                                                                 ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.length_of_section[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section.size() != 0) {
                                                // Field name: ending_point_section
                                                    // GeoPosition  SEQUENCE
                                                        //  latitude   Latitude          
                                                        //  longitude  Longitude         
                                                        //  altitude   AltitudeValue     
                                                    
                                                    // Field name: latitude
                                                    // Real
                                                    // Double
                                                    // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                                                    uint32_t* _tmp_1393 = (uint32_t*) buffer; buffer += 4;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value = *_tmp_1393;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value += -900000000;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value /= 1.0E7;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000869") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude: " <<
                                                                     ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].latitude.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: longitude
                                                    // Real
                                                    // Double
                                                    // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                                                    uint32_t* _tmp_1394 = (uint32_t*) buffer; buffer += 4;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value = *_tmp_1394;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value += -1800000000;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value /= 1.0E7;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000870") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude: " <<
                                                                     ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].longitude.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: altitude
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                                                    uint32_t* _tmp_1395 = (uint32_t*) buffer; buffer += 4;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value = *_tmp_1395;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value += -100000;
                                                    __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000871") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude: " <<
                                                                     ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.ending_point_section[0].altitude.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                            
                                            // Field name: connected_paths
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(14) span(14)
                                            int16_t* _tmp_1396 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_1396;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_1396 = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000872") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths. size: " << int(__aux64__);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int i = 0; i < _if__tmp_1396; i++) {
                                                its_container_v4_etsi_its_cdd_msgs::msg::PathId seqof_i;  // INTEGER
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements.push_back(seqof_i);
                                            
                                                // Integer
                                                // UINT8  min(0) max(14) span(15) datatype(UInt8)
                                                uint8_t* _tmp_1397 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1397;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000873") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.connected_paths.elements[i].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                            // Field name: included_paths
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(14) span(14)
                                            int16_t* _tmp_1398 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_1398;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_1398 = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000874") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths. size: " << int(__aux64__);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int j = 0; j < _if__tmp_1398; j++) {
                                                its_container_v4_etsi_its_cdd_msgs::msg::PathId seqof_j;  // INTEGER
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements.push_back(seqof_j);
                                            
                                                // Integer
                                                // UINT8  min(0) max(14) span(15) datatype(UInt8)
                                                uint8_t* _tmp_1399 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1399;
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000875") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value) << 
                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.included_paths.elements[j].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                            // Field name: is_event_zone_included
                                            // Value
                                            // Boolean
                                            uint8_t* _tmp_1400 = (uint8_t*)buffer;
                                            buffer++;
                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_included.value = (*_tmp_1400 == 1);
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000876") << "| \033[37;1mbool  \033[0m ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_included.: " << (*_tmp_1400);
                                            
                                            // Field name: is_event_zone_connected
                                            // Value
                                            // Boolean
                                            uint8_t* _tmp_1401 = (uint8_t*)buffer;
                                            buffer++;
                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_connected.value = (*_tmp_1401 == 1);
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000877") << "| \033[37;1mbool  \033[0m ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.is_event_zone_connected.: " << (*_tmp_1401);
                                            if(*_ext_flag_135) { // from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition. 
                                                uint8_t* _tmp_1402 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_31[*_tmp_1402];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000878") << "| Reading number of exts from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_section_definition.: " << static_cast<unsigned int>(*_tmp_1402);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_1402; i++)
                                                    _array_31[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_1402; i++) {
                                                    uint16_t* _tmp_1403 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_1403; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type.size() != 0) {
                                            // Field name: road_type
                                            // Enumerated
                                            // INT32  min(0) max(3) span(4) datatype(Int32)
                                            uint8_t* _tmp_1404 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_1404;
                                            __aux64__ += 0;
                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value = __aux64__;
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000879") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value) << 
                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].road_type[0].value);
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration.size() != 0) {
                                            // Field name: lane_configuration
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                            uint8_t* _ext_flag_144 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000880") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].: " << int(*_ext_flag_144);
                                            }
                                            
                                            int16_t* _tmp_1405 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_1405;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_1405 = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000881") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0]. size: " << int(__aux64__);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int k = 0; k < _if__tmp_1405; k++) {
                                                its_container_v4_etsi_its_cdd_msgs::msg::BasicLaneInformation seqof_k;  // SEQUENCE
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements.push_back(seqof_k);
                                            
                                                    // BasicLaneInformation  SEQUENCE
                                                        //  laneNumber            LanePosition      
                                                        //  direction             Direction         
                                                        //  laneWidth             LaneWidth       OPTIONAL  
                                                        //  connectingLane        LanePosition    OPTIONAL  
                                                        //  connectingRoadSection RoadSectionId   OPTIONAL  
                                                        //  ...
                                                    uint8_t* _ext_flag_145 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000882") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].: " << int(*_ext_flag_145);
                                                    }
                                                    
                                                    if(*(buffer++)) { 
                                                        its_container_v4_etsi_its_cdd_msgs::msg::LaneWidth _tmp_1406;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width.push_back(_tmp_1406);
                                                    
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000883") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width " << tools::green("present");
                                                    }
                                                    if(*(buffer++)) { 
                                                        its_container_v4_etsi_its_cdd_msgs::msg::LanePosition _tmp_1407;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane.push_back(_tmp_1407);
                                                    
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000884") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane " << tools::green("present");
                                                    }
                                                    if(*(buffer++)) { 
                                                        its_container_v4_etsi_its_cdd_msgs::msg::RoadSectionId _tmp_1408;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section.push_back(_tmp_1408);
                                                    
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000885") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section " << tools::green("present");
                                                    }
                                                    
                                                    // Field name: lane_number
                                                    // Integer
                                                    // INT8  min(-1) max(14) span(16) datatype(Int8)
                                                    uint8_t* _tmp_1409 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_1409;
                                                    __aux64__ += -1;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000886") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_number.value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    // Field name: direction
                                                    // Integer
                                                    // UINT8  min(0) max(3) span(4) datatype(UInt8)
                                                    uint8_t* _tmp_1410 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_1410;
                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000887") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value) << 
                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 3) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].direction.value' " << (__aux64__) << " exceeds max allowable (3); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width.size() != 0) {
                                                        // Field name: lane_width
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(0) max(1023) span(1024) scaleDivisor(100.0) dataType(Float)
                                                        uint16_t* _tmp_1411 = (uint16_t*) buffer; buffer += 2;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value = *_tmp_1411;
                                                        __aux64__ = ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value /= 100.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000888") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value) << " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0]: " <<
                                                                         ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].lane_width[0].value << " (" << __aux64__ << ")";
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane.size() != 0) {
                                                        // Field name: connecting_lane
                                                        // Integer
                                                        // INT8  min(-1) max(14) span(16) datatype(Int8)
                                                        uint8_t* _tmp_1412 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1412;
                                                        __aux64__ += -1;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000889") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value) << 
                                                                         " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < -1) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value' " << (__aux64__) << " is less than allowable (-1); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_lane[0].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                            return false;
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section.size() != 0) {
                                                        // Field name: connecting_road_section
                                                        // Integer
                                                        // UINT8  min(0) max(8) span(9) datatype(UInt8)
                                                        uint8_t* _ext_flag_147 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000890") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].: " << int(*_ext_flag_147);
                                                        }
                                                        
                                                        if(*_ext_flag_147) {
                                                            uint8_t* _tmp_1414 = (uint8_t*) buffer++;
                                                            
                                                            if(*_tmp_1414) {
                                                                uint64_t* _tmp_1415 = (uint64_t*)buffer; buffer += 8;
                                                                __aux64__ = *_tmp_1415;
                                                                __aux64__ += INT64_MIN;
                                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value = __aux64__;
                                                            }
                                                            else
                                                            {
                                                                uint32_t* _tmp_1415 = (uint32_t*) buffer; buffer += 4;
                                                                __aux64__ = *_tmp_1415;
                                                                __aux64__ += INT32_MIN;
                                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value = __aux64__;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            uint8_t* _tmp_1413 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_1413;
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value = __aux64__;
                                                        
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000891") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].connecting_road_section[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                        }
                                                    }
                                                    if(*_ext_flag_145) { // from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k]. 
                                                        uint8_t* _tmp_1416 = (uint8_t*) buffer++;  // number of extensions
                                                        bool _array_32[*_tmp_1416];
                                                        
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000892") << "| Reading number of exts from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].lane_configuration[0].elements[k].: " << static_cast<unsigned int>(*_tmp_1416);
                                                        
                                                        // Extensions bytemap
                                                        for(int i = 0; i < *_tmp_1416; i++)
                                                            _array_32[i] = (*buffer++) != 0;
                                                        
                                                        // Discarding unknown OpenType containers
                                                        for(int i = 0; i < *_tmp_1416; i++) {
                                                            uint16_t* _tmp_1417 = (uint16_t*)buffer;  // OpenType length
                                                            buffer += 2;
                                                        
                                                            if(debug) {
                                                            }
                                                        
                                                            for(int i = 0; i < *_tmp_1417; i++)
                                                                buffer++;
                                                        }
                                                        
                                                    }
                                            }
                                        }
                                        
                                        if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration.size() != 0) {
                                            // Field name: mapem_configuration
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                            uint8_t* _ext_flag_148 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000893") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].: " << int(*_ext_flag_148);
                                            }
                                            
                                            int16_t* _tmp_1418 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_1418;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_1418 = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000894") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0]. size: " << int(__aux64__);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int l = 0; l < _if__tmp_1418; l++) {
                                                its_container_v4_etsi_its_cdd_msgs::msg::MapemElementReference seqof_l;  // SEQUENCE
                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements.push_back(seqof_l);
                                            
                                                    // MapemElementReference  SEQUENCE
                                                        //  mapReference  MapReference          OPTIONAL  
                                                        //  laneIds       MapemLaneList         OPTIONAL  
                                                        //  connectionIds MapemConnectionList   OPTIONAL  
                                                        //  ...
                                                    uint8_t* _ext_flag_149 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000895") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].: " << int(*_ext_flag_149);
                                                    }
                                                    
                                                    if(*(buffer++)) { 
                                                        its_container_v4_etsi_its_cdd_msgs::msg::MapReference _tmp_1419;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference.push_back(_tmp_1419);
                                                    
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000896") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference " << tools::green("present");
                                                    }
                                                    if(*(buffer++)) { 
                                                        its_container_v4_etsi_its_cdd_msgs::msg::MapemLaneList _tmp_1420;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids.push_back(_tmp_1420);
                                                    
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000897") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids " << tools::green("present");
                                                    }
                                                    if(*(buffer++)) { 
                                                        its_container_v4_etsi_its_cdd_msgs::msg::MapemConnectionList _tmp_1421;
                                                        ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids.push_back(_tmp_1421);
                                                    
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000898") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids " << tools::green("present");
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference.size() != 0) {
                                                        // Field name: map_reference
                                                        // Choice
                                                           // #0  roadsegment   RoadSegmentReferenceId   
                                                           // #1  intersection   IntersectionReferenceId   
                                                        uint8_t _choice_11 = *(buffer++);
                                                        
                                                        if(_choice_11 == 0) {
                                                            its_container_v4_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_1422;
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment.push_back(_tmp_1422);
                                                        
                                                                // RoadSegmentReferenceId  SEQUENCE
                                                                    //  region     Identifier2B   OPTIONAL  
                                                                    //  id         Identifier2B     
                                                                if(*(buffer++)) { 
                                                                    its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1423;
                                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region.push_back(_tmp_1423);
                                                                
                                                                    if(debug)
                                                                        logger->print() << "|" << tools::brown("000899") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region.size() != 0) {
                                                                    // Field name: region
                                                                    // Integer
                                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                                    uint16_t* _tmp_1424 = (uint16_t*) buffer; buffer += 2;
                                                                    __aux64__ = *_tmp_1424;
                                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000900") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value) << 
                                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value;
                                                                    }
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                        return false;
                                                                    }
                                                                }
                                                                
                                                                // Field name: id
                                                                // Integer
                                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                                uint16_t* _tmp_1425 = (uint16_t*) buffer; buffer += 2;
                                                                __aux64__ = *_tmp_1425;
                                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000901") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value;
                                                                }
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                    return false;
                                                                }
                                                        }
                                                        else if(_choice_11 == 1)  // CHOICE MapReference  fieldName(intersection)
                                                        {
                                                            its_container_v4_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_1426;
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection.push_back(_tmp_1426);
                                                        
                                                                // IntersectionReferenceId  SEQUENCE
                                                                    //  region     Identifier2B   OPTIONAL  
                                                                    //  id         Identifier2B     
                                                                if(*(buffer++)) { 
                                                                    its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1427;
                                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region.push_back(_tmp_1427);
                                                                
                                                                    if(debug)
                                                                        logger->print() << "|" << tools::brown("000902") << "| ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region " << tools::green("present");
                                                                }
                                                                
                                                                if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region.size() != 0) {
                                                                    // Field name: region
                                                                    // Integer
                                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                                    uint16_t* _tmp_1428 = (uint16_t*) buffer; buffer += 2;
                                                                    __aux64__ = *_tmp_1428;
                                                                    ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000903") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value) << 
                                                                                     " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value;
                                                                    }
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                        return false;
                                                                    }
                                                                }
                                                                
                                                                // Field name: id
                                                                // Integer
                                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                                uint16_t* _tmp_1429 = (uint16_t*) buffer; buffer += 2;
                                                                __aux64__ = *_tmp_1429;
                                                                ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value = __aux64__;
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000904") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value) << 
                                                                                 " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value;
                                                                }
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                    return false;
                                                                }
                                                        }
                                                        else
                                                        {
                                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_11) << ") selected in CHOICE MapReference in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].map_reference[0]'; message dropped.";
                                                            return false;
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids.size() != 0) {
                                                        // Field name: lane_ids
                                                        // SequenceOf
                                                        // Data Type UInt8
                                                        // SEQUENCE_OF  min(1) max(8) span(8)
                                                        uint8_t* _ext_flag_151 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000905") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].: " << int(*_ext_flag_151);
                                                        }
                                                        
                                                        int16_t* _tmp_1430 = (int16_t*)buffer;
                                                        buffer += 2;
                                                        __aux64__ = *_tmp_1430;
                                                        __aux64__ += 1;     // +min
                                                        
                                                        int _if__tmp_1430 = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000906") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0]. size: " << int(__aux64__);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        
                                                        for(int m = 0; m < _if__tmp_1430; m++) {
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B seqof_m;  // INTEGER
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements.push_back(seqof_m);
                                                        
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_1431 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_1431;
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000907") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].lane_ids[0].elements[m].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                        }
                                                    }
                                                    
                                                    if(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids.size() != 0) {
                                                        // Field name: connection_ids
                                                        // SequenceOf
                                                        // Data Type UInt8
                                                        // SEQUENCE_OF  min(1) max(8) span(8)
                                                        uint8_t* _ext_flag_152 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000908") << "| Reading ext flag from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].: " << int(*_ext_flag_152);
                                                        }
                                                        
                                                        int16_t* _tmp_1432 = (int16_t*)buffer;
                                                        buffer += 2;
                                                        __aux64__ = *_tmp_1432;
                                                        __aux64__ += 1;     // +min
                                                        
                                                        int _if__tmp_1432 = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000909") << "| SequenceOf ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0]. size: " << int(__aux64__);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        
                                                        for(int n = 0; n < _if__tmp_1432; n++) {
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B seqof_n;  // INTEGER
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements.push_back(seqof_n);
                                                        
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_1433 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_1433;
                                                            ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000910") << "| " << tools::getTypeName(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value) << 
                                                                             " denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value: " << static_cast<int>(ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].connection_ids[0].elements[n].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                        }
                                                    }
                                                    if(*_ext_flag_149) { // from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l]. 
                                                        uint8_t* _tmp_1434 = (uint8_t*) buffer++;  // number of extensions
                                                        bool _array_33[*_tmp_1434];
                                                        
                                                        if(debug)
                                                            logger->print() << "|" << tools::brown("000911") << "| Reading number of exts from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].mapem_configuration[0].elements[l].: " << static_cast<unsigned int>(*_tmp_1434);
                                                        
                                                        // Extensions bytemap
                                                        for(int i = 0; i < *_tmp_1434; i++)
                                                            _array_33[i] = (*buffer++) != 0;
                                                        
                                                        // Discarding unknown OpenType containers
                                                        for(int i = 0; i < *_tmp_1434; i++) {
                                                            uint16_t* _tmp_1435 = (uint16_t*)buffer;  // OpenType length
                                                            buffer += 2;
                                                        
                                                            if(debug) {
                                                            }
                                                        
                                                            for(int i = 0; i < *_tmp_1435; i++)
                                                                buffer++;
                                                        }
                                                        
                                                    }
                                            }
                                        }
                                        if(*_ext_flag_134) { // from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h]. 
                                            uint8_t* _tmp_1436 = (uint8_t*) buffer++;  // number of extensions
                                            bool _array_34[*_tmp_1436];
                                            
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000912") << "| Reading number of exts from ros->denm.alacarte[0].road_configuration[0].road_configuration_section_list.elements[h].: " << static_cast<unsigned int>(*_tmp_1436);
                                            
                                            // Extensions bytemap
                                            for(int i = 0; i < *_tmp_1436; i++)
                                                _array_34[i] = (*buffer++) != 0;
                                            
                                            // Discarding unknown OpenType containers
                                            for(int i = 0; i < *_tmp_1436; i++) {
                                                uint16_t* _tmp_1437 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2;
                                            
                                                if(debug) {
                                                }
                                            
                                                for(int i = 0; i < *_tmp_1437; i++)
                                                    buffer++;
                                            }
                                            
                                        }
                                }
                                if(*_ext_flag_129) { // from ros->denm.alacarte[0].road_configuration[0]. 
                                    uint8_t* _tmp_1438 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_35[*_tmp_1438];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000913") << "| Reading number of exts from ros->denm.alacarte[0].road_configuration[0].: " << static_cast<unsigned int>(*_tmp_1438);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1438; i++)
                                        _array_35[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1438; i++) {
                                        uint16_t* _tmp_1439 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1439; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                        
                        if(ros->denm.alacarte[0].precrash.size() != 0) {
                            // Field name: precrash
                                // PreCrashContainer  SEQUENCE
                                    //  perceivedPreCrashObject  PerceivedObject                  
                                    //  objectStationId          StationId                      OPTIONAL  
                                    //  timeToCollision          DeltaTimeMilliSecondPositive   OPTIONAL  
                                    //  impactSection            ObjectFace                     OPTIONAL  
                                    //  estimatedBrakingDistance StandardLength12b              OPTIONAL  
                                    //  ...
                                uint8_t* _ext_flag_153 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000914") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].: " << int(*_ext_flag_153);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::StationId _tmp_1440;
                                    ros->denm.alacarte[0].precrash[0].object_station_id.push_back(_tmp_1440);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000915") << "| ros->denm.alacarte[0].precrash[0].object_station_id " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::DeltaTimeMilliSecondPositive _tmp_1441;
                                    ros->denm.alacarte[0].precrash[0].time_to_collision.push_back(_tmp_1441);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000916") << "| ros->denm.alacarte[0].precrash[0].time_to_collision " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::ObjectFace _tmp_1442;
                                    ros->denm.alacarte[0].precrash[0].impact_section.push_back(_tmp_1442);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000917") << "| ros->denm.alacarte[0].precrash[0].impact_section " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v4_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1443;
                                    ros->denm.alacarte[0].precrash[0].estimated_braking_distance.push_back(_tmp_1443);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000918") << "| ros->denm.alacarte[0].precrash[0].estimated_braking_distance " << tools::green("present");
                                }
                                
                                // Field name: perceived_pre_crash_object
                                    // PerceivedObject  SEQUENCE
                                        //  objectId                           Identifier2B                                           OPTIONAL  
                                        //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                        //  position                           CartesianPosition3dWithConfidence                        
                                        //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                        //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                        //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                        //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                        //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                        //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                        //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                        //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                        //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                        //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                        //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                        //  classification                     ObjectClassDescription                                 OPTIONAL  
                                        //  mapPosition                        MapPosition                                            OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_154 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000919") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.: " << int(*_ext_flag_154);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1444;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.push_back(_tmp_1444);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000920") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::Velocity3dWithConfidence _tmp_1445;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.push_back(_tmp_1445);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000921") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::Acceleration3dWithConfidence _tmp_1446;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.push_back(_tmp_1446);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000922") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::EulerAnglesWithConfidence _tmp_1447;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.push_back(_tmp_1447);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000923") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngularVelocityComponent _tmp_1448;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.push_back(_tmp_1448);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000924") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrices _tmp_1449;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.push_back(_tmp_1449);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000925") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_1450;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.push_back(_tmp_1450);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000926") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_1451;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.push_back(_tmp_1451);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000927") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_1452;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.push_back(_tmp_1452);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000928") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::PerceivedObjectDeltaTimeMilliSecondSignedObjectAge _tmp_1453;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.push_back(_tmp_1453);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000929") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ObjectPerceptionQuality _tmp_1454;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.push_back(_tmp_1454);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000930") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_1455;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.push_back(_tmp_1455);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000931") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::ObjectClassDescription _tmp_1456;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.push_back(_tmp_1456);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000932") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v4_etsi_its_cdd_msgs::msg::MapPosition _tmp_1457;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.push_back(_tmp_1457);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000933") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position " << tools::green("present");
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id.size() != 0) {
                                        // Field name: object_id
                                        // Integer
                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                        uint16_t* _tmp_1458 = (uint16_t*) buffer; buffer += 2;
                                        __aux64__ = *_tmp_1458;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000934") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value;
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_id[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    // Field name: measurement_delta_time
                                    // Real
                                    // Float
                                    // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                                    uint16_t* _tmp_1459 = (uint16_t*) buffer; buffer += 2;
                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value = *_tmp_1459;
                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value += -2048;
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value;
                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value /= 1000.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000935") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time: " <<
                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.measurement_delta_time.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: position
                                        // CartesianPosition3dWithConfidence  SEQUENCE
                                            //  xCoordinate CartesianCoordinateWithConfidence     
                                            //  yCoordinate CartesianCoordinateWithConfidence     
                                            //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinateWithConfidence _tmp_1460;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.push_back(_tmp_1460);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000936") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                            // CartesianCoordinateWithConfidence  SEQUENCE
                                                //  value      CartesianCoordinateLarge     
                                                //  confidence CoordinateConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                            uint32_t* _tmp_1461 = (uint32_t*) buffer; buffer += 4;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value = *_tmp_1461;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value += -131072;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000937") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1462 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value = *_tmp_1462;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000938") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.x_coordinate.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_coordinate
                                            // CartesianCoordinateWithConfidence  SEQUENCE
                                                //  value      CartesianCoordinateLarge     
                                                //  confidence CoordinateConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                            uint32_t* _tmp_1463 = (uint32_t*) buffer; buffer += 4;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value = *_tmp_1463;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value += -131072;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000939") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1464 = (uint16_t*) buffer; buffer += 2;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value = *_tmp_1464;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000940") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.y_coordinate.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                                // CartesianCoordinateWithConfidence  SEQUENCE
                                                    //  value      CartesianCoordinateLarge     
                                                    //  confidence CoordinateConfidence         
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                                uint32_t* _tmp_1465 = (uint32_t*) buffer; buffer += 4;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value = *_tmp_1465;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value += -131072;
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000941") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value: " <<
                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1466 = (uint16_t*) buffer; buffer += 2;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value = *_tmp_1466;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value += 1;
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000942") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence: " <<
                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.position.z_coordinate[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity.size() != 0) {
                                        // Field name: velocity
                                        // Choice
                                           // #0  polarVelocity   VelocityPolarWithZ   
                                           // #1  cartesianVelocity   VelocityCartesian   
                                        uint8_t _choice_12 = *(buffer++);
                                        
                                        if(_choice_12 == 0) {
                                            its_container_v4_etsi_its_cdd_msgs::msg::VelocityPolarWithZ _tmp_1467;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity.push_back(_tmp_1467);
                                        
                                                // VelocityPolarWithZ  SEQUENCE
                                                    //  velocityMagnitude Speed                 
                                                    //  velocityDirection CartesianAngle        
                                                    //  zVelocity         VelocityComponent   OPTIONAL  
                                                if(*(buffer++)) { 
                                                    its_container_v4_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_1468;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.push_back(_tmp_1468);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000943") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity " << tools::green("present");
                                                }
                                                
                                                // Field name: velocity_magnitude
                                                    // Speed  SEQUENCE
                                                        //  speedValue      SpeedValue          
                                                        //  speedConfidence SpeedConfidence     
                                                    
                                                    // Field name: speed_value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                                    uint16_t* _tmp_1469 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value = *_tmp_1469;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000944") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: speed_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    uint8_t* _tmp_1470 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value = *_tmp_1470;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000945") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                // Field name: velocity_direction
                                                    // CartesianAngle  SEQUENCE
                                                        //  value      CartesianAngleValue     
                                                        //  confidence AngleConfidence         
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1471 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value = *_tmp_1471;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000946") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1472 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value = *_tmp_1472;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000947") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].velocity_direction.confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                                    // Field name: z_velocity
                                                        // VelocityComponent  SEQUENCE
                                                            //  value      VelocityComponentValue     
                                                            //  confidence SpeedConfidence            
                                                        
                                                        // Field name: value
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                        uint16_t* _tmp_1473 = (uint16_t*) buffer; buffer += 2;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value = *_tmp_1473;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value += -16383;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value /= 100.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000948") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                        }
                                                        
                                                        // Field name: confidence
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                        uint8_t* _tmp_1474 = (uint8_t*) buffer++;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value = *_tmp_1474;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value += 1;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000949") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].polar_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                        }
                                                }
                                        }
                                        else if(_choice_12 == 1)  // CHOICE Velocity3dWithConfidence  fieldName(cartesian_velocity)
                                        {
                                            its_container_v4_etsi_its_cdd_msgs::msg::VelocityCartesian _tmp_1475;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity.push_back(_tmp_1475);
                                        
                                                // VelocityCartesian  SEQUENCE
                                                    //  xVelocity  VelocityComponent     
                                                    //  yVelocity  VelocityComponent     
                                                    //  zVelocity  VelocityComponent   OPTIONAL  
                                                if(*(buffer++)) { 
                                                    its_container_v4_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_1476;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.push_back(_tmp_1476);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000950") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity " << tools::green("present");
                                                }
                                                
                                                // Field name: x_velocity
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    uint16_t* _tmp_1477 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value = *_tmp_1477;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value += -16383;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000951") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    uint8_t* _tmp_1478 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value = *_tmp_1478;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000952") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].x_velocity.confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                // Field name: y_velocity
                                                    // VelocityComponent  SEQUENCE
                                                        //  value      VelocityComponentValue     
                                                        //  confidence SpeedConfidence            
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                    uint16_t* _tmp_1479 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value = *_tmp_1479;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value += -16383;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000953") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                    uint8_t* _tmp_1480 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value = *_tmp_1480;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value /= 100.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000954") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].y_velocity.confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                                    // Field name: z_velocity
                                                        // VelocityComponent  SEQUENCE
                                                            //  value      VelocityComponentValue     
                                                            //  confidence SpeedConfidence            
                                                        
                                                        // Field name: value
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                        uint16_t* _tmp_1481 = (uint16_t*) buffer; buffer += 2;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value = *_tmp_1481;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value += -16383;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value /= 100.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000955") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                        }
                                                        
                                                        // Field name: confidence
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                        uint8_t* _tmp_1482 = (uint8_t*) buffer++;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value = *_tmp_1482;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value += 1;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000956") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                        }
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_12) << ") selected in CHOICE Velocity3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.velocity[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration.size() != 0) {
                                        // Field name: acceleration
                                        // Choice
                                           // #0  polarAcceleration   AccelerationPolarWithZ   
                                           // #1  cartesianAcceleration   AccelerationCartesian   
                                        uint8_t _choice_13 = *(buffer++);
                                        
                                        if(_choice_13 == 0) {
                                            its_container_v4_etsi_its_cdd_msgs::msg::AccelerationPolarWithZ _tmp_1483;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration.push_back(_tmp_1483);
                                        
                                                // AccelerationPolarWithZ  SEQUENCE
                                                    //  accelerationMagnitude AccelerationMagnitude     
                                                    //  accelerationDirection CartesianAngle            
                                                    //  zAcceleration         AccelerationComponent   OPTIONAL  
                                                if(*(buffer++)) { 
                                                    its_container_v4_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_1484;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.push_back(_tmp_1484);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000957") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration " << tools::green("present");
                                                }
                                                
                                                // Field name: acceleration_magnitude
                                                    // AccelerationMagnitude  SEQUENCE
                                                        //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                        //  accelerationConfidence     AccelerationConfidence         
                                                    
                                                    // Field name: acceleration_magnitude_value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1485 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value = *_tmp_1485;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000958") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: acceleration_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1486 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value = *_tmp_1486;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000959") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                // Field name: acceleration_direction
                                                    // CartesianAngle  SEQUENCE
                                                        //  value      CartesianAngleValue     
                                                        //  confidence AngleConfidence         
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1487 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value = *_tmp_1487;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000960") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1488 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value = *_tmp_1488;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000961") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                                    // Field name: z_acceleration
                                                        // AccelerationComponent  SEQUENCE
                                                            //  value      AccelerationValue          
                                                            //  confidence AccelerationConfidence     
                                                        
                                                        // Field name: value
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                        uint16_t* _tmp_1489 = (uint16_t*) buffer; buffer += 2;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value = *_tmp_1489;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value += -160;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000962") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                        }
                                                        
                                                        // Field name: confidence
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                        uint8_t* _tmp_1490 = (uint8_t*) buffer++;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value = *_tmp_1490;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000963") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                        }
                                                }
                                        }
                                        else if(_choice_13 == 1)  // CHOICE Acceleration3dWithConfidence  fieldName(cartesian_acceleration)
                                        {
                                            its_container_v4_etsi_its_cdd_msgs::msg::AccelerationCartesian _tmp_1491;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration.push_back(_tmp_1491);
                                        
                                                // AccelerationCartesian  SEQUENCE
                                                    //  xAcceleration AccelerationComponent     
                                                    //  yAcceleration AccelerationComponent     
                                                    //  zAcceleration AccelerationComponent   OPTIONAL  
                                                if(*(buffer++)) { 
                                                    its_container_v4_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_1492;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.push_back(_tmp_1492);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000964") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration " << tools::green("present");
                                                }
                                                
                                                // Field name: x_acceleration
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1493 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value = *_tmp_1493;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value += -160;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000965") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1494 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value = *_tmp_1494;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000966") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                // Field name: y_acceleration
                                                    // AccelerationComponent  SEQUENCE
                                                        //  value      AccelerationValue          
                                                        //  confidence AccelerationConfidence     
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1495 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value = *_tmp_1495;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value += -160;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000967") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1496 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value = *_tmp_1496;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000968") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value << " (" << __aux64__ << ")";
                                                    }
                                                
                                                if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                                    // Field name: z_acceleration
                                                        // AccelerationComponent  SEQUENCE
                                                            //  value      AccelerationValue          
                                                            //  confidence AccelerationConfidence     
                                                        
                                                        // Field name: value
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                        uint16_t* _tmp_1497 = (uint16_t*) buffer; buffer += 2;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value = *_tmp_1497;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value += -160;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000969") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                        }
                                                        
                                                        // Field name: confidence
                                                        // Real
                                                        // Float
                                                        // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                        uint8_t* _tmp_1498 = (uint8_t*) buffer++;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value = *_tmp_1498;
                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000970") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence: " <<
                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                        }
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_13) << ") selected in CHOICE Acceleration3dWithConfidence in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.acceleration[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles.size() != 0) {
                                        // Field name: angles
                                            // EulerAnglesWithConfidence  SEQUENCE
                                                //  zAngle     CartesianAngle     
                                                //  yAngle     CartesianAngle   OPTIONAL  
                                                //  xAngle     CartesianAngle   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_1499;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.push_back(_tmp_1499);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000971") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_1500;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.push_back(_tmp_1500);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000972") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle " << tools::green("present");
                                            }
                                            
                                            // Field name: z_angle
                                                // CartesianAngle  SEQUENCE
                                                    //  value      CartesianAngleValue     
                                                    //  confidence AngleConfidence         
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_1501 = (uint16_t*) buffer; buffer += 2;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value = *_tmp_1501;
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000973") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value: " <<
                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_1502 = (uint8_t*) buffer++;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value = *_tmp_1502;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value += 1;
                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000974") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence: " <<
                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].z_angle.confidence.value << " (" << __aux64__ << ")";
                                                }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle.size() != 0) {
                                                // Field name: y_angle
                                                    // CartesianAngle  SEQUENCE
                                                        //  value      CartesianAngleValue     
                                                        //  confidence AngleConfidence         
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1503 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value = *_tmp_1503;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000975") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1504 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value = *_tmp_1504;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000976") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].y_angle[0].confidence.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle.size() != 0) {
                                                // Field name: x_angle
                                                    // CartesianAngle  SEQUENCE
                                                        //  value      CartesianAngleValue     
                                                        //  confidence AngleConfidence         
                                                    
                                                    // Field name: value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1505 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value = *_tmp_1505;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000977") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                                    uint8_t* _tmp_1506 = (uint8_t*) buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value = *_tmp_1506;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value += 1;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000978") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.angles[0].x_angle[0].confidence.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity.size() != 0) {
                                        // Field name: z_angular_velocity
                                            // CartesianAngularVelocityComponent  SEQUENCE
                                                //  value      CartesianAngularVelocityComponentValue     
                                                //  confidence AngularSpeedConfidence                     
                                            
                                            // Field name: value
                                            // Integer
                                            // INT16  min(-255) max(256) span(512) datatype(Int16)
                                            uint16_t* _tmp_1507 = (uint16_t*) buffer; buffer += 2;
                                            __aux64__ = *_tmp_1507;
                                            __aux64__ += -255;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000979") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value;
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -255) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-255); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                                return false;
                                            }
                                            
                                            // Field name: confidence
                                            // Enumerated
                                            // INT32  min(0) max(7) span(8) datatype(Int32)
                                            uint8_t* _tmp_1508 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_1508;
                                            __aux64__ += 0;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value = __aux64__;
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000980") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.z_angular_velocity[0].confidence.value);
                                            }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices.size() != 0) {
                                        // Field name: lower_triangular_correlation_matrices
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(4) span(4)
                                        int16_t* _tmp_1509 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_1509;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_1509 = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000981") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0]. size: " << int(__aux64__);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int o = 0; o < _if__tmp_1509; o++) {
                                            its_container_v4_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrix seqof_o;  // SEQUENCE
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements.push_back(seqof_o);
                                        
                                                // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                                    //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                                    //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                                
                                                // Field name: components_included_inthe_matrix
                                                // BitString
                                                // BIT_STRING  min(13) max(13) span(1)
                                                uint8_t* _ext_flag_195 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000982") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.: " << int(*_ext_flag_195);
                                                }
                                                
                                                uint8_t* _tmp_1510 = (uint8_t*)buffer;
                                                __aux64__ = *_tmp_1510 + 13;
                                                buffer += 1;
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000983") << "| denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.value: " << __aux64__;
                                                
                                                int _if__tmp_1510 = __aux64__;
                                                for(int p = 0; p < _if__tmp_1510; p++) {
                                                    uint8_t __c__;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values.push_back(__c__);
                                                    uint8_t* __b__ = (uint8_t*)buffer++;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.values[p] = (*__b__ == 1);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 13) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.value' " << (__aux64__) << " is less than allowable (13); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].components_included_inthe_matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                    return false;
                                                }
                                                
                                                // Field name: matrix
                                                // SequenceOf
                                                // Data Type UInt8
                                                // SEQUENCE_OF  min(1) max(13) span(13)
                                                uint8_t* _ext_flag_196 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000984") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.: " << int(*_ext_flag_196);
                                                }
                                                
                                                int16_t* _tmp_1511 = (int16_t*)buffer;
                                                buffer += 2;
                                                __aux64__ = *_tmp_1511;
                                                __aux64__ += 1;     // +min
                                                
                                                int _if__tmp_1511 = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000985") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix. size: " << int(__aux64__);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                for(int q = 0; q < _if__tmp_1511; q++) {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::CorrelationColumn seqof_q;  // SEQUENCE_OF
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements.push_back(seqof_q);
                                                
                                                    // SequenceOf
                                                    // Data Type UInt8
                                                    // SEQUENCE_OF  min(1) max(13) span(13)
                                                    uint8_t* _ext_flag_197 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000986") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].: " << int(*_ext_flag_197);
                                                    }
                                                    
                                                    int16_t* _tmp_1512 = (int16_t*)buffer;
                                                    buffer += 2;
                                                    __aux64__ = *_tmp_1512;
                                                    __aux64__ += 1;     // +min
                                                    
                                                    int _if__tmp_1512 = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000987") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q]. size: " << int(__aux64__);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    
                                                    for(int r = 0; r < _if__tmp_1512; r++) {
                                                        its_container_v4_etsi_its_cdd_msgs::msg::CorrelationCellValue seqof_r;  // INTEGER
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements.push_back(seqof_r);
                                                    
                                                        // Integer
                                                        // INT8  min(-100) max(101) span(202) datatype(Int8)
                                                        uint8_t* _tmp_1513 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1513;
                                                        __aux64__ += -100;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("000988") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < -100) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value' " << (__aux64__) << " is less than allowable (-100); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.lower_triangular_correlation_matrices[0].elements[o].matrix.elements[q].elements[r].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        
                                                    }
                                                    
                                                }
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z.size() != 0) {
                                        // Field name: object_dimension_z
                                            // ObjectDimension  SEQUENCE
                                                //  value      ObjectDimensionValue          
                                                //  confidence ObjectDimensionConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1514 = (uint8_t*) buffer++;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value = *_tmp_1514;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000989") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1515 = (uint8_t*) buffer++;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value = *_tmp_1515;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000990") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_z[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y.size() != 0) {
                                        // Field name: object_dimension_y
                                            // ObjectDimension  SEQUENCE
                                                //  value      ObjectDimensionValue          
                                                //  confidence ObjectDimensionConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1516 = (uint8_t*) buffer++;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value = *_tmp_1516;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000991") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1517 = (uint8_t*) buffer++;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value = *_tmp_1517;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000992") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_y[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x.size() != 0) {
                                        // Field name: object_dimension_x
                                            // ObjectDimension  SEQUENCE
                                                //  value      ObjectDimensionValue          
                                                //  confidence ObjectDimensionConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1518 = (uint8_t*) buffer++;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value = *_tmp_1518;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000993") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1519 = (uint8_t*) buffer++;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value = *_tmp_1519;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value += 1;
                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000994") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence: " <<
                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_dimension_x[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age.size() != 0) {
                                        // Field name: object_age
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                        uint16_t* _tmp_1520 = (uint16_t*) buffer; buffer += 2;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value = *_tmp_1520;
                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value /= 1000.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000995") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0]: " <<
                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_age[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality.size() != 0) {
                                        // Field name: object_perception_quality
                                        // Integer
                                        // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                        uint8_t* _tmp_1521 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_1521;
                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000996") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value) << 
                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.object_perception_quality[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list.size() != 0) {
                                        // Field name: sensor_id_list
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(128) span(128)
                                        uint8_t* _ext_flag_205 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000997") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].: " << int(*_ext_flag_205);
                                        }
                                        
                                        int16_t* _tmp_1522 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_1522;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_1522 = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000998") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0]. size: " << int(__aux64__);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int s = 0; s < _if__tmp_1522; s++) {
                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B seqof_s;  // INTEGER
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements.push_back(seqof_s);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_1523 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_1523;
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000999") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value) << 
                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.sensor_id_list[0].elements[s].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification.size() != 0) {
                                        // Field name: classification
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(8) span(8)
                                        int16_t* _tmp_1524 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_1524;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_1524 = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("001000") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0]. size: " << int(__aux64__);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int t = 0; t < _if__tmp_1524; t++) {
                                            its_container_v4_etsi_its_cdd_msgs::msg::ObjectClassWithConfidence seqof_t;  // SEQUENCE
                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements.push_back(seqof_t);
                                        
                                                // ObjectClassWithConfidence  SEQUENCE
                                                    //  objectClass ObjectClass         
                                                    //  confidence  ConfidenceLevel     
                                                
                                                // Field name: object_class
                                                // Choice
                                                uint8_t* _ext_flag_206 = (uint8_t*)buffer++; // ext flag
                                                
                                                   // #0  vehicleSubClass   ObjectClass_TrafficParticipantType_vehicleSubClass   
                                                   // #1  vruSubClass   VruProfileAndSubprofile   
                                                   // #2  groupSubClass   VruClusterInformation   
                                                   // #3  otherSubClass   OtherSubClass   
                                                uint8_t _choice_14 = *(buffer++);
                                                
                                                if(*_ext_flag_206)
                                                    _choice_14 += 3 + 1; // Ext addition
                                                
                                                if(_choice_14 == 0) {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::ObjectClassTrafficParticipantTypeVehicleSubClass _tmp_1525;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class.push_back(_tmp_1525);
                                                
                                                    // Integer
                                                    // UINT8  min(0) max(14) span(15) datatype(UInt8)
                                                    uint8_t* _tmp_1526 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_1526;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("001001") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 14) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (14); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                else if(_choice_14 == 1)  // CHOICE ObjectClass  fieldName(vru_sub_class)
                                                {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::VruProfileAndSubprofile _tmp_1527;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class.push_back(_tmp_1527);
                                                
                                                    // Choice
                                                    uint8_t* _ext_flag_207 = (uint8_t*)buffer++; // ext flag
                                                    
                                                       // #0  pedestrian   VruSubProfilePedestrian   
                                                       // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist   
                                                       // #2  motorcyclist   VruSubProfileMotorcyclist   
                                                       // #3  animal   VruSubProfileAnimal   
                                                    uint8_t _choice_15 = *(buffer++);
                                                    
                                                    if(*_ext_flag_207)
                                                        _choice_15 += 3 + 1; // Ext addition
                                                    
                                                    if(_choice_15 == 0) {
                                                        its_container_v4_etsi_its_cdd_msgs::msg::VruSubProfilePedestrian _tmp_1528;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian.push_back(_tmp_1528);
                                                    
                                                        // Integer
                                                        // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                                        uint8_t* _tmp_1529 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1529;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001002") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                            return false;
                                                        }
                                                    }
                                                    else if(_choice_15 == 1)  // CHOICE VruProfileAndSubprofile  fieldName(bicyclist_and_light_vru_vehicle)
                                                    {
                                                        its_container_v4_etsi_its_cdd_msgs::msg::VruSubProfileBicyclist _tmp_1530;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.push_back(_tmp_1530);
                                                    
                                                        // Integer
                                                        // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                                        uint8_t* _tmp_1531 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1531;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001003") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                            return false;
                                                        }
                                                    }
                                                    else if(_choice_15 == 2)  // CHOICE VruProfileAndSubprofile  fieldName(motorcyclist)
                                                    {
                                                        its_container_v4_etsi_its_cdd_msgs::msg::VruSubProfileMotorcyclist _tmp_1532;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist.push_back(_tmp_1532);
                                                    
                                                        // Integer
                                                        // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                                        uint8_t* _tmp_1533 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1533;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001004") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                            return false;
                                                        }
                                                    }
                                                    else if(_choice_15 == 3)  // CHOICE VruProfileAndSubprofile  fieldName(animal)
                                                    {
                                                        its_container_v4_etsi_its_cdd_msgs::msg::VruSubProfileAnimal _tmp_1534;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal.push_back(_tmp_1534);
                                                    
                                                        // Integer
                                                        // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                                        uint8_t* _tmp_1535 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1535;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001005") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                            return false;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        uint16_t* _tmp_1536 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2 + int(*_tmp_1536);            // Ignoring opentype data
                                                    }
                                                }
                                                else if(_choice_14 == 2)  // CHOICE ObjectClass  fieldName(group_sub_class)
                                                {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::VruClusterInformation _tmp_1537;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class.push_back(_tmp_1537);
                                                
                                                        // VruClusterInformation  SEQUENCE
                                                            //  clusterId               Identifier1B         OPTIONAL  
                                                            //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                            //  clusterCardinalitySize  CardinalNumber1B       
                                                            //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                            //  ...
                                                        uint8_t* _ext_flag_208 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001006") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].: " << int(*_ext_flag_208);
                                                        }
                                                        
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_1538;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id.push_back(_tmp_1538);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001007") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id " << tools::green("present");
                                                        }
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Shape _tmp_1539;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape.push_back(_tmp_1539);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001008") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape " << tools::green("present");
                                                        }
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::VruClusterProfiles _tmp_1540;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles.push_back(_tmp_1540);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001009") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                            // Field name: cluster_id
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_1541 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_1541;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("001010") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                            // Field name: cluster_bounding_box_shape
                                                            // Choice
                                                            uint8_t* _ext_flag_209 = (uint8_t*)buffer++; // ext flag
                                                            
                                                               // #0  rectangular   RectangularShape   
                                                               // #1  circular   CircularShape   
                                                               // #2  polygonal   PolygonalShape   
                                                               // #3  elliptical   EllipticalShape   
                                                               // #4  radial   RadialShape   
                                                               // #5  radialShapes   RadialShapes   
                                                            uint8_t _choice_16 = *(buffer++);
                                                            
                                                            if(*_ext_flag_209)
                                                                _choice_16 += 5 + 1; // Ext addition
                                                            
                                                            if(_choice_16 == 0) {
                                                                its_container_v4_etsi_its_cdd_msgs::msg::RectangularShape _tmp_1542;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.push_back(_tmp_1542);
                                                            
                                                                    // RectangularShape  SEQUENCE
                                                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                        //  semiLength          StandardLength12b       
                                                                        //  semiBreadth         StandardLength12b       
                                                                        //  orientation         CartesianAngleValue   OPTIONAL  
                                                                        //  height              StandardLength12b     OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1543;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.push_back(_tmp_1543);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001011") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1544;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.push_back(_tmp_1544);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001012") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1545;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.push_back(_tmp_1545);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001013") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height " << tools::green("present");
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point.size() != 0) {
                                                                        // Field name: shape_reference_point
                                                                            // CartesianPosition3d  SEQUENCE
                                                                                //  xCoordinate CartesianCoordinate     
                                                                                //  yCoordinate CartesianCoordinate     
                                                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1546;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1546);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001014") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: x_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1547 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value = *_tmp_1547;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001015") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: y_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1548 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value = *_tmp_1548;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001016") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                                // Field name: z_coordinate
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                                uint16_t* _tmp_1549 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1549;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001017") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                                    
                                                                    // Field name: semi_length
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1550 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value = *_tmp_1550;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001018") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: semi_breadth
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1551 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value = *_tmp_1551;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001019") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                        // Field name: orientation
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1552 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value = *_tmp_1552;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001020") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                        // Field name: height
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1553 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value = *_tmp_1553;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001021") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            else if(_choice_16 == 1)  // CHOICE Shape  fieldName(circular)
                                                            {
                                                                its_container_v4_etsi_its_cdd_msgs::msg::CircularShape _tmp_1554;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.push_back(_tmp_1554);
                                                            
                                                                    // CircularShape  SEQUENCE
                                                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                        //  radius              StandardLength12b       
                                                                        //  height              StandardLength12b     OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1555;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.push_back(_tmp_1555);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001022") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1556;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.push_back(_tmp_1556);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001023") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height " << tools::green("present");
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                        // Field name: shape_reference_point
                                                                            // CartesianPosition3d  SEQUENCE
                                                                                //  xCoordinate CartesianCoordinate     
                                                                                //  yCoordinate CartesianCoordinate     
                                                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1557;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1557);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001024") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: x_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1558 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_1558;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001025") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: y_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1559 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_1559;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001026") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                                // Field name: z_coordinate
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                                uint16_t* _tmp_1560 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1560;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001027") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                                    
                                                                    // Field name: radius
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1561 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value = *_tmp_1561;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001028") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                        // Field name: height
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1562 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value = *_tmp_1562;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001029") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            else if(_choice_16 == 2)  // CHOICE Shape  fieldName(polygonal)
                                                            {
                                                                its_container_v4_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_1563;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.push_back(_tmp_1563);
                                                            
                                                                    // PolygonalShape  SEQUENCE
                                                                        //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                        //  polygon             SequenceOfCartesianPosition3d     
                                                                        //  height              StandardLength12b               OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1564;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_1564);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001030") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1565;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.push_back(_tmp_1565);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001031") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height " << tools::green("present");
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                        // Field name: shape_reference_point
                                                                            // CartesianPosition3d  SEQUENCE
                                                                                //  xCoordinate CartesianCoordinate     
                                                                                //  yCoordinate CartesianCoordinate     
                                                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1566;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1566);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001032") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: x_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1567 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_1567;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001033") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: y_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1568 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_1568;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001034") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                                // Field name: z_coordinate
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                                uint16_t* _tmp_1569 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1569;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001035") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                                    
                                                                    // Field name: polygon
                                                                    // SequenceOf
                                                                    // Data Type UInt8
                                                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                                                    uint8_t* _ext_flag_225 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001036") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_225);
                                                                    }
                                                                    
                                                                    int16_t* _tmp_1570 = (int16_t*)buffer;
                                                                    buffer += 2;
                                                                    __aux64__ = *_tmp_1570;
                                                                    __aux64__ += 1;     // +min
                                                                    
                                                                    int _if__tmp_1570 = __aux64__;
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001037") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon. size: " << int(__aux64__);
                                                                    }
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    
                                                                    for(int u = 0; u < _if__tmp_1570; u++) {
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_u;  // SEQUENCE
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.push_back(seqof_u);
                                                                    
                                                                            // CartesianPosition3d  SEQUENCE
                                                                                //  xCoordinate CartesianCoordinate     
                                                                                //  yCoordinate CartesianCoordinate     
                                                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1571;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate.push_back(_tmp_1571);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001038") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: x_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1572 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value = *_tmp_1572;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001039") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].x_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: y_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1573 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value = *_tmp_1573;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001040") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].y_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate.size() != 0) {
                                                                                // Field name: z_coordinate
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                                uint16_t* _tmp_1574 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value = *_tmp_1574;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value += -32768;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value /= 100.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001041") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[u].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                        // Field name: height
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1575 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value = *_tmp_1575;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001042") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            else if(_choice_16 == 3)  // CHOICE Shape  fieldName(elliptical)
                                                            {
                                                                its_container_v4_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_1576;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.push_back(_tmp_1576);
                                                            
                                                                    // EllipticalShape  SEQUENCE
                                                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                        //  semiMajorAxisLength StandardLength12b       
                                                                        //  semiMinorAxisLength StandardLength12b       
                                                                        //  orientation         CartesianAngleValue   OPTIONAL  
                                                                        //  height              StandardLength12b     OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1577;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_1577);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001043") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1578;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.push_back(_tmp_1578);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001044") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1579;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.push_back(_tmp_1579);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001045") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height " << tools::green("present");
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                        // Field name: shape_reference_point
                                                                            // CartesianPosition3d  SEQUENCE
                                                                                //  xCoordinate CartesianCoordinate     
                                                                                //  yCoordinate CartesianCoordinate     
                                                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1580;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1580);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001046") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: x_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1581 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_1581;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001047") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: y_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1582 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_1582;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001048") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                                // Field name: z_coordinate
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                                uint16_t* _tmp_1583 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1583;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001049") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                                    
                                                                    // Field name: semi_major_axis_length
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1584 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_1584;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001050") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: semi_minor_axis_length
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1585 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_1585;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001051") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                        // Field name: orientation
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1586 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value = *_tmp_1586;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001052") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                        // Field name: height
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1587 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value = *_tmp_1587;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001053") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            else if(_choice_16 == 4)  // CHOICE Shape  fieldName(radial)
                                                            {
                                                                its_container_v4_etsi_its_cdd_msgs::msg::RadialShape _tmp_1588;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.push_back(_tmp_1588);
                                                            
                                                                    // RadialShape  SEQUENCE
                                                                        //  shapeReferencePoint         CartesianPosition3d   OPTIONAL  
                                                                        //  range                       StandardLength12b       
                                                                        //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                        //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                        //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                        //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1589;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.push_back(_tmp_1589);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001054") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1590;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_1590);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001055") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1591;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_1591);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001056") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                        // Field name: shape_reference_point
                                                                            // CartesianPosition3d  SEQUENCE
                                                                                //  xCoordinate CartesianCoordinate     
                                                                                //  yCoordinate CartesianCoordinate     
                                                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1592;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1592);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001057") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: x_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1593 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_1593;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001058") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: y_coordinate
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                            uint16_t* _tmp_1594 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_1594;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001059") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                                // Field name: z_coordinate
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                                uint16_t* _tmp_1595 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1595;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001060") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                                    
                                                                    // Field name: range
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1596 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value = *_tmp_1596;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001061") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_start
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1597 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value = *_tmp_1597;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001062") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_end
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1598 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value = *_tmp_1598;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001063") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                        // Field name: vertical_opening_angle_start
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1599 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_1599;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001064") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                        // Field name: vertical_opening_angle_end
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1600 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_1600;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001065") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            else if(_choice_16 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                                                            {
                                                                its_container_v4_etsi_its_cdd_msgs::msg::RadialShapes _tmp_1601;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.push_back(_tmp_1601);
                                                            
                                                                    // RadialShapes  SEQUENCE
                                                                        //  refPointId       Identifier1B                 
                                                                        //  xCoordinate      CartesianCoordinateSmall     
                                                                        //  yCoordinate      CartesianCoordinateSmall     
                                                                        //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                        //  radialShapesList RadialShapesList             
                                                                    if(*(buffer++)) { 
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_1602;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_1602);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("001066") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: ref_point_id
                                                                    // Integer
                                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                                    uint8_t* _tmp_1603 = (uint8_t*) buffer++;
                                                                    __aux64__ = *_tmp_1603;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001067") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                                    }
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1604 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_1604;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001068") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1605 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_1605;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001069") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate: " <<
                                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1606 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_1606;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                                                        __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("001070") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                                                         ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    // Field name: radial_shapes_list
                                                                    // SequenceOf
                                                                    // Data Type UInt8
                                                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                                                    uint8_t* _ext_flag_248 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001071") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_248);
                                                                    }
                                                                    
                                                                    int16_t* _tmp_1607 = (int16_t*)buffer;
                                                                    buffer += 2;
                                                                    __aux64__ = *_tmp_1607;
                                                                    __aux64__ += 1;     // +min
                                                                    
                                                                    int _if__tmp_1607 = __aux64__;
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("001072") << "| SequenceOf ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(__aux64__);
                                                                    }
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    
                                                                    for(int v = 0; v < _if__tmp_1607; v++) {
                                                                        its_container_v4_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_v;  // SEQUENCE
                                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_v);
                                                                    
                                                                            // RadialShapeDetails  SEQUENCE
                                                                                //  range                       StandardLength12b       
                                                                                //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                                //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                                //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                                //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1608;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start.push_back(_tmp_1608);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001073") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start " << tools::green("present");
                                                                            }
                                                                            if(*(buffer++)) { 
                                                                                its_container_v4_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1609;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end.push_back(_tmp_1609);
                                                                            
                                                                                if(debug)
                                                                                    logger->print() << "|" << tools::brown("001074") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end " << tools::green("present");
                                                                            }
                                                                            
                                                                            // Field name: range
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                            uint16_t* _tmp_1610 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value = *_tmp_1610;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value /= 10.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001075") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].range.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: horizontal_opening_angle_start
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            uint16_t* _tmp_1611 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value = *_tmp_1611;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value /= 10.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001076") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            // Field name: horizontal_opening_angle_end
                                                                            // Real
                                                                            // Float
                                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                            uint16_t* _tmp_1612 = (uint16_t*) buffer; buffer += 2;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value = *_tmp_1612;
                                                                            __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value;
                                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value /= 10.0;
                                                                            
                                                                            // ******************* MIN validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                                return false;
                                                                            }
                                                                            // ******************* MAX validator *******************
                                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                                return false;
                                                                            }
                                                                            
                                                                            if(debug) {
                                                                                logger->print() << "|" << tools::brown("001077") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end: " <<
                                                                                             ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start.size() != 0) {
                                                                                // Field name: vertical_opening_angle_start
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                                uint16_t* _tmp_1613 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value = *_tmp_1613;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value /= 10.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001078") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                            
                                                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end.size() != 0) {
                                                                                // Field name: vertical_opening_angle_end
                                                                                // Real
                                                                                // Float
                                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                                uint16_t* _tmp_1614 = (uint16_t*) buffer; buffer += 2;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value = *_tmp_1614;
                                                                                __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value;
                                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value /= 10.0;
                                                                                
                                                                                // ******************* MIN validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                // ******************* MAX validator *******************
                                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                                    return false;
                                                                                }
                                                                                
                                                                                if(debug) {
                                                                                    logger->print() << "|" << tools::brown("001079") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0]: " <<
                                                                                                 ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[v].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                                }
                                                                            }
                                                                    }
                                                            }
                                                            else
                                                            {
                                                                uint16_t* _tmp_1615 = (uint16_t*)buffer;  // OpenType length
                                                                buffer += 2 + int(*_tmp_1615);            // Ignoring opentype data
                                                            }
                                                        }
                                                        
                                                        // Field name: cluster_cardinality_size
                                                        // Integer
                                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                        uint8_t* _tmp_1616 = (uint8_t*) buffer++;
                                                        __aux64__ = *_tmp_1616;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001080") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                            return false;
                                                        }
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                            // Field name: cluster_profiles
                                                            // BitString
                                                            // BIT_STRING  min(4) max(4) span(1)
                                                            uint8_t* _tmp_1617 = (uint8_t*)buffer;
                                                            __aux64__ = *_tmp_1617 + 4;
                                                            buffer += 1;
                                                            
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001081") << "| denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].value: " << __aux64__;
                                                            
                                                            int _if__tmp_1617 = __aux64__;
                                                            for(int w = 0; w < _if__tmp_1617; w++) {
                                                                uint8_t __c__;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values.push_back(__c__);
                                                                uint8_t* __b__ = (uint8_t*)buffer++;
                                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].values[w] = (*__b__ == 1);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 4) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " is less than allowable (4); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        if(*_ext_flag_208) { // from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0]. 
                                                            uint8_t* _tmp_1618 = (uint8_t*) buffer++;  // number of extensions
                                                            bool _array_36[*_tmp_1618];
                                                            
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001082") << "| Reading number of exts from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.group_sub_class[0].: " << static_cast<unsigned int>(*_tmp_1618);
                                                            
                                                            // Extensions bytemap
                                                            for(int i = 0; i < *_tmp_1618; i++)
                                                                _array_36[i] = (*buffer++) != 0;
                                                            
                                                            // Discarding unknown OpenType containers
                                                            for(int i = 0; i < *_tmp_1618; i++) {
                                                                uint16_t* _tmp_1619 = (uint16_t*)buffer;  // OpenType length
                                                                buffer += 2;
                                                            
                                                                if(debug) {
                                                                }
                                                            
                                                                for(int i = 0; i < *_tmp_1619; i++)
                                                                    buffer++;
                                                            }
                                                            
                                                        }
                                                }
                                                else if(_choice_14 == 3)  // CHOICE ObjectClass  fieldName(other_sub_class)
                                                {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::OtherSubClass _tmp_1620;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class.push_back(_tmp_1620);
                                                
                                                    // Integer
                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                    uint8_t* _tmp_1621 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_1621;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("001083") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value) << 
                                                                     " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].object_class.other_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                else
                                                {
                                                    uint16_t* _tmp_1622 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2 + int(*_tmp_1622);            // Ignoring opentype data
                                                }
                                                
                                                // Field name: confidence
                                                // Integer
                                                // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                                uint8_t* _tmp_1623 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1623;
                                                __aux64__ += 1;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("001084") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.classification[0].elements[t].confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                    return false;
                                                }
                                        }
                                    }
                                    
                                    if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position.size() != 0) {
                                        // Field name: map_position
                                            // MapPosition  SEQUENCE
                                                //  mapReference             MapReference               OPTIONAL  
                                                //  laneId                   Identifier1B               OPTIONAL  
                                                //  connectionId             Identifier1B               OPTIONAL  
                                                //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                                //  ...
                                            uint8_t* _ext_flag_254 = (uint8_t*) buffer++;  // Read ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("001085") << "| Reading ext flag from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].: " << int(*_ext_flag_254);
                                            }
                                            
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::MapReference _tmp_1624;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.push_back(_tmp_1624);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("001086") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_1625;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.push_back(_tmp_1625);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("001087") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::Identifier1B _tmp_1626;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.push_back(_tmp_1626);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("001088") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v4_etsi_its_cdd_msgs::msg::LongitudinalLanePosition _tmp_1627;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.push_back(_tmp_1627);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("001089") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position " << tools::green("present");
                                            }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference.size() != 0) {
                                                // Field name: map_reference
                                                // Choice
                                                   // #0  roadsegment   RoadSegmentReferenceId   
                                                   // #1  intersection   IntersectionReferenceId   
                                                uint8_t _choice_17 = *(buffer++);
                                                
                                                if(_choice_17 == 0) {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_1628;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment.push_back(_tmp_1628);
                                                
                                                        // RoadSegmentReferenceId  SEQUENCE
                                                            //  region     Identifier2B   OPTIONAL  
                                                            //  id         Identifier2B     
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1629;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.push_back(_tmp_1629);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001090") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                            // Field name: region
                                                            // Integer
                                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                            uint16_t* _tmp_1630 = (uint16_t*) buffer; buffer += 2;
                                                            __aux64__ = *_tmp_1630;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("001091") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        // Field name: id
                                                        // Integer
                                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                        uint16_t* _tmp_1631 = (uint16_t*) buffer; buffer += 2;
                                                        __aux64__ = *_tmp_1631;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001092") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value;
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                            return false;
                                                        }
                                                }
                                                else if(_choice_17 == 1)  // CHOICE MapReference  fieldName(intersection)
                                                {
                                                    its_container_v4_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_1632;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection.push_back(_tmp_1632);
                                                
                                                        // IntersectionReferenceId  SEQUENCE
                                                            //  region     Identifier2B   OPTIONAL  
                                                            //  id         Identifier2B     
                                                        if(*(buffer++)) { 
                                                            its_container_v4_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1633;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.push_back(_tmp_1633);
                                                        
                                                            if(debug)
                                                                logger->print() << "|" << tools::brown("001093") << "| ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                        }
                                                        
                                                        if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                            // Field name: region
                                                            // Integer
                                                            // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                            uint16_t* _tmp_1634 = (uint16_t*) buffer; buffer += 2;
                                                            __aux64__ = *_tmp_1634;
                                                            ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("001094") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                             " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value;
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                                logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                                return false;
                                                            }
                                                        }
                                                        
                                                        // Field name: id
                                                        // Integer
                                                        // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                        uint16_t* _tmp_1635 = (uint16_t*) buffer; buffer += 2;
                                                        __aux64__ = *_tmp_1635;
                                                        ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                        
                                                        if(debug) {
                                                            logger->print() << "|" << tools::brown("001095") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                         " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value: " << ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value;
                                                        }
                                                        
                                                        // ******************* MIN validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                            return false;
                                                        }
                                                        // ******************* MAX validator *******************
                                                        if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                            logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                            return false;
                                                        }
                                                }
                                                else
                                                {
                                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_17) << ") selected in CHOICE MapReference in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].map_reference[0]'; message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id.size() != 0) {
                                                // Field name: lane_id
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_1636 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1636;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("001096") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id.size() != 0) {
                                                // Field name: connection_id
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_1637 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1637;
                                                ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("001097") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value) << 
                                                                 " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                            }
                                            
                                            if(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position.size() != 0) {
                                                // Field name: longitudinal_lane_position
                                                    // LongitudinalLanePosition  SEQUENCE
                                                        //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                        //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                                    
                                                    // Field name: longitudinal_lane_position_value
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1638 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_1638;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("001098") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                                    }
                                                    
                                                    // Field name: longitudinal_lane_position_confidence
                                                    // Real
                                                    // Float
                                                    // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                                    uint16_t* _tmp_1639 = (uint16_t*) buffer; buffer += 2;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_1639;
                                                    __aux64__ = ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                                    ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                        return false;
                                                    }
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("001099") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                                     ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                                    }
                                            }
                                            if(*_ext_flag_254) { // from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0]. 
                                                uint8_t* _tmp_1640 = (uint8_t*) buffer++;  // number of extensions
                                                bool _array_37[*_tmp_1640];
                                                
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("001100") << "| Reading number of exts from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.map_position[0].: " << static_cast<unsigned int>(*_tmp_1640);
                                                
                                                // Extensions bytemap
                                                for(int i = 0; i < *_tmp_1640; i++)
                                                    _array_37[i] = (*buffer++) != 0;
                                                
                                                // Discarding unknown OpenType containers
                                                for(int i = 0; i < *_tmp_1640; i++) {
                                                    uint16_t* _tmp_1641 = (uint16_t*)buffer;  // OpenType length
                                                    buffer += 2;
                                                
                                                    if(debug) {
                                                    }
                                                
                                                    for(int i = 0; i < *_tmp_1641; i++)
                                                        buffer++;
                                                }
                                                
                                            }
                                    }
                                    if(*_ext_flag_154) { // from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object. 
                                        uint8_t* _tmp_1642 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_38[*_tmp_1642];
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("001101") << "| Reading number of exts from ros->denm.alacarte[0].precrash[0].perceived_pre_crash_object.: " << static_cast<unsigned int>(*_tmp_1642);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_1642; i++)
                                            _array_38[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_1642; i++) {
                                            uint16_t* _tmp_1643 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_1643; i++)
                                                buffer++;
                                        }
                                        
                                    }
                                
                                if(ros->denm.alacarte[0].precrash[0].object_station_id.size() != 0) {
                                    // Field name: object_station_id
                                    // Integer
                                    // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
                                    uint32_t* _tmp_1644 = (uint32_t*) buffer; buffer += 4;
                                    __aux64__ = *_tmp_1644;
                                    ros->denm.alacarte[0].precrash[0].object_station_id[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("001102") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].object_station_id[0].value) << 
                                                     " denm.alacarte[0].precrash[0].object_station_id[0].value: " << ros->denm.alacarte[0].precrash[0].object_station_id[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].object_station_id[0].value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
                                        return false;
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].time_to_collision.size() != 0) {
                                    // Field name: time_to_collision
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(10000) span(10000) scaleDivisor(1000.0) dataType(Float)
                                    uint16_t* _tmp_1645 = (uint16_t*) buffer; buffer += 2;
                                    ros->denm.alacarte[0].precrash[0].time_to_collision[0].value = *_tmp_1645;
                                    ros->denm.alacarte[0].precrash[0].time_to_collision[0].value += 1;
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].time_to_collision[0].value;
                                    ros->denm.alacarte[0].precrash[0].time_to_collision[0].value /= 1000.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 10000) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].time_to_collision[0].value' " << (__aux64__) << " exceeds max allowable (10000); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("001103") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].time_to_collision[0].value) << " denm.alacarte[0].precrash[0].time_to_collision[0]: " <<
                                                     ros->denm.alacarte[0].precrash[0].time_to_collision[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].impact_section.size() != 0) {
                                    // Field name: impact_section
                                    // Enumerated
                                    // INT32  min(0) max(5) span(6) datatype(Int32)
                                    uint8_t* _tmp_1646 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1646;
                                    __aux64__ += 0;
                                    ros->denm.alacarte[0].precrash[0].impact_section[0].value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 5) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].impact_section[0].value' " << (__aux64__) << " exceeds max allowable (5); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("001104") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].impact_section[0].value) << 
                                                     " denm.alacarte[0].precrash[0].impact_section[0].value: " << static_cast<int>(ros->denm.alacarte[0].precrash[0].impact_section[0].value);
                                    }
                                }
                                
                                if(ros->denm.alacarte[0].precrash[0].estimated_braking_distance.size() != 0) {
                                    // Field name: estimated_braking_distance
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1647 = (uint16_t*) buffer; buffer += 2;
                                    ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value = *_tmp_1647;
                                    __aux64__ = ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value;
                                    ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'denm.alacarte[0].precrash[0].estimated_braking_distance[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("001105") << "| " << tools::getTypeName(ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value) << " denm.alacarte[0].precrash[0].estimated_braking_distance[0]: " <<
                                                     ros->denm.alacarte[0].precrash[0].estimated_braking_distance[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                if(*_ext_flag_153) { // from ros->denm.alacarte[0].precrash[0]. 
                                    uint8_t* _tmp_1648 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_39[*_tmp_1648];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("001106") << "| Reading number of exts from ros->denm.alacarte[0].precrash[0].: " << static_cast<unsigned int>(*_tmp_1648);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1648; i++)
                                        _array_39[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1648; i++) {
                                        uint16_t* _tmp_1649 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1649; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                    
                    }
                    
                    // Discarding unknown OpenType containers
                    for(int i = 1; i < *_tmp_1373; i++) {
                        uint16_t* _tmp_1650 = (uint16_t*)buffer;  // OpenType length
                        buffer += 2;
                    
                        if(debug) {
                        }
                    
                        for(int i = 0; i < *_tmp_1650; i++)
                            buffer++;
                    }
                    
                }
        }
	
	        return true;
        }
    }
}