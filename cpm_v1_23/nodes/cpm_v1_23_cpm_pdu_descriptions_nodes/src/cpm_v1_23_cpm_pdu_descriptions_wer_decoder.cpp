/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:cpm_v1_23:1.0
 * 
 * Module: CPM_PDU_Descriptions {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) ts(103324) cpm(1) major-version-1(1) minor-version-1(1)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <cpm_v1_23_cpm_pdu_descriptions_wer_decoder.h>


/**
 *
 */
namespace wind
{
    namespace decoder_cpm_v1_23_cpm_pdu_descriptions
    {        
        
        #if WIND_ROS_VERSION == 1
          bool WerDecoder::decode(cpm_v1_23_cpm_pdu_descriptions_msgs::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #else
          bool WerDecoder::decode(cpm_v1_23_cpm_pdu_descriptions_msgs::msg::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #endif
        {
            const uint8_t *start = buffer;
            int64_t __aux64__;
	
    // CollectivePerceptionMessage  SEQUENCE
        //  its_header ItsPduHeader     
        //  payload    CpmPayload       
    
    // Field name: its_header
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        
        // Field name: protocol_version
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_1590 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_1590;
        ros->its_header.protocol_version.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m001235\033[0m| " << tools::getTypeName(ros->its_header.protocol_version.value) << 
                         " its_header.protocol_version.value: " << static_cast<int>(ros->its_header.protocol_version.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: message_id
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_1591 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_1591;
        ros->its_header.message_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m001236\033[0m| " << tools::getTypeName(ros->its_header.message_id.value) << 
                         " its_header.message_id.value: " << static_cast<int>(ros->its_header.message_id.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: station_id
        // Integer
        // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
        uint32_t* _tmp_1592 = (uint32_t*) buffer; buffer += 4;
        __aux64__ = *_tmp_1592;
        ros->its_header.station_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m001237\033[0m| " << tools::getTypeName(ros->its_header.station_id.value) << 
                         " its_header.station_id.value: " << ros->its_header.station_id.value;
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
            return false;
        }
    
    // Field name: payload
        // CpmPayload  SEQUENCE
            //  managementContainer ManagementContainer                
            //  cpmContainers       ConstraintWrappedCpmContainers     
            //  ...
        uint8_t* _ext_flag_787 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m001238\033[0m| Reading ext flag from ros->payload.: " << int(*_ext_flag_787);
        }
        
        
        // Field name: management_container
            // ManagementContainer  SEQUENCE
                //  referenceTime     TimestampIts                
                //  referencePosition ReferencePosition           
                //  segmentationInfo  MessageSegmentationInfo   OPTIONAL  
                //  messageRateRange  MessageRateRange          OPTIONAL  
                //  ...
            uint8_t* _ext_flag_788 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.management_container.
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m001239\033[0m| Reading ext flag from ros->payload.management_container.: " << int(*_ext_flag_788);
            }
            
            if(*(buffer++)) { 
                its_container_v3_etsi_its_cdd_msgs::msg::MessageSegmentationInfo _tmp_1593;
                ros->payload.management_container.segmentation_info.push_back(_tmp_1593);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m001240\033[0m| ros->payload.management_container.segmentation_info " << tools::green("present");
            }
            if(*(buffer++)) { 
                cpm_v1_23_cpm_pdu_descriptions_msgs::msg::MessageRateRange _tmp_1594;
                ros->payload.management_container.message_rate_range.push_back(_tmp_1594);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m001241\033[0m| ros->payload.management_container.message_rate_range " << tools::green("present");
            }
            
            // Field name: reference_time
            // Real
            // Double
            // DOUBLE  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Double)
            uint64_t* _tmp_1595 = (uint64_t*)buffer; buffer += 8;
            ros->payload.management_container.reference_time.value = *_tmp_1595;
            __aux64__ = ros->payload.management_container.reference_time.value;
            ros->payload.management_container.reference_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m001242\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_time.value) << " payload.management_container.reference_time: " <<
                             ros->payload.management_container.reference_time.value << " (" << __aux64__ << ")";
            }
            
            // Field name: reference_position
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                
                // Field name: latitude
                // Real
                // Double
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_1596 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.latitude.value = *_tmp_1596;
                ros->payload.management_container.reference_position.latitude.value += -900000000;
                __aux64__ = ros->payload.management_container.reference_position.latitude.value;
                ros->payload.management_container.reference_position.latitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m001243\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.latitude.value) << " payload.management_container.reference_position.latitude: " <<
                                 ros->payload.management_container.reference_position.latitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: longitude
                // Real
                // Double
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_1597 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.longitude.value = *_tmp_1597;
                ros->payload.management_container.reference_position.longitude.value += -1800000000;
                __aux64__ = ros->payload.management_container.reference_position.longitude.value;
                ros->payload.management_container.reference_position.longitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m001244\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.longitude.value) << " payload.management_container.reference_position.longitude: " <<
                                 ros->payload.management_container.reference_position.longitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: position_confidence_ellipse
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    
                    // Field name: semi_major_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_1598 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value = *_tmp_1598;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001245\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_minor_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_1599 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value = *_tmp_1599;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001246\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_major_orientation
                    // Integer
                    // UINT16  min(0) max(3601) span(3602) datatype(UInt16)
                    uint16_t* _tmp_1600 = (uint16_t*) buffer; buffer += 2;
                    __aux64__ = *_tmp_1600;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001247\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                        return false;
                    }
                
                // Field name: altitude
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    
                    // Field name: altitude_value
                    // Real
                    // Float
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    uint32_t* _tmp_1601 = (uint32_t*) buffer; buffer += 4;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value = *_tmp_1601;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value += -100000;
                    __aux64__ = ros->payload.management_container.reference_position.altitude.altitude_value.value;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001248\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_value.value) << " payload.management_container.reference_position.altitude.altitude_value: " <<
                                     ros->payload.management_container.reference_position.altitude.altitude_value.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: altitude_confidence
                    // Enumerated
                    // INT32  min(0) max(15) span(16) datatype(Int32)
                    uint8_t* _tmp_1602 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_1602;
                    __aux64__ += 0;
                    ros->payload.management_container.reference_position.altitude.altitude_confidence.value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001249\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_confidence.value) << 
                                     " payload.management_container.reference_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->payload.management_container.reference_position.altitude.altitude_confidence.value);
                    }
            
            if(ros->payload.management_container.segmentation_info.size() != 0) {
                // Field name: segmentation_info
                    // MessageSegmentationInfo  SEQUENCE
                        //  totalMsgNo CardinalNumber3b     
                        //  thisMsgNo  OrdinalNumber3b      
                    
                    // Field name: total_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_1603 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_1603;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].total_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001250\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].total_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].total_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].total_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
                    
                    // Field name: this_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_1604 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_1604;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].this_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001251\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].this_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].this_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].this_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
            }
            
            if(ros->payload.management_container.message_rate_range.size() != 0) {
                // Field name: message_rate_range
                    // MessageRateRange  SEQUENCE
                        //  messageRateMin MessageRateHz     
                        //  messageRateMax MessageRateHz     
                    
                    // Field name: message_rate_min
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_1605 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1605;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001252\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_1606 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1606;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001253\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
                    
                    // Field name: message_rate_max
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_1607 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1607;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001254\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_1608 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1608;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001255\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
            }
            if(*_ext_flag_788) { // from ros->payload.management_container. 
                uint8_t* _tmp_1609 = (uint8_t*) buffer++;  // number of extensions
                bool _array_12[*_tmp_1609];
                
                if(debug)
                    logger->debug() << "|\033[38;5;94m001256\033[0m| Reading number of exts from ros->payload.management_container.: " << static_cast<unsigned int>(*_tmp_1609);
                
                // Extensions bytemap
                for(int i = 0; i < *_tmp_1609; i++)
                    _array_12[i] = (*buffer++) != 0;
                
                // Discarding unknown OpenType containers
                for(int i = 0; i < *_tmp_1609; i++) {
                    uint16_t* _tmp_1610 = (uint16_t*)buffer;  // OpenType length
                    buffer += 2;
                
                    if(debug) {
                    }
                
                    for(int i = 0; i < *_tmp_1610; i++)
                        buffer++;
                }
                
            }
        
        // Field name: cpm_containers
        // SequenceOf
        // Data Type UInt8
        // SEQUENCE_OF  min(1) max(8) span(8)
        uint8_t* _ext_flag_796 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m001257\033[0m| Reading ext flag from ros->payload.cpm_containers.: " << int(*_ext_flag_796);
        }
        
        int16_t* _tmp_1611 = (int16_t*)buffer;
        buffer += 2;
        __aux64__ = *_tmp_1611;
        __aux64__ += 1;     // +min
        
        int _if__tmp_1611 = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m001258\033[0m| SequenceOf ros->payload.cpm_containers. size: " << int(*_tmp_1611);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 1) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 8) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
            return false;
        }
        
        
        for(int i = 0; i < _if__tmp_1611; i++) {
            cpm_v1_23_cpm_pdu_descriptions_msgs::msg::WrappedCpmContainer seqof_i;  // CHOICE
            ros->payload.cpm_containers.elements.push_back(seqof_i);
        
            // Choice
               // #0  originatingVehicleContainer   OriginatingVehicleContainer   
               // #1  originatingRsuContainer   OriginatingRsuContainer   
               // #2  sensorInformationContainer   SensorInformationContainer   
               // #3  perceptionRegionContainer   PerceptionRegionContainer   
               // #4  perceivedObjectContainer   PerceivedObjectContainer   
            uint8_t _choice_31 = *(buffer++);
            
            if(_choice_31 == 0) {
                cpm_v1_23_cpm_originatingstationcontainers_msgs::msg::OriginatingVehicleContainer _tmp_1612;
                ros->payload.cpm_containers.elements[i].originating_vehicle_container.push_back(_tmp_1612);
            
                    // OriginatingVehicleContainer  SEQUENCE
                        //  orientationAngle Wgs84Angle         
                        //  pitchAngle       CartesianAngle   OPTIONAL  
                        //  rollAngle        CartesianAngle   OPTIONAL  
                        //  trailerDataSet   TrailerDataSet   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_798 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001259\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].: " << int(*_ext_flag_798);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_1613;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle.push_back(_tmp_1613);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001260\033[0m| ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_1614;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle.push_back(_tmp_1614);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001261\033[0m| ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        cpm_v1_23_cpm_originatingstationcontainers_msgs::msg::TrailerDataSet _tmp_1615;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set.push_back(_tmp_1615);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001262\033[0m| ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set " << tools::green("present");
                    }
                    
                    // Field name: orientation_angle
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        
                        // Field name: value
                        // Real
                        // Float
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        uint16_t* _tmp_1616 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value = *_tmp_1616;
                        __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001263\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value: " <<
                                         ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_1617 = (uint8_t*) buffer++;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value = *_tmp_1617;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value += 1;
                        __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value;
                        ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001264\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence: " <<
                                         ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].orientation_angle.confidence.value << " (" << __aux64__ << ")";
                        }
                    
                    if(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle.size() != 0) {
                        // Field name: pitch_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_1618 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value = *_tmp_1618;
                            __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001265\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_1619 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value = *_tmp_1619;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001266\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].pitch_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle.size() != 0) {
                        // Field name: roll_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_1620 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value = *_tmp_1620;
                            __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001267\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_1621 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value = *_tmp_1621;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001268\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].roll_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set.size() != 0) {
                        // Field name: trailer_data_set
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8)
                        uint8_t* _ext_flag_805 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001269\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].: " << int(*_ext_flag_805);
                        }
                        
                        int16_t* _tmp_1622 = (int16_t*)buffer;
                        buffer += 2;
                        __aux64__ = *_tmp_1622;
                        __aux64__ += 1;     // +min
                        
                        int _if__tmp_1622 = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001270\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0]. size: " << int(*_tmp_1622);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                            return false;
                        }
                        
                        
                        for(int j = 0; j < _if__tmp_1622; j++) {
                            its_container_v3_etsi_its_cdd_msgs::msg::TrailerData seqof_j;  // SEQUENCE
                            ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements.push_back(seqof_j);
                        
                                // TrailerData  SEQUENCE
                                    //  refPointId       Identifier1B         
                                    //  hitchPointOffset StandardLength1B     
                                    //  frontOverhang    StandardLength1B   OPTIONAL  
                                    //  rearOverhang     StandardLength1B   OPTIONAL  
                                    //  trailerWidth     VehicleWidth       OPTIONAL  
                                    //  hitchAngle       CartesianAngle       
                                    //  ...
                                uint8_t* _ext_flag_806 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001271\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].: " << int(*_ext_flag_806);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength1B _tmp_1623;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang.push_back(_tmp_1623);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001272\033[0m| ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength1B _tmp_1624;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang.push_back(_tmp_1624);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001273\033[0m| ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::VehicleWidth _tmp_1625;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width.push_back(_tmp_1625);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001274\033[0m| ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_1626 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_1626;
                                ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001275\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: hitch_point_offset
                                // Real
                                // Float
                                // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                uint8_t* _tmp_1627 = (uint8_t*) buffer++;
                                ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value = *_tmp_1627;
                                __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value;
                                ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001276\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset: " <<
                                                 ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_point_offset.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang.size() != 0) {
                                    // Field name: front_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1628 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value = *_tmp_1628;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001277\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].front_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang.size() != 0) {
                                    // Field name: rear_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1629 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value = *_tmp_1629;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001278\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].rear_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width.size() != 0) {
                                    // Field name: trailer_width
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(62) span(62) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1630 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value = *_tmp_1630;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 62) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value' " << (__aux64__) << " exceeds max allowable (62); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001279\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].trailer_width[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: hitch_angle
                                    // CartesianAngle  SEQUENCE
                                        //  value      CartesianAngleValue     
                                        //  confidence AngleConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1631 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value = *_tmp_1631;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001280\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value: " <<
                                                     ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1632 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value = *_tmp_1632;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value;
                                    ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001281\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value) << " payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence: " <<
                                                     ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].hitch_angle.confidence.value << " (" << __aux64__ << ")";
                                    }
                                if(*_ext_flag_806) { // from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j]. 
                                    uint8_t* _tmp_1633 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_13[*_tmp_1633];
                                    
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001282\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].trailer_data_set[0].elements[j].: " << static_cast<unsigned int>(*_tmp_1633);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_1633; i++)
                                        _array_13[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_1633; i++) {
                                        uint16_t* _tmp_1634 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_1634; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                    }
                    if(*_ext_flag_798) { // from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0]. 
                        uint8_t* _tmp_1635 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_14[*_tmp_1635];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001283\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].originating_vehicle_container[0].: " << static_cast<unsigned int>(*_tmp_1635);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_1635; i++)
                            _array_14[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_1635; i++) {
                            uint16_t* _tmp_1636 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_1636; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_31 == 1)  // CHOICE WrappedCpmContainer  fieldName(originating_rsu_container)
            {
                cpm_v1_23_cpm_originatingstationcontainers_msgs::msg::OriginatingRsuContainer _tmp_1637;
                ros->payload.cpm_containers.elements[i].originating_rsu_container.push_back(_tmp_1637);
            
                    // OriginatingRsuContainer  SEQUENCE
                        //  mapReference MapReference   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_813 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].originating_rsu_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001284\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].originating_rsu_container[0].: " << int(*_ext_flag_813);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::MapReference _tmp_1638;
                        ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference.push_back(_tmp_1638);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001285\033[0m| ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference " << tools::green("present");
                    }
                    
                    if(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference.size() != 0) {
                        // Field name: map_reference
                        // Choice
                           // #0  roadsegment   RoadSegmentReferenceId   
                           // #1  intersection   IntersectionReferenceId   
                        uint8_t _choice_32 = *(buffer++);
                        
                        if(_choice_32 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_1639;
                            ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment.push_back(_tmp_1639);
                        
                                // RoadSegmentReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1640;
                                    ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region.push_back(_tmp_1640);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001286\033[0m| ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_1641 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_1641;
                                    ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001287\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_1642 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_1642;
                                ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001288\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value) << 
                                                 " payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else if(_choice_32 == 1)  // CHOICE MapReference  fieldName(intersection)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_1643;
                            ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection.push_back(_tmp_1643);
                        
                                // IntersectionReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1644;
                                    ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region.push_back(_tmp_1644);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001289\033[0m| ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_1645 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_1645;
                                    ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001290\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_1646 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_1646;
                                ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001291\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].id.value) << 
                                                 " payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_32) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[i].originating_rsu_container[0].map_reference[0]'; message dropped.";
                            return false;
                        }
                    }
                    if(*_ext_flag_813) { // from ros->payload.cpm_containers.elements[i].originating_rsu_container[0]. 
                        uint8_t* _tmp_1647 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_15[*_tmp_1647];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001292\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].originating_rsu_container[0].: " << static_cast<unsigned int>(*_tmp_1647);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_1647; i++)
                            _array_15[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_1647; i++) {
                            uint16_t* _tmp_1648 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_1648; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_31 == 2)  // CHOICE WrappedCpmContainer  fieldName(sensor_information_container)
            {
                cpm_v1_23_cpm_sensorinformationcontainer_msgs::msg::SensorInformationContainer _tmp_1649;
                ros->payload.cpm_containers.elements[i].sensor_information_container.push_back(_tmp_1649);
            
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(128) span(128)
                uint8_t* _ext_flag_815 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m001293\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].: " << int(*_ext_flag_815);
                }
                
                int16_t* _tmp_1650 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_1650;
                __aux64__ += 1;     // +min
                
                int _if__tmp_1650 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m001294\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].sensor_information_container[0]. size: " << int(*_tmp_1650);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                    return false;
                }
                
                
                for(int k = 0; k < _if__tmp_1650; k++) {
                    cpm_v1_23_cpm_sensorinformationcontainer_msgs::msg::SensorInformation seqof_k;  // SEQUENCE
                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements.push_back(seqof_k);
                
                        // SensorInformation  SEQUENCE
                            //  sensorId                   Identifier1B                           
                            //  sensorType                 SensorType                             
                            //  perceptionRegionShape      Shape                                OPTIONAL  
                            //  perceptionRegionConfidence ConfidenceLevel                      OPTIONAL  
                            //  shadowingApplies           SensorInformation_shadowingApplies     
                            //  ...
                        uint8_t* _ext_flag_816 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001295\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].: " << int(*_ext_flag_816);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::Shape _tmp_1651;
                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape.push_back(_tmp_1651);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001296\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::ConfidenceLevel _tmp_1652;
                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence.push_back(_tmp_1652);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001297\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence " << tools::green("present");
                        }
                        
                        // Field name: sensor_id
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_1653 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1653;
                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_id.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001298\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_id.value) << 
                                         " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_id.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                        
                        // Field name: sensor_type
                        // Integer
                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                        uint8_t* _tmp_1654 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1654;
                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_type.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001299\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_type.value) << 
                                         " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_type.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_type.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].sensor_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                            return false;
                        }
                        
                        if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape.size() != 0) {
                            // Field name: perception_region_shape
                            // Choice
                            uint8_t* _ext_flag_817 = (uint8_t*)buffer++; // ext flag
                            
                               // #0  rectangular   RectangularShape   
                               // #1  circular   CircularShape   
                               // #2  polygonal   PolygonalShape   
                               // #3  elliptical   EllipticalShape   
                               // #4  radial   RadialShape   
                               // #5  radialShapes   RadialShapes   
                            uint8_t _choice_33 = *(buffer++);
                            
                            if(*_ext_flag_817)
                                _choice_33 += 5 + 1; // Ext addition
                            
                            if(_choice_33 == 0) {
                                its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_1655;
                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular.push_back(_tmp_1655);
                            
                                    // RectangularShape  SEQUENCE
                                        //  centerPoint CartesianPosition3d   OPTIONAL  
                                        //  semiLength  StandardLength12b       
                                        //  semiBreadth StandardLength12b       
                                        //  orientation Wgs84AngleValue       OPTIONAL  
                                        //  height      StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1656;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point.push_back(_tmp_1656);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001300\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_1657;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation.push_back(_tmp_1657);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001301\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1658;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height.push_back(_tmp_1658);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001302\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point.size() != 0) {
                                        // Field name: center_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1659;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_1659);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001303\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1660 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_1660;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001304\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1661 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_1661;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001305\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1662 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_1662;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001306\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1663 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value = *_tmp_1663;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001307\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_breadth
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1664 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value = *_tmp_1664;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001308\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1665 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value = *_tmp_1665;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001309\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1666 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value = *_tmp_1666;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001310\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_33 == 1)  // CHOICE Shape  fieldName(circular)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_1667;
                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular.push_back(_tmp_1667);
                            
                                    // CircularShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  radius              StandardLength12b       
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1668;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point.push_back(_tmp_1668);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001311\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1669;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height.push_back(_tmp_1669);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001312\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1670;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1670);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001313\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1671 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_1671;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001314\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1672 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_1672;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001315\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1673 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1673;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001316\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: radius
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1674 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value = *_tmp_1674;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001317\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1675 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value = *_tmp_1675;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001318\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_33 == 2)  // CHOICE Shape  fieldName(polygonal)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_1676;
                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal.push_back(_tmp_1676);
                            
                                    // PolygonalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                        //  polygon             SequenceOfCartesianPosition3d     
                                        //  height              StandardLength12b               OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1677;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_1677);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001319\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1678;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height.push_back(_tmp_1678);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001320\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1679;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1679);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001321\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1680 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_1680;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001322\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1681 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_1681;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001323\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1682 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1682;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001324\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: polygon
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_833 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001325\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_833);
                                    }
                                    
                                    int16_t* _tmp_1683 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_1683;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_1683 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001326\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon. size: " << int(*_tmp_1683);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int l = 0; l < _if__tmp_1683; l++) {
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_l;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements.push_back(seqof_l);
                                    
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1684;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate.push_back(_tmp_1684);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001327\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1685 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value = *_tmp_1685;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001328\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1686 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value = *_tmp_1686;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001329\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1687 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value = *_tmp_1687;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001330\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].polygon.elements[l].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1688 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value = *_tmp_1688;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001331\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_33 == 3)  // CHOICE Shape  fieldName(elliptical)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_1689;
                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical.push_back(_tmp_1689);
                            
                                    // EllipticalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  semiMajorAxisLength StandardLength12b       
                                        //  semiMinorAxisLength StandardLength12b       
                                        //  orientation         Wgs84AngleValue       OPTIONAL  
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1690;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_1690);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001332\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_1691;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation.push_back(_tmp_1691);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001333\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1692;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height.push_back(_tmp_1692);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001334\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1693;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1693);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001335\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1694 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_1694;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001336\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1695 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_1695;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001337\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1696 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1696;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001338\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_major_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1697 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_1697;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001339\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_minor_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1698 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_1698;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001340\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1699 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value = *_tmp_1699;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001341\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1700 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value = *_tmp_1700;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001342\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_33 == 4)  // CHOICE Shape  fieldName(radial)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_1701;
                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial.push_back(_tmp_1701);
                            
                                    // RadialShape  SEQUENCE
                                        //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                        //  range                                 StandardLength12b       
                                        //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                        //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                        //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                        //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1702;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point.push_back(_tmp_1702);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001343\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1703;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_1703);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001344\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1704;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_1704);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001345\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1705;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1705);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001346\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1706 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_1706;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001347\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1707 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_1707;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001348\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1708 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1708;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001349\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: range
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1709 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value = *_tmp_1709;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001350\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1710 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_1710;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001351\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1711 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_1711;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001352\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                        // Field name: vertical_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1712 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_1712;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001353\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                        // Field name: vertical_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1713 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_1713;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001354\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_33 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_1714;
                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes.push_back(_tmp_1714);
                            
                                    // RadialShapes  SEQUENCE
                                        //  refPointId       Identifier1B                 
                                        //  xCoordinate      CartesianCoordinateSmall     
                                        //  yCoordinate      CartesianCoordinateSmall     
                                        //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                        //  radialShapesList RadialShapesList             
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_1715;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_1715);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001355\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                    }
                                    
                                    // Field name: ref_point_id
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1716 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1716;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001356\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                     " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].ref_point_id.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: x_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_1717 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_1717;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001357\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: y_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_1718 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_1718;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value;
                                    ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001358\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                        // Field name: z_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1719 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_1719;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value;
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001359\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                         ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    // Field name: radial_shapes_list
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_856 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001360\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_856);
                                    }
                                    
                                    int16_t* _tmp_1720 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_1720;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_1720 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001361\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_1720);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int m = 0; m < _if__tmp_1720; m++) {
                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_m;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_m);
                                    
                                            // RadialShapeDetails  SEQUENCE
                                                //  range                       StandardLength12b       
                                                //  horizontalOpeningAngleStart CartesianAngleValue     
                                                //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1721;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start.push_back(_tmp_1721);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001362\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1722;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end.push_back(_tmp_1722);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m001363\033[0m| ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end " << tools::green("present");
                                            }
                                            
                                            // Field name: range
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1723 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value = *_tmp_1723;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001364\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].range.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1724 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value = *_tmp_1724;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001365\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1725 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value = *_tmp_1725;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value;
                                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001366\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end: " <<
                                                             ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start.size() != 0) {
                                                // Field name: vertical_opening_angle_start
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_1726 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value = *_tmp_1726;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001367\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end.size() != 0) {
                                                // Field name: vertical_opening_angle_end
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_1727 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value = *_tmp_1727;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value;
                                                ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001368\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0]: " <<
                                                                 ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[m].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                            }
                            else
                            {
                                uint16_t* _tmp_1728 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2 + int(*_tmp_1728);            // Ignoring opentype data
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence.size() != 0) {
                            // Field name: perception_region_confidence
                            // Integer
                            // UINT8  min(1) max(101) span(101) datatype(UInt8)
                            uint8_t* _tmp_1729 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_1729;
                            __aux64__ += 1;
                            ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001369\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence[0].value) << 
                                             " payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].perception_region_confidence[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                return false;
                            }
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_1730 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].shadowing_applies.value = (*_tmp_1730 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001370\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].shadowing_applies.: " << (*_tmp_1730);
                        if(*_ext_flag_816) { // from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k]. 
                            uint8_t* _tmp_1731 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_16[*_tmp_1731];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001371\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].sensor_information_container[0].elements[k].: " << static_cast<unsigned int>(*_tmp_1731);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_1731; i++)
                                _array_16[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_1731; i++) {
                                uint16_t* _tmp_1732 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_1732; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_31 == 3)  // CHOICE WrappedCpmContainer  fieldName(perception_region_container)
            {
                cpm_v1_23_cpm_perceptionregioncontainer_msgs::msg::PerceptionRegionContainer _tmp_1733;
                ros->payload.cpm_containers.elements[i].perception_region_container.push_back(_tmp_1733);
            
                // SequenceOf
                // Data Type UInt16
                // SEQUENCE_OF  min(1) max(256) span(256)
                uint8_t* _ext_flag_862 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m001372\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].: " << int(*_ext_flag_862);
                }
                
                int16_t* _tmp_1734 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_1734;
                __aux64__ += 1;     // +min
                
                int _if__tmp_1734 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m001373\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perception_region_container[0]. size: " << int(*_tmp_1734);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 256) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                    return false;
                }
                
                
                for(int n = 0; n < _if__tmp_1734; n++) {
                    cpm_v1_23_cpm_perceptionregioncontainer_msgs::msg::PerceptionRegion seqof_n;  // SEQUENCE
                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements.push_back(seqof_n);
                
                        // PerceptionRegion  SEQUENCE
                            //  measurementDeltaTime       DeltaTimeMilliSecondSigned            
                            //  perceptionRegionConfidence ConfidenceLevel                       
                            //  perceptionRegionShape      Shape                                 
                            //  shadowingApplies           PerceptionRegion_shadowingApplies     
                            //  sensorIdList               SequenceOfIdentifier1B              OPTIONAL  
                            //  numberOfPerceivedObjects   CardinalNumber1B                    OPTIONAL  
                            //  perceivedObjectIds         PerceivedObjectIds                  OPTIONAL  
                            //  ...
                        uint8_t* _ext_flag_863 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001374\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].: " << int(*_ext_flag_863);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_1735;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list.push_back(_tmp_1735);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001375\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::CardinalNumber1B _tmp_1736;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects.push_back(_tmp_1736);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001376\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            cpm_v1_23_cpm_perceptionregioncontainer_msgs::msg::PerceivedObjectIds _tmp_1737;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids.push_back(_tmp_1737);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001377\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids " << tools::green("present");
                        }
                        
                        // Field name: measurement_delta_time
                        // Real
                        // Float
                        // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                        uint16_t* _tmp_1738 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value = *_tmp_1738;
                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value += -2048;
                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value;
                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value /= 1000.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001378\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time: " <<
                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].measurement_delta_time.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: perception_region_confidence
                        // Integer
                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                        uint8_t* _tmp_1739 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_1739;
                        __aux64__ += 1;
                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_confidence.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m001379\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_confidence.value) << 
                                         " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_confidence.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                            return false;
                        }
                        
                        // Field name: perception_region_shape
                        // Choice
                        uint8_t* _ext_flag_865 = (uint8_t*)buffer++; // ext flag
                        
                           // #0  rectangular   RectangularShape   
                           // #1  circular   CircularShape   
                           // #2  polygonal   PolygonalShape   
                           // #3  elliptical   EllipticalShape   
                           // #4  radial   RadialShape   
                           // #5  radialShapes   RadialShapes   
                        uint8_t _choice_34 = *(buffer++);
                        
                        if(*_ext_flag_865)
                            _choice_34 += 5 + 1; // Ext addition
                        
                        if(_choice_34 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_1740;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular.push_back(_tmp_1740);
                        
                                // RectangularShape  SEQUENCE
                                    //  centerPoint CartesianPosition3d   OPTIONAL  
                                    //  semiLength  StandardLength12b       
                                    //  semiBreadth StandardLength12b       
                                    //  orientation Wgs84AngleValue       OPTIONAL  
                                    //  height      StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1741;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point.push_back(_tmp_1741);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001380\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_1742;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation.push_back(_tmp_1742);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001381\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1743;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height.push_back(_tmp_1743);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001382\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point.size() != 0) {
                                    // Field name: center_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1744;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate.push_back(_tmp_1744);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001383\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1745 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value = *_tmp_1745;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001384\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1746 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value = *_tmp_1746;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001385\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1747 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_1747;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001386\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1748 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value = *_tmp_1748;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001387\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_breadth
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1749 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value = *_tmp_1749;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001388\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1750 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value = *_tmp_1750;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001389\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1751 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value = *_tmp_1751;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001390\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_34 == 1)  // CHOICE Shape  fieldName(circular)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_1752;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular.push_back(_tmp_1752);
                        
                                // CircularShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  radius              StandardLength12b       
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1753;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point.push_back(_tmp_1753);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001391\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1754;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height.push_back(_tmp_1754);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001392\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1755;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1755);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001393\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1756 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_1756;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001394\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1757 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_1757;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001395\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1758 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1758;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001396\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: radius
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1759 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value = *_tmp_1759;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001397\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].radius.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1760 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value = *_tmp_1760;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001398\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.circular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_34 == 2)  // CHOICE Shape  fieldName(polygonal)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_1761;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal.push_back(_tmp_1761);
                        
                                // PolygonalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                    //  polygon             SequenceOfCartesianPosition3d     
                                    //  height              StandardLength12b               OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1762;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point.push_back(_tmp_1762);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001399\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1763;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height.push_back(_tmp_1763);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001400\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1764;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1764);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001401\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1765 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_1765;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001402\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1766 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_1766;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001403\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1767 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1767;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001404\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: polygon
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_881 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001405\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.: " << int(*_ext_flag_881);
                                }
                                
                                int16_t* _tmp_1768 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_1768;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_1768 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001406\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon. size: " << int(*_tmp_1768);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int o = 0; o < _if__tmp_1768; o++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_o;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements.push_back(seqof_o);
                                
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1769;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate.push_back(_tmp_1769);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001407\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1770 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value = *_tmp_1770;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001408\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1771 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value = *_tmp_1771;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001409\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1772 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value = *_tmp_1772;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001410\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].polygon.elements[o].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1773 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value = *_tmp_1773;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001411\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_34 == 3)  // CHOICE Shape  fieldName(elliptical)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_1774;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical.push_back(_tmp_1774);
                        
                                // EllipticalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  semiMajorAxisLength StandardLength12b       
                                    //  semiMinorAxisLength StandardLength12b       
                                    //  orientation         Wgs84AngleValue       OPTIONAL  
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1775;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point.push_back(_tmp_1775);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001412\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_1776;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation.push_back(_tmp_1776);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001413\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1777;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height.push_back(_tmp_1777);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001414\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1778;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1778);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001415\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1779 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_1779;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001416\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1780 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_1780;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001417\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1781 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1781;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001418\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_major_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1782 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value = *_tmp_1782;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001419\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_minor_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1783 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value = *_tmp_1783;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001420\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1784 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value = *_tmp_1784;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001421\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1785 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value = *_tmp_1785;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001422\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_34 == 4)  // CHOICE Shape  fieldName(radial)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_1786;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial.push_back(_tmp_1786);
                        
                                // RadialShape  SEQUENCE
                                    //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                    //  range                                 StandardLength12b       
                                    //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                    //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                    //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                    //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1787;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point.push_back(_tmp_1787);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001423\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1788;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start.push_back(_tmp_1788);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001424\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1789;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end.push_back(_tmp_1789);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001425\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1790;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1790);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001426\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1791 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_1791;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001427\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1792 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_1792;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001428\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1793 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1793;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001429\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: range
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1794 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value = *_tmp_1794;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001430\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].range.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_start
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1795 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_1795;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001431\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_end
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_1796 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_1796;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001432\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start.size() != 0) {
                                    // Field name: vertical_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1797 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value = *_tmp_1797;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001433\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end.size() != 0) {
                                    // Field name: vertical_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_1798 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value = *_tmp_1798;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001434\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_34 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_1799;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes.push_back(_tmp_1799);
                        
                                // RadialShapes  SEQUENCE
                                    //  refPointId       Identifier1B                 
                                    //  xCoordinate      CartesianCoordinateSmall     
                                    //  yCoordinate      CartesianCoordinateSmall     
                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                    //  radialShapesList RadialShapesList             
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_1800;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate.push_back(_tmp_1800);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001435\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_1801 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_1801;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001436\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: x_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_1802 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value = *_tmp_1802;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001437\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: y_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_1803 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value = *_tmp_1803;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001438\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_1804 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value = *_tmp_1804;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value;
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001439\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0]: " <<
                                                     ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: radial_shapes_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_904 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001440\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_904);
                                }
                                
                                int16_t* _tmp_1805 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_1805;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_1805 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001441\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_1805);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int p = 0; p < _if__tmp_1805; p++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_p;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements.push_back(seqof_p);
                                
                                        // RadialShapeDetails  SEQUENCE
                                            //  range                       StandardLength12b       
                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1806;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start.push_back(_tmp_1806);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001442\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1807;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end.push_back(_tmp_1807);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001443\033[0m| ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end " << tools::green("present");
                                        }
                                        
                                        // Field name: range
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1808 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value = *_tmp_1808;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001444\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].range.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1809 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value = *_tmp_1809;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001445\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1810 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value = *_tmp_1810;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value;
                                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001446\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end: " <<
                                                         ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start.size() != 0) {
                                            // Field name: vertical_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1811 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value = *_tmp_1811;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001447\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end.size() != 0) {
                                            // Field name: vertical_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1812 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value = *_tmp_1812;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value;
                                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001448\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0]: " <<
                                                             ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[p].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                        }
                        else
                        {
                            uint16_t* _tmp_1813 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2 + int(*_tmp_1813);            // Ignoring opentype data
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_1814 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].shadowing_applies.value = (*_tmp_1814 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001449\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].shadowing_applies.: " << (*_tmp_1814);
                        
                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list.size() != 0) {
                            // Field name: sensor_id_list
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(128) span(128)
                            uint8_t* _ext_flag_910 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001450\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].: " << int(*_ext_flag_910);
                            }
                            
                            int16_t* _tmp_1815 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_1815;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_1815 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001451\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0]. size: " << int(*_tmp_1815);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                return false;
                            }
                            
                            
                            for(int q = 0; q < _if__tmp_1815; q++) {
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B seqof_q;  // INTEGER
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements.push_back(seqof_q);
                            
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_1816 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_1816;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements[q].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001452\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements[q].value) << 
                                                 " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements[q].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements[q].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements[q].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].sensor_id_list[0].elements[q].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects.size() != 0) {
                            // Field name: number_of_perceived_objects
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_1817 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_1817;
                            ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001453\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects[0].value) << 
                                             " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].number_of_perceived_objects[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids.size() != 0) {
                            // Field name: perceived_object_ids
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(0) max(255) span(256)
                            uint8_t* _ext_flag_911 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001454\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].: " << int(*_ext_flag_911);
                            }
                            
                            int16_t* _tmp_1818 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_1818;
                            
                            int _if__tmp_1818 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001455\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0]. size: " << int(*_tmp_1818);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                            
                            
                            for(int r = 0; r < _if__tmp_1818; r++) {
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B seqof_r;  // INTEGER
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements.push_back(seqof_r);
                            
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_1819 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_1819;
                                ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements[r].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001456\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements[r].value) << 
                                                 " payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements[r].value: " << ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements[r].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements[r].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perception_region_container[0].elements[n].perceived_object_ids[0].elements[r].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        if(*_ext_flag_863) { // from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n]. 
                            uint8_t* _tmp_1820 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_17[*_tmp_1820];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m001457\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].perception_region_container[0].elements[n].: " << static_cast<unsigned int>(*_tmp_1820);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_1820; i++)
                                _array_17[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_1820; i++) {
                                uint16_t* _tmp_1821 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_1821; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_31 == 4)  // CHOICE WrappedCpmContainer  fieldName(perceived_object_container)
            {
                cpm_v1_23_cpm_perceivedobjectcontainer_msgs::msg::PerceivedObjectContainer _tmp_1822;
                ros->payload.cpm_containers.elements[i].perceived_object_container.push_back(_tmp_1822);
            
                    // PerceivedObjectContainer  SEQUENCE
                        //  numberOfPerceivedObjects CardinalNumber1B     
                        //  perceivedObjects         PerceivedObjects     
                        //  ...
                    uint8_t* _ext_flag_912 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001458\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].: " << int(*_ext_flag_912);
                    }
                    
                    
                    // Field name: number_of_perceived_objects
                    // Integer
                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                    uint8_t* _tmp_1823 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_1823;
                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].number_of_perceived_objects.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001459\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].number_of_perceived_objects.value) << 
                                     " payload.cpm_containers.elements[i].perceived_object_container[0].number_of_perceived_objects.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].number_of_perceived_objects.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    // Field name: perceived_objects
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(255) span(256)
                    uint8_t* _ext_flag_913 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001460\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.: " << int(*_ext_flag_913);
                    }
                    
                    int16_t* _tmp_1824 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_1824;
                    
                    int _if__tmp_1824 = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m001461\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects. size: " << int(*_tmp_1824);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    
                    for(int s = 0; s < _if__tmp_1824; s++) {
                        its_container_v3_etsi_its_cdd_msgs::msg::PerceivedObject seqof_s;  // SEQUENCE
                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements.push_back(seqof_s);
                    
                            // PerceivedObject  SEQUENCE
                                //  objectId                           Identifier2B                                           OPTIONAL  
                                //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                //  position                           CartesianPosition3dWithConfidence                        
                                //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                //  classification                     ObjectClassDescription                                 OPTIONAL  
                                //  mapPosition                        MapPosition                                            OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_914 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001462\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].: " << int(*_ext_flag_914);
                            }
                            
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_1825;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id.push_back(_tmp_1825);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001463\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Velocity3dWithConfidence _tmp_1826;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity.push_back(_tmp_1826);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001464\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Acceleration3dWithConfidence _tmp_1827;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration.push_back(_tmp_1827);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001465\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::EulerAnglesWithConfidence _tmp_1828;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles.push_back(_tmp_1828);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001466\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngularVelocityComponent _tmp_1829;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity.push_back(_tmp_1829);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001467\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrices _tmp_1830;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices.push_back(_tmp_1830);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001468\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_1831;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z.push_back(_tmp_1831);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001469\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_1832;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y.push_back(_tmp_1832);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001470\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_1833;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x.push_back(_tmp_1833);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001471\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::PerceivedObjectDeltaTimeMilliSecondSignedObjectAge _tmp_1834;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age.push_back(_tmp_1834);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001472\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectPerceptionQuality _tmp_1835;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality.push_back(_tmp_1835);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001473\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_1836;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list.push_back(_tmp_1836);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001474\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectClassDescription _tmp_1837;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification.push_back(_tmp_1837);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001475\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::MapPosition _tmp_1838;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position.push_back(_tmp_1838);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001476\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position " << tools::green("present");
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id.size() != 0) {
                                // Field name: object_id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_1839 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_1839;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001477\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id[0].value) << 
                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id[0].value: " << ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id[0].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_id[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                            }
                            
                            // Field name: measurement_delta_time
                            // Real
                            // Float
                            // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                            uint16_t* _tmp_1840 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value = *_tmp_1840;
                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value += -2048;
                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value;
                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value /= 1000.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m001478\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time: " <<
                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].measurement_delta_time.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: position
                                // CartesianPosition3dWithConfidence  SEQUENCE
                                    //  xCoordinate CartesianCoordinateWithConfidence     
                                    //  yCoordinate CartesianCoordinateWithConfidence     
                                    //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateWithConfidence _tmp_1841;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate.push_back(_tmp_1841);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m001479\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: x_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_1842 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value = *_tmp_1842;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001480\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_1843 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value = *_tmp_1843;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001481\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.x_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                // Field name: y_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_1844 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value = *_tmp_1844;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001482\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_1845 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value = *_tmp_1845;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001483\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.y_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        uint32_t* _tmp_1846 = (uint32_t*) buffer; buffer += 4;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value = *_tmp_1846;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value += -131072;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001484\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value: " <<
                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_1847 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value = *_tmp_1847;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001485\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence: " <<
                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].position.z_coordinate[0].confidence.value << " (" << __aux64__ << ")";
                                        }
                                }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity.size() != 0) {
                                // Field name: velocity
                                // Choice
                                   // #0  polarVelocity   VelocityPolarWithZ   
                                   // #1  cartesianVelocity   VelocityCartesian   
                                uint8_t _choice_35 = *(buffer++);
                                
                                if(_choice_35 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::VelocityPolarWithZ _tmp_1848;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity.push_back(_tmp_1848);
                                
                                        // VelocityPolarWithZ  SEQUENCE
                                            //  velocityMagnitude Speed                 
                                            //  velocityDirection CartesianAngle        
                                            //  zVelocity         VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_1849;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity.push_back(_tmp_1849);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001486\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: velocity_magnitude
                                            // Speed  SEQUENCE
                                                //  speedValue      SpeedValue          
                                                //  speedConfidence SpeedConfidence     
                                            
                                            // Field name: speed_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1850 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value = *_tmp_1850;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001487\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: speed_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_1851 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value = *_tmp_1851;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001488\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: velocity_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1852 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value = *_tmp_1852;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001489\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1853 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value = *_tmp_1853;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001490\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].velocity_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1854 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value = *_tmp_1854;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001491\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_1855 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value = *_tmp_1855;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001492\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].polar_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_35 == 1)  // CHOICE Velocity3dWithConfidence  fieldName(cartesian_velocity)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::msg::VelocityCartesian _tmp_1856;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity.push_back(_tmp_1856);
                                
                                        // VelocityCartesian  SEQUENCE
                                            //  xVelocity  VelocityComponent     
                                            //  yVelocity  VelocityComponent     
                                            //  zVelocity  VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_1857;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity.push_back(_tmp_1857);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001493\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: x_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1858 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value = *_tmp_1858;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001494\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_1859 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value = *_tmp_1859;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001495\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].x_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_1860 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value = *_tmp_1860;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001496\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_1861 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value = *_tmp_1861;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001497\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].y_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_1862 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value = *_tmp_1862;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001498\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_1863 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value = *_tmp_1863;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001499\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_35) << ") selected in CHOICE Velocity3dWithConfidence in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].velocity[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration.size() != 0) {
                                // Field name: acceleration
                                // Choice
                                   // #0  polarAcceleration   AccelerationPolarWithZ   
                                   // #1  cartesianAcceleration   AccelerationCartesian   
                                uint8_t _choice_36 = *(buffer++);
                                
                                if(_choice_36 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::AccelerationPolarWithZ _tmp_1864;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration.push_back(_tmp_1864);
                                
                                        // AccelerationPolarWithZ  SEQUENCE
                                            //  accelerationMagnitude AccelerationMagnitude     
                                            //  accelerationDirection CartesianAngle            
                                            //  zAcceleration         AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_1865;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration.push_back(_tmp_1865);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001500\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: acceleration_magnitude
                                            // AccelerationMagnitude  SEQUENCE
                                                //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                //  accelerationConfidence     AccelerationConfidence         
                                            
                                            // Field name: acceleration_magnitude_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1866 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value = *_tmp_1866;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001501\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: acceleration_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1867 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value = *_tmp_1867;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001502\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: acceleration_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1868 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value = *_tmp_1868;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001503\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1869 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value = *_tmp_1869;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001504\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_1870 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value = *_tmp_1870;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001505\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_1871 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value = *_tmp_1871;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001506\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_36 == 1)  // CHOICE Acceleration3dWithConfidence  fieldName(cartesian_acceleration)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::msg::AccelerationCartesian _tmp_1872;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration.push_back(_tmp_1872);
                                
                                        // AccelerationCartesian  SEQUENCE
                                            //  xAcceleration AccelerationComponent     
                                            //  yAcceleration AccelerationComponent     
                                            //  zAcceleration AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_1873;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration.push_back(_tmp_1873);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m001507\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: x_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1874 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value = *_tmp_1874;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001508\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1875 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value = *_tmp_1875;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001509\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1876 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value = *_tmp_1876;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001510\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1877 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value = *_tmp_1877;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001511\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_1878 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value = *_tmp_1878;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001512\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_1879 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value = *_tmp_1879;
                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001513\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_36) << ") selected in CHOICE Acceleration3dWithConfidence in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].acceleration[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles.size() != 0) {
                                // Field name: angles
                                    // EulerAnglesWithConfidence  SEQUENCE
                                        //  zAngle     CartesianAngle     
                                        //  yAngle     CartesianAngle   OPTIONAL  
                                        //  xAngle     CartesianAngle   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_1880;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle.push_back(_tmp_1880);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001514\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_1881;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle.push_back(_tmp_1881);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001515\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle " << tools::green("present");
                                    }
                                    
                                    // Field name: z_angle
                                        // CartesianAngle  SEQUENCE
                                            //  value      CartesianAngleValue     
                                            //  confidence AngleConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_1882 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value = *_tmp_1882;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001516\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value: " <<
                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                        uint8_t* _tmp_1883 = (uint8_t*) buffer++;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value = *_tmp_1883;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001517\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence: " <<
                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].z_angle.confidence.value << " (" << __aux64__ << ")";
                                        }
                                    
                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle.size() != 0) {
                                        // Field name: y_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1884 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value = *_tmp_1884;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001518\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1885 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value = *_tmp_1885;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001519\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].y_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle.size() != 0) {
                                        // Field name: x_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_1886 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value = *_tmp_1886;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001520\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_1887 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value = *_tmp_1887;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001521\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].angles[0].x_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity.size() != 0) {
                                // Field name: z_angular_velocity
                                    // CartesianAngularVelocityComponent  SEQUENCE
                                        //  value      CartesianAngularVelocityComponentValue     
                                        //  confidence AngularSpeedConfidence                     
                                    
                                    // Field name: value
                                    // Integer
                                    // INT16  min(-255) max(256) span(512) datatype(Int16)
                                    uint16_t* _tmp_1888 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_1888;
                                    __aux64__ += -255;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].value.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001522\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].value.value) << 
                                                     " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].value.value: " << ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].value.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-255); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: confidence
                                    // Enumerated
                                    // INT32  min(0) max(7) span(8) datatype(Int32)
                                    uint8_t* _tmp_1889 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1889;
                                    __aux64__ += 0;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].confidence.value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001523\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].confidence.value) << 
                                                     " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].z_angular_velocity[0].confidence.value);
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices.size() != 0) {
                                // Field name: lower_triangular_correlation_matrices
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4)
                                int16_t* _tmp_1890 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_1890;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_1890 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001524\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0]. size: " << int(*_tmp_1890);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int t = 0; t < _if__tmp_1890; t++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrix seqof_t;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements.push_back(seqof_t);
                                
                                        // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                            //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                            //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                        
                                        // Field name: components_included_inthe_matrix
                                        // BitString
                                        // BIT_STRING  min(13) max(13) span(1)
                                        uint8_t* _ext_flag_955 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001525\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.: " << int(*_ext_flag_955);
                                        }
                                        
                                        uint8_t* _tmp_1891 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_1891 + 13;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001526\033[0m| payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.value: " << __aux64__;
                                        
                                        int _if__tmp_1891 = __aux64__;
                                        for(int u = 0; u < _if__tmp_1891; u++) {
                                            uint8_t __c__;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.values[u] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.value' " << (__aux64__) << " is less than allowable (13); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].components_included_inthe_matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: matrix
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(13) span(13)
                                        int16_t* _tmp_1892 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_1892;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_1892 = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001527\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix. size: " << int(*_tmp_1892);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int v = 0; v < _if__tmp_1892; v++) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::CorrelationColumn seqof_v;  // SEQUENCE_OF
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements.push_back(seqof_v);
                                        
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13)
                                            uint8_t* _ext_flag_956 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001528\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].: " << int(*_ext_flag_956);
                                            }
                                            
                                            int16_t* _tmp_1893 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_1893;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_1893 = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001529\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v]. size: " << int(*_tmp_1893);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int w = 0; w < _if__tmp_1893; w++) {
                                                its_container_v3_etsi_its_cdd_msgs::msg::CorrelationCellValue seqof_w;  // INTEGER
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements.push_back(seqof_w);
                                            
                                                // Integer
                                                // INT8  min(-100) max(101) span(202) datatype(Int8)
                                                uint8_t* _tmp_1894 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1894;
                                                __aux64__ += -100;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements[w].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001530\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements[w].value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements[w].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements[w].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -100) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements[w].value' " << (__aux64__) << " is less than allowable (-100); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].lower_triangular_correlation_matrices[0].elements[t].matrix.elements[v].elements[w].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z.size() != 0) {
                                // Field name: object_dimension_z
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1895 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value = *_tmp_1895;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001531\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1896 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value = *_tmp_1896;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001532\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_z[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y.size() != 0) {
                                // Field name: object_dimension_y
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1897 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value = *_tmp_1897;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001533\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1898 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value = *_tmp_1898;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001534\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_y[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x.size() != 0) {
                                // Field name: object_dimension_x
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1899 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value = *_tmp_1899;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001535\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_1900 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value = *_tmp_1900;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001536\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_dimension_x[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age.size() != 0) {
                                // Field name: object_age
                                // Real
                                // Float
                                // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                uint16_t* _tmp_1901 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value = *_tmp_1901;
                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value /= 1000.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001537\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0]: " <<
                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_age[0].value << " (" << __aux64__ << ")";
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality.size() != 0) {
                                // Field name: object_perception_quality
                                // Integer
                                // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                uint8_t* _tmp_1902 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_1902;
                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001538\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality[0].value) << 
                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality[0].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].object_perception_quality[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list.size() != 0) {
                                // Field name: sensor_id_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(128) span(128)
                                uint8_t* _ext_flag_964 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001539\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].: " << int(*_ext_flag_964);
                                }
                                
                                int16_t* _tmp_1903 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_1903;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_1903 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001540\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0]. size: " << int(*_tmp_1903);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int x = 0; x < _if__tmp_1903; x++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B seqof_x;  // INTEGER
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements.push_back(seqof_x);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_1904 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_1904;
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements[x].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001541\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements[x].value) << 
                                                     " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements[x].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements[x].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements[x].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].sensor_id_list[0].elements[x].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification.size() != 0) {
                                // Field name: classification
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(8) span(8)
                                int16_t* _tmp_1905 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_1905;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_1905 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m001542\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0]. size: " << int(*_tmp_1905);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int y = 0; y < _if__tmp_1905; y++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::ObjectClassWithConfidence seqof_y;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements.push_back(seqof_y);
                                
                                        // ObjectClassWithConfidence  SEQUENCE
                                            //  objectClass ObjectClass         
                                            //  confidence  ConfidenceLevel     
                                        
                                        // Field name: object_class
                                        // Choice
                                        uint8_t* _ext_flag_965 = (uint8_t*)buffer++; // ext flag
                                        
                                           // #0  vehicleSubClass   TrafficParticipantType   
                                           // #1  vruSubClass   VruProfileAndSubprofile   
                                           // #2  groupSubClass   VruClusterInformation   
                                           // #3  otherSubClass   OtherSubClass   
                                        uint8_t _choice_37 = *(buffer++);
                                        
                                        if(*_ext_flag_965)
                                            _choice_37 += 3 + 1; // Ext addition
                                        
                                        if(_choice_37 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::TrafficParticipantType _tmp_1906;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class.push_back(_tmp_1906);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_1907 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_1907;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001543\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else if(_choice_37 == 1)  // CHOICE ObjectClass  fieldName(vru_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::VruProfileAndSubprofile _tmp_1908;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class.push_back(_tmp_1908);
                                        
                                            // Choice
                                            uint8_t* _ext_flag_966 = (uint8_t*)buffer++; // ext flag
                                            
                                               // #0  pedestrian   VruSubProfilePedestrian   
                                               // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist   
                                               // #2  motorcyclist   VruSubProfileMotorcyclist   
                                               // #3  animal   VruSubProfileAnimal   
                                            uint8_t _choice_38 = *(buffer++);
                                            
                                            if(*_ext_flag_966)
                                                _choice_38 += 3 + 1; // Ext addition
                                            
                                            if(_choice_38 == 0) {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfilePedestrian _tmp_1909;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian.push_back(_tmp_1909);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_1910 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1910;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001544\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].pedestrian[0].value);
                                                }
                                            }
                                            else if(_choice_38 == 1)  // CHOICE VruProfileAndSubprofile  fieldName(bicyclist_and_light_vru_vehicle)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileBicyclist _tmp_1911;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.push_back(_tmp_1911);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_1912 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1912;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001545\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                }
                                            }
                                            else if(_choice_38 == 2)  // CHOICE VruProfileAndSubprofile  fieldName(motorcyclist)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileMotorcyclist _tmp_1913;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist.push_back(_tmp_1913);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_1914 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1914;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001546\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                }
                                            }
                                            else if(_choice_38 == 3)  // CHOICE VruProfileAndSubprofile  fieldName(animal)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileAnimal _tmp_1915;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal.push_back(_tmp_1915);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_1916 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1916;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001547\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal[0].value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.vru_sub_class[0].animal[0].value);
                                                }
                                            }
                                            else
                                            {
                                                uint16_t* _tmp_1917 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2 + int(*_tmp_1917);            // Ignoring opentype data
                                            }
                                        }
                                        else if(_choice_37 == 2)  // CHOICE ObjectClass  fieldName(group_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::VruClusterInformation _tmp_1918;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class.push_back(_tmp_1918);
                                        
                                                // VruClusterInformation  SEQUENCE
                                                    //  clusterId               Identifier1B         OPTIONAL  
                                                    //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                    //  clusterCardinalitySize  CardinalNumber1B       
                                                    //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_971 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001548\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].: " << int(*_ext_flag_971);
                                                }
                                                
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_1919;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id.push_back(_tmp_1919);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001549\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Shape _tmp_1920;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape.push_back(_tmp_1920);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001550\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::VruClusterProfiles _tmp_1921;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles.push_back(_tmp_1921);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001551\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                    // Field name: cluster_id
                                                    // Integer
                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                    uint8_t* _tmp_1922 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_1922;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m001552\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                     " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                    // Field name: cluster_bounding_box_shape
                                                    // Choice
                                                    uint8_t* _ext_flag_972 = (uint8_t*)buffer++; // ext flag
                                                    
                                                       // #0  rectangular   RectangularShape   
                                                       // #1  circular   CircularShape   
                                                       // #2  polygonal   PolygonalShape   
                                                       // #3  elliptical   EllipticalShape   
                                                       // #4  radial   RadialShape   
                                                       // #5  radialShapes   RadialShapes   
                                                    uint8_t _choice_39 = *(buffer++);
                                                    
                                                    if(*_ext_flag_972)
                                                        _choice_39 += 5 + 1; // Ext addition
                                                    
                                                    if(_choice_39 == 0) {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_1923;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.push_back(_tmp_1923);
                                                    
                                                            // RectangularShape  SEQUENCE
                                                                //  centerPoint CartesianPosition3d   OPTIONAL  
                                                                //  semiLength  StandardLength12b       
                                                                //  semiBreadth StandardLength12b       
                                                                //  orientation Wgs84AngleValue       OPTIONAL  
                                                                //  height      StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1924;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.push_back(_tmp_1924);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001553\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_1925;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.push_back(_tmp_1925);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001554\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1926;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.push_back(_tmp_1926);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001555\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.size() != 0) {
                                                                // Field name: center_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1927;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_1927);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001556\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1928 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_1928;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001557\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1929 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_1929;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001558\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1930 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_1930;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001559\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1931 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value = *_tmp_1931;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001560\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_breadth
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1932 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value = *_tmp_1932;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001561\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1933 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value = *_tmp_1933;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001562\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1934 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value = *_tmp_1934;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001563\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_39 == 1)  // CHOICE Shape  fieldName(circular)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_1935;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.push_back(_tmp_1935);
                                                    
                                                            // CircularShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  radius              StandardLength12b       
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1936;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.push_back(_tmp_1936);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001564\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1937;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.push_back(_tmp_1937);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001565\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1938;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1938);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001566\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1939 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_1939;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001567\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1940 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_1940;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001568\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1941 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1941;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001569\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: radius
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1942 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value = *_tmp_1942;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001570\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1943 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value = *_tmp_1943;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001571\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_39 == 2)  // CHOICE Shape  fieldName(polygonal)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_1944;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.push_back(_tmp_1944);
                                                    
                                                            // PolygonalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                //  polygon             SequenceOfCartesianPosition3d     
                                                                //  height              StandardLength12b               OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1945;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_1945);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001572\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1946;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.push_back(_tmp_1946);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001573\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1947;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1947);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001574\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1948 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_1948;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001575\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1949 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_1949;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001576\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1950 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1950;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001577\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: polygon
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_988 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001578\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_988);
                                                            }
                                                            
                                                            int16_t* _tmp_1951 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_1951;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_1951 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001579\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon. size: " << int(*_tmp_1951);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int z = 0; z < _if__tmp_1951; z++) {
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_z;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.push_back(seqof_z);
                                                            
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1952;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate.push_back(_tmp_1952);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001580\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1953 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value = *_tmp_1953;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001581\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1954 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value = *_tmp_1954;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001582\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1955 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value = *_tmp_1955;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001583\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[z].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1956 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value = *_tmp_1956;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001584\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_39 == 3)  // CHOICE Shape  fieldName(elliptical)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_1957;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.push_back(_tmp_1957);
                                                    
                                                            // EllipticalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  semiMajorAxisLength StandardLength12b       
                                                                //  semiMinorAxisLength StandardLength12b       
                                                                //  orientation         Wgs84AngleValue       OPTIONAL  
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1958;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_1958);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001585\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_1959;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.push_back(_tmp_1959);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001586\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_1960;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.push_back(_tmp_1960);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001587\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1961;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1961);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001588\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1962 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_1962;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001589\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1963 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_1963;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001590\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1964 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1964;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001591\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_major_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1965 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_1965;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001592\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_minor_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1966 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_1966;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001593\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1967 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value = *_tmp_1967;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001594\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1968 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value = *_tmp_1968;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001595\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_39 == 4)  // CHOICE Shape  fieldName(radial)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_1969;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.push_back(_tmp_1969);
                                                    
                                                            // RadialShape  SEQUENCE
                                                                //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                                                //  range                                 StandardLength12b       
                                                                //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                                                //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                                                //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                                                //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_1970;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.push_back(_tmp_1970);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001596\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1971;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_1971);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001597\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1972;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_1972);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001598\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_1973;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_1973);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001599\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1974 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_1974;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001600\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_1975 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_1975;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001601\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_1976 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_1976;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001602\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: range
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1977 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value = *_tmp_1977;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001603\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_start
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1978 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_1978;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001604\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_end
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_1979 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_1979;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001605\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                // Field name: vertical_opening_angle_start
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1980 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_1980;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001606\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                // Field name: vertical_opening_angle_end
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_1981 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_1981;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001607\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_39 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_1982;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.push_back(_tmp_1982);
                                                    
                                                            // RadialShapes  SEQUENCE
                                                                //  refPointId       Identifier1B                 
                                                                //  xCoordinate      CartesianCoordinateSmall     
                                                                //  yCoordinate      CartesianCoordinateSmall     
                                                                //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                //  radialShapesList RadialShapesList             
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_1983;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_1983);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m001608\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                                            }
                                                            
                                                            // Field name: ref_point_id
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_1984 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_1984;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001609\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                             " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            // Field name: x_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_1985 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_1985;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001610\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: y_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_1986 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_1986;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001611\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                // Field name: z_coordinate
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                uint16_t* _tmp_1987 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_1987;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                                                __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m001612\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            // Field name: radial_shapes_list
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_1011 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001613\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_1011);
                                                            }
                                                            
                                                            int16_t* _tmp_1988 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_1988;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_1988 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m001614\033[0m| SequenceOf ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_1988);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int a = 0; a < _if__tmp_1988; a++) {
                                                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_a;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_a);
                                                            
                                                                    // RadialShapeDetails  SEQUENCE
                                                                        //  range                       StandardLength12b       
                                                                        //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                        //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                        //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                        //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1989;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start.push_back(_tmp_1989);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001615\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_1990;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end.push_back(_tmp_1990);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m001616\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: range
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1991 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value = *_tmp_1991;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001617\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].range.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_start
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1992 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value = *_tmp_1992;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001618\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_end
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_1993 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value = *_tmp_1993;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value;
                                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m001619\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end: " <<
                                                                                     ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start.size() != 0) {
                                                                        // Field name: vertical_opening_angle_start
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1994 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value = *_tmp_1994;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001620\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end.size() != 0) {
                                                                        // Field name: vertical_opening_angle_end
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_1995 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value = *_tmp_1995;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value;
                                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m001621\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[a].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                    }
                                                    else
                                                    {
                                                        uint16_t* _tmp_1996 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2 + int(*_tmp_1996);            // Ignoring opentype data
                                                    }
                                                }
                                                
                                                // Field name: cluster_cardinality_size
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_1997 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_1997;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_cardinality_size.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001622\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                    // Field name: cluster_profiles
                                                    // BitString
                                                    // BIT_STRING  min(4) max(4) span(1)
                                                    uint8_t* _tmp_1998 = (uint8_t*)buffer;
                                                    __aux64__ = *_tmp_1998 + 4;
                                                    buffer += 1;
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001623\033[0m| payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles[0].value: " << __aux64__;
                                                    
                                                    int _if__tmp_1998 = __aux64__;
                                                    for(int b = 0; b < _if__tmp_1998; b++) {
                                                        uint8_t __c__;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles[0].values.push_back(__c__);
                                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles[0].values[b] = (*__b__ == 1);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " is less than allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                if(*_ext_flag_971) { // from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0]. 
                                                    uint8_t* _tmp_1999 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_18[*_tmp_1999];
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001624\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.group_sub_class[0].: " << static_cast<unsigned int>(*_tmp_1999);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_1999; i++)
                                                        _array_18[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_1999; i++) {
                                                        uint16_t* _tmp_2000 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_2000; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                        }
                                        else if(_choice_37 == 3)  // CHOICE ObjectClass  fieldName(other_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::OtherSubClass _tmp_2001;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class.push_back(_tmp_2001);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_2002 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_2002;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001625\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].object_class.other_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else
                                        {
                                            uint16_t* _tmp_2003 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2 + int(*_tmp_2003);            // Ignoring opentype data
                                        }
                                        
                                        // Field name: confidence
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_2004 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_2004;
                                        __aux64__ += 1;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].confidence.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001626\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].confidence.value) << 
                                                         " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].confidence.value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].classification[0].elements[y].confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position.size() != 0) {
                                // Field name: map_position
                                    // MapPosition  SEQUENCE
                                        //  mapReference             MapReference               OPTIONAL  
                                        //  laneId                   Identifier1B               OPTIONAL  
                                        //  connectionId             Identifier1B               OPTIONAL  
                                        //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_1017 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m001627\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].: " << int(*_ext_flag_1017);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::MapReference _tmp_2005;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference.push_back(_tmp_2005);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001628\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_2006;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id.push_back(_tmp_2006);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001629\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_2007;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id.push_back(_tmp_2007);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001630\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::LongitudinalLanePosition _tmp_2008;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position.push_back(_tmp_2008);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001631\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference.size() != 0) {
                                        // Field name: map_reference
                                        // Choice
                                           // #0  roadsegment   RoadSegmentReferenceId   
                                           // #1  intersection   IntersectionReferenceId   
                                        uint8_t _choice_40 = *(buffer++);
                                        
                                        if(_choice_40 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_2009;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment.push_back(_tmp_2009);
                                        
                                                // RoadSegmentReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_2010;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region.push_back(_tmp_2010);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001632\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_2011 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_2011;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m001633\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_2012 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_2012;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001634\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else if(_choice_40 == 1)  // CHOICE MapReference  fieldName(intersection)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_2013;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection.push_back(_tmp_2013);
                                        
                                                // IntersectionReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_2014;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region.push_back(_tmp_2014);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m001635\033[0m| ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_2015 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_2015;
                                                    ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m001636\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_2016 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_2016;
                                                ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m001637\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                 " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_40) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].map_reference[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id.size() != 0) {
                                        // Field name: lane_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_2017 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_2017;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001638\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id[0].value) << 
                                                         " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id.size() != 0) {
                                        // Field name: connection_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_2018 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_2018;
                                        ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m001639\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id[0].value) << 
                                                         " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position.size() != 0) {
                                        // Field name: longitudinal_lane_position
                                            // LongitudinalLanePosition  SEQUENCE
                                                //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                            
                                            // Field name: longitudinal_lane_position_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_2019 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_2019;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001640\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: longitudinal_lane_position_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_2020 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_2020;
                                            __aux64__ = ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                            ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m001641\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                             ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    if(*_ext_flag_1017) { // from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0]. 
                                        uint8_t* _tmp_2021 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_19[*_tmp_2021];
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m001642\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].map_position[0].: " << static_cast<unsigned int>(*_tmp_2021);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_2021; i++)
                                            _array_19[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_2021; i++) {
                                            uint16_t* _tmp_2022 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_2022; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                            if(*_ext_flag_914) { // from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s]. 
                                uint8_t* _tmp_2023 = (uint8_t*) buffer++;  // number of extensions
                                bool _array_20[*_tmp_2023];
                                
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m001643\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].perceived_object_container[0].perceived_objects.elements[s].: " << static_cast<unsigned int>(*_tmp_2023);
                                
                                // Extensions bytemap
                                for(int i = 0; i < *_tmp_2023; i++)
                                    _array_20[i] = (*buffer++) != 0;
                                
                                // Discarding unknown OpenType containers
                                for(int i = 0; i < *_tmp_2023; i++) {
                                    uint16_t* _tmp_2024 = (uint16_t*)buffer;  // OpenType length
                                    buffer += 2;
                                
                                    if(debug) {
                                    }
                                
                                    for(int i = 0; i < *_tmp_2024; i++)
                                        buffer++;
                                }
                                
                            }
                    }
                    if(*_ext_flag_912) { // from ros->payload.cpm_containers.elements[i].perceived_object_container[0]. 
                        uint8_t* _tmp_2025 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_21[*_tmp_2025];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m001644\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[i].perceived_object_container[0].: " << static_cast<unsigned int>(*_tmp_2025);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_2025; i++)
                            _array_21[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_2025; i++) {
                            uint16_t* _tmp_2026 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_2026; i++)
                                buffer++;
                        }
                        
                    }
            }
            else
            {
                logger->warning() << "Wrong option (" << static_cast<int>(_choice_31) << ") selected in CHOICE WrappedCpmContainer in 'payload.cpm_containers.elements[i]'; message dropped.";
                return false;
            }
        }
        if(*_ext_flag_787) { // from ros->payload. 
            uint8_t* _tmp_2027 = (uint8_t*) buffer++;  // number of extensions
            bool _array_22[*_tmp_2027];
            
            if(debug)
                logger->debug() << "|\033[38;5;94m001645\033[0m| Reading number of exts from ros->payload.: " << static_cast<unsigned int>(*_tmp_2027);
            
            // Extensions bytemap
            for(int i = 0; i < *_tmp_2027; i++)
                _array_22[i] = (*buffer++) != 0;
            
            // Discarding unknown OpenType containers
            for(int i = 0; i < *_tmp_2027; i++) {
                uint16_t* _tmp_2028 = (uint16_t*)buffer;  // OpenType length
                buffer += 2;
            
                if(debug) {
                }
            
                for(int i = 0; i < *_tmp_2028; i++)
                    buffer++;
            }
            
        }
	
	        return true;
        }
    }
}