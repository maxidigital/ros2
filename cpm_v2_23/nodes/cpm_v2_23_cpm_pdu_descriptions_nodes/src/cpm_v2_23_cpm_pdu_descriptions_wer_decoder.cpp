/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:cpm_v2_23:1.0
 * 
 * Module: CPM_PDU_Descriptions {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) ts(103324) cpm(1) major-version-1(1) minor-version-1(1)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <cpm_v2_23_cpm_pdu_descriptions_wer_decoder.h>


/**
 *
 */
namespace wind
{
    namespace decoder_cpm_v2_23_cpm_pdu_descriptions
    {        
        
        #if WIND_ROS_VERSION == 1
          bool WerDecoder::decode(cpm_v2_23_cpm_pdu_descriptions_msgs::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #else
          bool WerDecoder::decode(cpm_v2_23_cpm_pdu_descriptions_msgs::msg::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #endif
        {
            const uint8_t *start = buffer;
            int64_t __aux64__;
	
    // CollectivePerceptionMessage  SEQUENCE
        //  its_header ItsPduHeader     
        //  payload    CpmPayload       
    
    // Field name: its_header
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        
        // Field name: protocol_version
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_9884 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_9884;
        ros->its_header.protocol_version.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m008700\033[0m| " << tools::getTypeName(ros->its_header.protocol_version.value) << 
                         " its_header.protocol_version.value: " << static_cast<int>(ros->its_header.protocol_version.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: message_id
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_9885 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_9885;
        ros->its_header.message_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m008701\033[0m| " << tools::getTypeName(ros->its_header.message_id.value) << 
                         " its_header.message_id.value: " << static_cast<int>(ros->its_header.message_id.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->warning() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: station_id
        // Integer
        // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
        uint32_t* _tmp_9886 = (uint32_t*) buffer; buffer += 4;
        __aux64__ = *_tmp_9886;
        ros->its_header.station_id.value = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m008702\033[0m| " << tools::getTypeName(ros->its_header.station_id.value) << 
                         " its_header.station_id.value: " << ros->its_header.station_id.value;
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->warning() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
            return false;
        }
    
    // Field name: payload
        // CpmPayload  SEQUENCE
            //  managementContainer ManagementContainer                
            //  cpmContainers       ConstraintWrappedCpmContainers     
            //  ...
        uint8_t* _ext_flag_4450 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m008703\033[0m| Reading ext flag from ros->payload.: " << int(*_ext_flag_4450);
        }
        
        
        // Field name: management_container
            // ManagementContainer  SEQUENCE
                //  referenceTime     TimestampIts                
                //  referencePosition ReferencePosition           
                //  segmentationInfo  MessageSegmentationInfo   OPTIONAL  
                //  messageRateRange  MessageRateRange          OPTIONAL  
                //  ...
            uint8_t* _ext_flag_4451 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.management_container.
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m008704\033[0m| Reading ext flag from ros->payload.management_container.: " << int(*_ext_flag_4451);
            }
            
            if(*(buffer++)) { 
                its_container_v3_etsi_its_cdd_msgs::msg::MessageSegmentationInfo _tmp_9887;
                ros->payload.management_container.segmentation_info.push_back(_tmp_9887);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m008705\033[0m| ros->payload.management_container.segmentation_info " << tools::green("present");
            }
            if(*(buffer++)) { 
                cpm_v2_23_cpm_pdu_descriptions_msgs::msg::MessageRateRange _tmp_9888;
                ros->payload.management_container.message_rate_range.push_back(_tmp_9888);
            
                if(debug)
                    logger->debug() << "|\033[38;5;94m008706\033[0m| ros->payload.management_container.message_rate_range " << tools::green("present");
            }
            
            // Field name: reference_time
            // Real
            // Float
            // FLOAT  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Float)
            uint64_t* _tmp_9889 = (uint64_t*)buffer; buffer += 8;
            ros->payload.management_container.reference_time.value = *_tmp_9889;
            __aux64__ = ros->payload.management_container.reference_time.value;
            ros->payload.management_container.reference_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->warning() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->debug() << "|\033[38;5;94m008707\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_time.value) << " payload.management_container.reference_time: " <<
                             ros->payload.management_container.reference_time.value << " (" << __aux64__ << ")";
            }
            
            // Field name: reference_position
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                
                // Field name: latitude
                // Real
                // Double
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_9890 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.latitude.value = *_tmp_9890;
                ros->payload.management_container.reference_position.latitude.value += -900000000;
                __aux64__ = ros->payload.management_container.reference_position.latitude.value;
                ros->payload.management_container.reference_position.latitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008708\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.latitude.value) << " payload.management_container.reference_position.latitude: " <<
                                 ros->payload.management_container.reference_position.latitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: longitude
                // Real
                // Double
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_9891 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.longitude.value = *_tmp_9891;
                ros->payload.management_container.reference_position.longitude.value += -1800000000;
                __aux64__ = ros->payload.management_container.reference_position.longitude.value;
                ros->payload.management_container.reference_position.longitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->warning() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008709\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.longitude.value) << " payload.management_container.reference_position.longitude: " <<
                                 ros->payload.management_container.reference_position.longitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: position_confidence_ellipse
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    
                    // Field name: semi_major_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_9892 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value = *_tmp_9892;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008710\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_minor_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_9893 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value = *_tmp_9893;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008711\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_major_orientation
                    // Integer
                    // UINT16  min(0) max(3601) span(3602) datatype(UInt16)
                    uint16_t* _tmp_9894 = (uint16_t*) buffer; buffer += 2;
                    __aux64__ = *_tmp_9894;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008712\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                        return false;
                    }
                
                // Field name: altitude
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    
                    // Field name: altitude_value
                    // Real
                    // Float
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    uint32_t* _tmp_9895 = (uint32_t*) buffer; buffer += 4;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value = *_tmp_9895;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value += -100000;
                    __aux64__ = ros->payload.management_container.reference_position.altitude.altitude_value.value;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008713\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_value.value) << " payload.management_container.reference_position.altitude.altitude_value: " <<
                                     ros->payload.management_container.reference_position.altitude.altitude_value.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: altitude_confidence
                    // Enumerated
                    // INT32  min(0) max(15) span(16) datatype(Int32)
                    uint8_t* _tmp_9896 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_9896;
                    __aux64__ += 0;
                    ros->payload.management_container.reference_position.altitude.altitude_confidence.value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->warning() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008714\033[0m| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_confidence.value) << 
                                     " payload.management_container.reference_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->payload.management_container.reference_position.altitude.altitude_confidence.value);
                    }
            
            if(ros->payload.management_container.segmentation_info.size() != 0) {
                // Field name: segmentation_info
                    // MessageSegmentationInfo  SEQUENCE
                        //  totalMsgNo CardinalNumber3b     
                        //  thisMsgNo  OrdinalNumber3b      
                    
                    // Field name: total_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_9897 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_9897;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].total_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008715\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].total_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].total_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].total_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
                    
                    // Field name: this_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_9898 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_9898;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].this_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008716\033[0m| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].this_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].this_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].this_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->warning() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
            }
            
            if(ros->payload.management_container.message_rate_range.size() != 0) {
                // Field name: message_rate_range
                    // MessageRateRange  SEQUENCE
                        //  messageRateMin MessageRateHz     
                        //  messageRateMax MessageRateHz     
                    
                    // Field name: message_rate_min
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_9899 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9899;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008717\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_9900 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9900;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008718\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
                    
                    // Field name: message_rate_max
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_9901 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9901;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008719\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_9902 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9902;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008720\033[0m| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->warning() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
            }
            if(*_ext_flag_4451) { // from ros->payload.management_container. 
                uint8_t* _tmp_9903 = (uint8_t*) buffer++;  // number of extensions
                bool _array_116[*_tmp_9903];
                
                if(debug)
                    logger->debug() << "|\033[38;5;94m008721\033[0m| Reading number of exts from ros->payload.management_container.: " << static_cast<unsigned int>(*_tmp_9903);
                
                // Extensions bytemap
                for(int i = 0; i < *_tmp_9903; i++)
                    _array_116[i] = (*buffer++) != 0;
                
                // Discarding unknown OpenType containers
                for(int i = 0; i < *_tmp_9903; i++) {
                    uint16_t* _tmp_9904 = (uint16_t*)buffer;  // OpenType length
                    buffer += 2;
                
                    if(debug) {
                    }
                
                    for(int i = 0; i < *_tmp_9904; i++)
                        buffer++;
                }
                
            }
        
        // Field name: cpm_containers
        // SequenceOf
        // Data Type UInt8
        // SEQUENCE_OF  min(1) max(8) span(8)
        int16_t* _tmp_9905 = (int16_t*)buffer;
        buffer += 2;
        __aux64__ = *_tmp_9905;
        __aux64__ += 1;     // +min
        
        int _if__tmp_9905 = __aux64__;
        
        if(debug) {
            logger->debug() << "|\033[38;5;94m008722\033[0m| SequenceOf ros->payload.cpm_containers. size: " << int(*_tmp_9905);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 1) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 8) {
            logger->warning() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
            return false;
        }
        
        
        for(int s = 0; s < _if__tmp_9905; s++) {
            cpm_v2_23_cpm_pdu_descriptions_msgs::msg::WrappedCpmContainer seqof_s;  // CHOICE
            ros->payload.cpm_containers.elements.push_back(seqof_s);
        
            // Choice
               // #0  originatingVehicleContainer   OriginatingVehicleContainer   
               // #1  originatingRsuContainer   OriginatingRsuContainer   
               // #2  sensorInformationContainer   SensorInformationContainer   
               // #3  perceptionRegionContainer   PerceptionRegionContainer   
               // #4  perceivedObjectContainer   PerceivedObjectContainer   
            uint8_t _choice_307 = *(buffer++);
            
            if(_choice_307 == 0) {
                cpm_v2_23_cpm_originatingstationcontainers_msgs::msg::OriginatingVehicleContainer _tmp_9906;
                ros->payload.cpm_containers.elements[s].originating_vehicle_container.push_back(_tmp_9906);
            
                    // OriginatingVehicleContainer  SEQUENCE
                        //  orientationAngle Wgs84Angle         
                        //  pitchAngle       CartesianAngle   OPTIONAL  
                        //  rollAngle        CartesianAngle   OPTIONAL  
                        //  trailerDataSet   TrailerDataSet   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_4460 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008723\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].: " << int(*_ext_flag_4460);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_9907;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle.push_back(_tmp_9907);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008724\033[0m| ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_9908;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle.push_back(_tmp_9908);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008725\033[0m| ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        cpm_v2_23_cpm_originatingstationcontainers_msgs::msg::TrailerDataSet _tmp_9909;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set.push_back(_tmp_9909);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008726\033[0m| ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set " << tools::green("present");
                    }
                    
                    // Field name: orientation_angle
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        
                        // Field name: value
                        // Real
                        // Float
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        uint16_t* _tmp_9910 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value = *_tmp_9910;
                        __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008727\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value: " <<
                                         ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_9911 = (uint8_t*) buffer++;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value = *_tmp_9911;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value += 1;
                        __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value;
                        ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008728\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence: " <<
                                         ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].orientation_angle.confidence.value << " (" << __aux64__ << ")";
                        }
                    
                    if(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle.size() != 0) {
                        // Field name: pitch_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_9912 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value = *_tmp_9912;
                            __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008729\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_9913 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value = *_tmp_9913;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008730\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].pitch_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle.size() != 0) {
                        // Field name: roll_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_9914 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value = *_tmp_9914;
                            __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008731\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_9915 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value = *_tmp_9915;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008732\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].roll_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set.size() != 0) {
                        // Field name: trailer_data_set
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8)
                        uint8_t* _ext_flag_4467 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008733\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].: " << int(*_ext_flag_4467);
                        }
                        
                        int16_t* _tmp_9916 = (int16_t*)buffer;
                        buffer += 2;
                        __aux64__ = *_tmp_9916;
                        __aux64__ += 1;     // +min
                        
                        int _if__tmp_9916 = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008734\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0]. size: " << int(*_tmp_9916);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                            return false;
                        }
                        
                        
                        for(int t = 0; t < _if__tmp_9916; t++) {
                            its_container_v3_etsi_its_cdd_msgs::msg::TrailerData seqof_t;  // SEQUENCE
                            ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements.push_back(seqof_t);
                        
                                // TrailerData  SEQUENCE
                                    //  refPointId       Identifier1B         
                                    //  hitchPointOffset StandardLength1B     
                                    //  frontOverhang    StandardLength1B   OPTIONAL  
                                    //  rearOverhang     StandardLength1B   OPTIONAL  
                                    //  trailerWidth     VehicleWidth       OPTIONAL  
                                    //  hitchAngle       CartesianAngle       
                                    //  ...
                                uint8_t* _ext_flag_4468 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008735\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].: " << int(*_ext_flag_4468);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength1B _tmp_9917;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang.push_back(_tmp_9917);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008736\033[0m| ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength1B _tmp_9918;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang.push_back(_tmp_9918);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008737\033[0m| ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::VehicleWidth _tmp_9919;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width.push_back(_tmp_9919);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008738\033[0m| ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_9920 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_9920;
                                ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008739\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: hitch_point_offset
                                // Real
                                // Float
                                // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                uint8_t* _tmp_9921 = (uint8_t*) buffer++;
                                ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value = *_tmp_9921;
                                __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value;
                                ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008740\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset: " <<
                                                 ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_point_offset.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang.size() != 0) {
                                    // Field name: front_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9922 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value = *_tmp_9922;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008741\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].front_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang.size() != 0) {
                                    // Field name: rear_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9923 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value = *_tmp_9923;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008742\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].rear_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width.size() != 0) {
                                    // Field name: trailer_width
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(62) span(62) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9924 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value = *_tmp_9924;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 62) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value' " << (__aux64__) << " exceeds max allowable (62); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008743\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].trailer_width[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: hitch_angle
                                    // CartesianAngle  SEQUENCE
                                        //  value      CartesianAngleValue     
                                        //  confidence AngleConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9925 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value = *_tmp_9925;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008744\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value: " <<
                                                     ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_9926 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value = *_tmp_9926;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value;
                                    ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008745\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value) << " payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence: " <<
                                                     ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].hitch_angle.confidence.value << " (" << __aux64__ << ")";
                                    }
                                if(*_ext_flag_4468) { // from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t]. 
                                    uint8_t* _tmp_9927 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_117[*_tmp_9927];
                                    
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008746\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].trailer_data_set[0].elements[t].: " << static_cast<unsigned int>(*_tmp_9927);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_9927; i++)
                                        _array_117[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_9927; i++) {
                                        uint16_t* _tmp_9928 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_9928; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                    }
                    if(*_ext_flag_4460) { // from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0]. 
                        uint8_t* _tmp_9929 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_118[*_tmp_9929];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008747\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].originating_vehicle_container[0].: " << static_cast<unsigned int>(*_tmp_9929);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_9929; i++)
                            _array_118[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_9929; i++) {
                            uint16_t* _tmp_9930 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_9930; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_307 == 1)  // CHOICE WrappedCpmContainer  fieldName(originating_rsu_container)
            {
                cpm_v2_23_cpm_originatingstationcontainers_msgs::msg::OriginatingRsuContainer _tmp_9931;
                ros->payload.cpm_containers.elements[s].originating_rsu_container.push_back(_tmp_9931);
            
                    // OriginatingRsuContainer  SEQUENCE
                        //  mapReference MapReference   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_4475 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].originating_rsu_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008748\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].originating_rsu_container[0].: " << int(*_ext_flag_4475);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::MapReference _tmp_9932;
                        ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference.push_back(_tmp_9932);
                    
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008749\033[0m| ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference " << tools::green("present");
                    }
                    
                    if(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference.size() != 0) {
                        // Field name: map_reference
                        // Choice
                           // #0  roadsegment   RoadSegmentReferenceId   
                           // #1  intersection   IntersectionReferenceId   
                        uint8_t _choice_308 = *(buffer++);
                        
                        if(_choice_308 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_9933;
                            ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment.push_back(_tmp_9933);
                        
                                // RoadSegmentReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_9934;
                                    ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region.push_back(_tmp_9934);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008750\033[0m| ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_9935 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_9935;
                                    ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008751\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_9936 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_9936;
                                ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008752\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value) << 
                                                 " payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else if(_choice_308 == 1)  // CHOICE MapReference  fieldName(intersection)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_9937;
                            ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection.push_back(_tmp_9937);
                        
                                // IntersectionReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_9938;
                                    ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region.push_back(_tmp_9938);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008753\033[0m| ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_9939 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_9939;
                                    ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008754\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_9940 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_9940;
                                ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008755\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].id.value) << 
                                                 " payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_308) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[s].originating_rsu_container[0].map_reference[0]'; message dropped.";
                            return false;
                        }
                    }
                    if(*_ext_flag_4475) { // from ros->payload.cpm_containers.elements[s].originating_rsu_container[0]. 
                        uint8_t* _tmp_9941 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_119[*_tmp_9941];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008756\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].originating_rsu_container[0].: " << static_cast<unsigned int>(*_tmp_9941);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_9941; i++)
                            _array_119[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_9941; i++) {
                            uint16_t* _tmp_9942 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_9942; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_307 == 2)  // CHOICE WrappedCpmContainer  fieldName(sensor_information_container)
            {
                cpm_v2_23_cpm_sensorinformationcontainer_msgs::msg::SensorInformationContainer _tmp_9943;
                ros->payload.cpm_containers.elements[s].sensor_information_container.push_back(_tmp_9943);
            
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(128) span(128)
                uint8_t* _ext_flag_4477 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008757\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].: " << int(*_ext_flag_4477);
                }
                
                int16_t* _tmp_9944 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_9944;
                __aux64__ += 1;     // +min
                
                int _if__tmp_9944 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008758\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].sensor_information_container[0]. size: " << int(*_tmp_9944);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                    return false;
                }
                
                
                for(int u = 0; u < _if__tmp_9944; u++) {
                    cpm_v2_23_cpm_sensorinformationcontainer_msgs::msg::SensorInformation seqof_u;  // SEQUENCE
                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements.push_back(seqof_u);
                
                        // SensorInformation  SEQUENCE
                            //  sensorId                   Identifier1B                           
                            //  sensorType                 SensorType                             
                            //  perceptionRegionShape      Shape                                OPTIONAL  
                            //  perceptionRegionConfidence ConfidenceLevel                      OPTIONAL  
                            //  shadowingApplies           SensorInformation_shadowingApplies     
                            //  ...
                        uint8_t* _ext_flag_4478 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008759\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].: " << int(*_ext_flag_4478);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::Shape _tmp_9945;
                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape.push_back(_tmp_9945);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008760\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::ConfidenceLevel _tmp_9946;
                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence.push_back(_tmp_9946);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008761\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence " << tools::green("present");
                        }
                        
                        // Field name: sensor_id
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_9947 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9947;
                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_id.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008762\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_id.value) << 
                                         " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_id.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                        
                        // Field name: sensor_type
                        // Integer
                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                        uint8_t* _tmp_9948 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_9948;
                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_type.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008763\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_type.value) << 
                                         " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_type.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_type.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].sensor_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                            return false;
                        }
                        
                        if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape.size() != 0) {
                            // Field name: perception_region_shape
                            // Choice
                            uint8_t* _ext_flag_4479 = (uint8_t*)buffer++; // ext flag
                            
                               // #0  rectangular   RectangularShape   
                               // #1  circular   CircularShape   
                               // #2  polygonal   PolygonalShape   
                               // #3  elliptical   EllipticalShape   
                               // #4  radial   RadialShape   
                               // #5  radialShapes   RadialShapes   
                            uint8_t _choice_309 = *(buffer++);
                            
                            if(*_ext_flag_4479)
                                _choice_309 += 5 + 1; // Ext addition
                            
                            if(_choice_309 == 0) {
                                its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_9949;
                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular.push_back(_tmp_9949);
                            
                                    // RectangularShape  SEQUENCE
                                        //  centerPoint CartesianPosition3d   OPTIONAL  
                                        //  semiLength  StandardLength12b       
                                        //  semiBreadth StandardLength12b       
                                        //  orientation Wgs84AngleValue       OPTIONAL  
                                        //  height      StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_9950;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point.push_back(_tmp_9950);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008764\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_9951;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation.push_back(_tmp_9951);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008765\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_9952;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height.push_back(_tmp_9952);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008766\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point.size() != 0) {
                                        // Field name: center_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_9953;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_9953);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008767\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9954 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_9954;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008768\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9955 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_9955;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008769\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9956 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_9956;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008770\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9957 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value = *_tmp_9957;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008771\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_breadth
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9958 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value = *_tmp_9958;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008772\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9959 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value = *_tmp_9959;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008773\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9960 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value = *_tmp_9960;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008774\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_309 == 1)  // CHOICE Shape  fieldName(circular)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_9961;
                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular.push_back(_tmp_9961);
                            
                                    // CircularShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  radius              StandardLength12b       
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_9962;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point.push_back(_tmp_9962);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008775\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_9963;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height.push_back(_tmp_9963);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008776\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_9964;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9964);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008777\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9965 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_9965;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008778\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9966 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_9966;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008779\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9967 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9967;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008780\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: radius
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9968 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value = *_tmp_9968;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008781\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9969 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value = *_tmp_9969;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008782\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_309 == 2)  // CHOICE Shape  fieldName(polygonal)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_9970;
                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal.push_back(_tmp_9970);
                            
                                    // PolygonalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                        //  polygon             SequenceOfCartesianPosition3d     
                                        //  height              StandardLength12b               OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_9971;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_9971);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008783\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_9972;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height.push_back(_tmp_9972);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008784\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_9973;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9973);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008785\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9974 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_9974;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008786\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9975 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_9975;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008787\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9976 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9976;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008788\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: polygon
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_4495 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008789\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_4495);
                                    }
                                    
                                    int16_t* _tmp_9977 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_9977;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_9977 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008790\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon. size: " << int(*_tmp_9977);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int v = 0; v < _if__tmp_9977; v++) {
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_v;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements.push_back(seqof_v);
                                    
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_9978;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate.push_back(_tmp_9978);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008791\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9979 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value = *_tmp_9979;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008792\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9980 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value = *_tmp_9980;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008793\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9981 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value = *_tmp_9981;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008794\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].polygon.elements[v].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9982 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value = *_tmp_9982;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008795\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_309 == 3)  // CHOICE Shape  fieldName(elliptical)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_9983;
                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical.push_back(_tmp_9983);
                            
                                    // EllipticalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  semiMajorAxisLength StandardLength12b       
                                        //  semiMinorAxisLength StandardLength12b       
                                        //  orientation         Wgs84AngleValue       OPTIONAL  
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_9984;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_9984);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008796\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_9985;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation.push_back(_tmp_9985);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008797\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_9986;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height.push_back(_tmp_9986);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008798\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_9987;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9987);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008799\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9988 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_9988;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008800\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_9989 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_9989;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008801\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_9990 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_9990;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008802\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_major_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9991 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_9991;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008803\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_minor_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_9992 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_9992;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008804\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9993 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value = *_tmp_9993;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008805\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_9994 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value = *_tmp_9994;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008806\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_309 == 4)  // CHOICE Shape  fieldName(radial)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_9995;
                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial.push_back(_tmp_9995);
                            
                                    // RadialShape  SEQUENCE
                                        //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                        //  range                                 StandardLength12b       
                                        //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                        //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                        //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                        //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_9996;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point.push_back(_tmp_9996);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008807\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_9997;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_9997);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008808\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_9998;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_9998);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008809\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_9999;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_9999);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008810\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10000 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_10000;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008811\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10001 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_10001;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008812\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_10002 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10002;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008813\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: range
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10003 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value = *_tmp_10003;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008814\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10004 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_10004;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008815\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10005 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_10005;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008816\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                        // Field name: vertical_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_10006 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_10006;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008817\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                        // Field name: vertical_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_10007 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_10007;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008818\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_309 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_10008;
                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes.push_back(_tmp_10008);
                            
                                    // RadialShapes  SEQUENCE
                                        //  refPointId       Identifier1B                 
                                        //  xCoordinate      CartesianCoordinateSmall     
                                        //  yCoordinate      CartesianCoordinateSmall     
                                        //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                        //  radialShapesList RadialShapesList             
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_10009;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_10009);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008819\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                    }
                                    
                                    // Field name: ref_point_id
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_10010 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_10010;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008820\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                     " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].ref_point_id.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: x_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_10011 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_10011;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008821\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: y_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_10012 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_10012;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value;
                                    ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008822\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                        // Field name: z_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10013 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_10013;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value;
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008823\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                         ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    // Field name: radial_shapes_list
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_4518 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008824\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_4518);
                                    }
                                    
                                    int16_t* _tmp_10014 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_10014;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_10014 = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008825\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_10014);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int w = 0; w < _if__tmp_10014; w++) {
                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_w;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_w);
                                    
                                            // RadialShapeDetails  SEQUENCE
                                                //  range                       StandardLength12b       
                                                //  horizontalOpeningAngleStart CartesianAngleValue     
                                                //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10015;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start.push_back(_tmp_10015);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008826\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10016;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end.push_back(_tmp_10016);
                                            
                                                if(debug)
                                                    logger->debug() << "|\033[38;5;94m008827\033[0m| ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end " << tools::green("present");
                                            }
                                            
                                            // Field name: range
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10017 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value = *_tmp_10017;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008828\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].range.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10018 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value = *_tmp_10018;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008829\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10019 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value = *_tmp_10019;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value;
                                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008830\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end: " <<
                                                             ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start.size() != 0) {
                                                // Field name: vertical_opening_angle_start
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_10020 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value = *_tmp_10020;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008831\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end.size() != 0) {
                                                // Field name: vertical_opening_angle_end
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_10021 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value = *_tmp_10021;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value;
                                                ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008832\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0]: " <<
                                                                 ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[w].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                            }
                            else
                            {
                                uint16_t* _tmp_10022 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2 + int(*_tmp_10022);            // Ignoring opentype data
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence.size() != 0) {
                            // Field name: perception_region_confidence
                            // Integer
                            // UINT8  min(1) max(101) span(101) datatype(UInt8)
                            uint8_t* _tmp_10023 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_10023;
                            __aux64__ += 1;
                            ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008833\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence[0].value) << 
                                             " payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].perception_region_confidence[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                return false;
                            }
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_10024 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].shadowing_applies.value = (*_tmp_10024 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008834\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].shadowing_applies.: " << (*_tmp_10024);
                        if(*_ext_flag_4478) { // from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u]. 
                            uint8_t* _tmp_10025 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_120[*_tmp_10025];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008835\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].sensor_information_container[0].elements[u].: " << static_cast<unsigned int>(*_tmp_10025);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_10025; i++)
                                _array_120[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_10025; i++) {
                                uint16_t* _tmp_10026 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_10026; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_307 == 3)  // CHOICE WrappedCpmContainer  fieldName(perception_region_container)
            {
                cpm_v2_23_cpm_perceptionregioncontainer_msgs::msg::PerceptionRegionContainer _tmp_10027;
                ros->payload.cpm_containers.elements[s].perception_region_container.push_back(_tmp_10027);
            
                // SequenceOf
                // Data Type UInt16
                // SEQUENCE_OF  min(1) max(256) span(256)
                uint8_t* _ext_flag_4524 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008836\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].: " << int(*_ext_flag_4524);
                }
                
                int16_t* _tmp_10028 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_10028;
                __aux64__ += 1;     // +min
                
                int _if__tmp_10028 = __aux64__;
                
                if(debug) {
                    logger->debug() << "|\033[38;5;94m008837\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perception_region_container[0]. size: " << int(*_tmp_10028);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 256) {
                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                    return false;
                }
                
                
                for(int x = 0; x < _if__tmp_10028; x++) {
                    cpm_v2_23_cpm_perceptionregioncontainer_msgs::msg::PerceptionRegion seqof_x;  // SEQUENCE
                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements.push_back(seqof_x);
                
                        // PerceptionRegion  SEQUENCE
                            //  measurementDeltaTime       DeltaTimeMilliSecondSigned            
                            //  perceptionRegionConfidence ConfidenceLevel                       
                            //  perceptionRegionShape      Shape                                 
                            //  shadowingApplies           PerceptionRegion_shadowingApplies     
                            //  sensorIdList               SequenceOfIdentifier1B              OPTIONAL  
                            //  numberOfPerceivedObjects   CardinalNumber1B                    OPTIONAL  
                            //  perceivedObjectIds         PerceivedObjectIds                  OPTIONAL  
                            //  ...
                        uint8_t* _ext_flag_4525 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008838\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].: " << int(*_ext_flag_4525);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_10029;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list.push_back(_tmp_10029);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008839\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::CardinalNumber1B _tmp_10030;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects.push_back(_tmp_10030);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008840\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            cpm_v2_23_cpm_perceptionregioncontainer_msgs::msg::PerceivedObjectIds _tmp_10031;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids.push_back(_tmp_10031);
                        
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008841\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids " << tools::green("present");
                        }
                        
                        // Field name: measurement_delta_time
                        // Real
                        // Float
                        // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                        uint16_t* _tmp_10032 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value = *_tmp_10032;
                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value += -2048;
                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value;
                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value /= 1000.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008842\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time: " <<
                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].measurement_delta_time.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: perception_region_confidence
                        // Integer
                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                        uint8_t* _tmp_10033 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_10033;
                        __aux64__ += 1;
                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_confidence.value = __aux64__;
                        
                        if(debug) {
                            logger->debug() << "|\033[38;5;94m008843\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_confidence.value) << 
                                         " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_confidence.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                            return false;
                        }
                        
                        // Field name: perception_region_shape
                        // Choice
                        uint8_t* _ext_flag_4527 = (uint8_t*)buffer++; // ext flag
                        
                           // #0  rectangular   RectangularShape   
                           // #1  circular   CircularShape   
                           // #2  polygonal   PolygonalShape   
                           // #3  elliptical   EllipticalShape   
                           // #4  radial   RadialShape   
                           // #5  radialShapes   RadialShapes   
                        uint8_t _choice_310 = *(buffer++);
                        
                        if(*_ext_flag_4527)
                            _choice_310 += 5 + 1; // Ext addition
                        
                        if(_choice_310 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_10034;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular.push_back(_tmp_10034);
                        
                                // RectangularShape  SEQUENCE
                                    //  centerPoint CartesianPosition3d   OPTIONAL  
                                    //  semiLength  StandardLength12b       
                                    //  semiBreadth StandardLength12b       
                                    //  orientation Wgs84AngleValue       OPTIONAL  
                                    //  height      StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10035;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point.push_back(_tmp_10035);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008844\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_10036;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation.push_back(_tmp_10036);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008845\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10037;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height.push_back(_tmp_10037);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008846\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point.size() != 0) {
                                    // Field name: center_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10038;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate.push_back(_tmp_10038);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008847\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10039 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value = *_tmp_10039;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008848\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10040 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value = *_tmp_10040;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008849\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10041 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_10041;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008850\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10042 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value = *_tmp_10042;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008851\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_breadth
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10043 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value = *_tmp_10043;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008852\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10044 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value = *_tmp_10044;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008853\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10045 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value = *_tmp_10045;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008854\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_310 == 1)  // CHOICE Shape  fieldName(circular)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_10046;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular.push_back(_tmp_10046);
                        
                                // CircularShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  radius              StandardLength12b       
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10047;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point.push_back(_tmp_10047);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008855\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10048;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height.push_back(_tmp_10048);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008856\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10049;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10049);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008857\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10050 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_10050;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008858\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10051 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_10051;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008859\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10052 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10052;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008860\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: radius
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10053 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value = *_tmp_10053;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008861\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].radius.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10054 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value = *_tmp_10054;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008862\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.circular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_310 == 2)  // CHOICE Shape  fieldName(polygonal)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_10055;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal.push_back(_tmp_10055);
                        
                                // PolygonalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                    //  polygon             SequenceOfCartesianPosition3d     
                                    //  height              StandardLength12b               OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10056;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point.push_back(_tmp_10056);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008863\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10057;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height.push_back(_tmp_10057);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008864\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10058;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10058);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008865\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10059 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_10059;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008866\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10060 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_10060;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008867\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10061 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10061;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008868\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: polygon
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_4543 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008869\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.: " << int(*_ext_flag_4543);
                                }
                                
                                int16_t* _tmp_10062 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_10062;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_10062 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008870\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon. size: " << int(*_tmp_10062);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int y = 0; y < _if__tmp_10062; y++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_y;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements.push_back(seqof_y);
                                
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10063;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate.push_back(_tmp_10063);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008871\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10064 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value = *_tmp_10064;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008872\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10065 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value = *_tmp_10065;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008873\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10066 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value = *_tmp_10066;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008874\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].polygon.elements[y].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10067 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value = *_tmp_10067;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008875\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_310 == 3)  // CHOICE Shape  fieldName(elliptical)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_10068;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical.push_back(_tmp_10068);
                        
                                // EllipticalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  semiMajorAxisLength StandardLength12b       
                                    //  semiMinorAxisLength StandardLength12b       
                                    //  orientation         Wgs84AngleValue       OPTIONAL  
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10069;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point.push_back(_tmp_10069);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008876\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_10070;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation.push_back(_tmp_10070);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008877\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10071;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height.push_back(_tmp_10071);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008878\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10072;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10072);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008879\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10073 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_10073;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008880\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10074 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_10074;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008881\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10075 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10075;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008882\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_major_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10076 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value = *_tmp_10076;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008883\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_minor_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10077 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value = *_tmp_10077;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008884\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10078 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value = *_tmp_10078;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008885\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10079 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value = *_tmp_10079;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008886\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_310 == 4)  // CHOICE Shape  fieldName(radial)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_10080;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial.push_back(_tmp_10080);
                        
                                // RadialShape  SEQUENCE
                                    //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                    //  range                                 StandardLength12b       
                                    //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                    //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                    //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                    //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10081;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point.push_back(_tmp_10081);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008887\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10082;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start.push_back(_tmp_10082);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008888\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10083;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end.push_back(_tmp_10083);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008889\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10084;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10084);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008890\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10085 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_10085;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008891\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10086 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_10086;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008892\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10087 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10087;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008893\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: range
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10088 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value = *_tmp_10088;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008894\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].range.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_start
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10089 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_10089;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008895\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_end
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_10090 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_10090;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008896\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start.size() != 0) {
                                    // Field name: vertical_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10091 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value = *_tmp_10091;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008897\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end.size() != 0) {
                                    // Field name: vertical_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_10092 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value = *_tmp_10092;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008898\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_310 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_10093;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes.push_back(_tmp_10093);
                        
                                // RadialShapes  SEQUENCE
                                    //  refPointId       Identifier1B                 
                                    //  xCoordinate      CartesianCoordinateSmall     
                                    //  yCoordinate      CartesianCoordinateSmall     
                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                    //  radialShapesList RadialShapesList             
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_10094;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate.push_back(_tmp_10094);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008899\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_10095 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_10095;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008900\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: x_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_10096 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value = *_tmp_10096;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008901\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: y_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_10097 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value = *_tmp_10097;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008902\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_10098 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value = *_tmp_10098;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value;
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008903\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0]: " <<
                                                     ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: radial_shapes_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_4566 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008904\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_4566);
                                }
                                
                                int16_t* _tmp_10099 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_10099;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_10099 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008905\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_10099);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int z = 0; z < _if__tmp_10099; z++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_z;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements.push_back(seqof_z);
                                
                                        // RadialShapeDetails  SEQUENCE
                                            //  range                       StandardLength12b       
                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10100;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start.push_back(_tmp_10100);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008906\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10101;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end.push_back(_tmp_10101);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008907\033[0m| ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end " << tools::green("present");
                                        }
                                        
                                        // Field name: range
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_10102 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value = *_tmp_10102;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008908\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].range.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_10103 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value = *_tmp_10103;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008909\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_10104 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value = *_tmp_10104;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value;
                                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008910\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end: " <<
                                                         ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start.size() != 0) {
                                            // Field name: vertical_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10105 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value = *_tmp_10105;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008911\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end.size() != 0) {
                                            // Field name: vertical_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10106 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value = *_tmp_10106;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value;
                                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008912\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0]: " <<
                                                             ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[z].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                        }
                        else
                        {
                            uint16_t* _tmp_10107 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2 + int(*_tmp_10107);            // Ignoring opentype data
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_10108 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].shadowing_applies.value = (*_tmp_10108 == 1);
                        if(debug)
                            logger->debug() << "|\033[38;5;94m008913\033[0m| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].shadowing_applies.: " << (*_tmp_10108);
                        
                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list.size() != 0) {
                            // Field name: sensor_id_list
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(128) span(128)
                            uint8_t* _ext_flag_4572 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008914\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].: " << int(*_ext_flag_4572);
                            }
                            
                            int16_t* _tmp_10109 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_10109;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_10109 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008915\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0]. size: " << int(*_tmp_10109);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                return false;
                            }
                            
                            
                            for(int a = 0; a < _if__tmp_10109; a++) {
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B seqof_a;  // INTEGER
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements.push_back(seqof_a);
                            
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_10110 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_10110;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements[a].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008916\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements[a].value) << 
                                                 " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements[a].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements[a].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements[a].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].sensor_id_list[0].elements[a].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects.size() != 0) {
                            // Field name: number_of_perceived_objects
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_10111 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_10111;
                            ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects[0].value = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008917\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects[0].value) << 
                                             " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].number_of_perceived_objects[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids.size() != 0) {
                            // Field name: perceived_object_ids
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(0) max(255) span(256)
                            uint8_t* _ext_flag_4573 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008918\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].: " << int(*_ext_flag_4573);
                            }
                            
                            int16_t* _tmp_10112 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_10112;
                            
                            int _if__tmp_10112 = __aux64__;
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008919\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0]. size: " << int(*_tmp_10112);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                            
                            
                            for(int b = 0; b < _if__tmp_10112; b++) {
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B seqof_b;  // INTEGER
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements.push_back(seqof_b);
                            
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_10113 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_10113;
                                ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements[b].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008920\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements[b].value) << 
                                                 " payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements[b].value: " << ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements[b].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements[b].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perception_region_container[0].elements[x].perceived_object_ids[0].elements[b].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        if(*_ext_flag_4525) { // from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x]. 
                            uint8_t* _tmp_10114 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_121[*_tmp_10114];
                            
                            if(debug)
                                logger->debug() << "|\033[38;5;94m008921\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].perception_region_container[0].elements[x].: " << static_cast<unsigned int>(*_tmp_10114);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_10114; i++)
                                _array_121[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_10114; i++) {
                                uint16_t* _tmp_10115 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_10115; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_307 == 4)  // CHOICE WrappedCpmContainer  fieldName(perceived_object_container)
            {
                cpm_v2_23_cpm_perceivedobjectcontainer_msgs::msg::PerceivedObjectContainer _tmp_10116;
                ros->payload.cpm_containers.elements[s].perceived_object_container.push_back(_tmp_10116);
            
                    // PerceivedObjectContainer  SEQUENCE
                        //  numberOfPerceivedObjects CardinalNumber1B     
                        //  perceivedObjects         PerceivedObjects     
                        //  ...
                    uint8_t* _ext_flag_4574 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008922\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].: " << int(*_ext_flag_4574);
                    }
                    
                    
                    // Field name: number_of_perceived_objects
                    // Integer
                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                    uint8_t* _tmp_10117 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_10117;
                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].number_of_perceived_objects.value = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008923\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].number_of_perceived_objects.value) << 
                                     " payload.cpm_containers.elements[s].perceived_object_container[0].number_of_perceived_objects.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].number_of_perceived_objects.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    // Field name: perceived_objects
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(255) span(256)
                    uint8_t* _ext_flag_4575 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008924\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.: " << int(*_ext_flag_4575);
                    }
                    
                    int16_t* _tmp_10118 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_10118;
                    
                    int _if__tmp_10118 = __aux64__;
                    
                    if(debug) {
                        logger->debug() << "|\033[38;5;94m008925\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects. size: " << int(*_tmp_10118);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    
                    for(int c = 0; c < _if__tmp_10118; c++) {
                        its_container_v3_etsi_its_cdd_msgs::msg::PerceivedObject seqof_c;  // SEQUENCE
                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements.push_back(seqof_c);
                    
                            // PerceivedObject  SEQUENCE
                                //  objectId                           Identifier2B                                           OPTIONAL  
                                //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                //  position                           CartesianPosition3dWithConfidence                        
                                //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                //  classification                     ObjectClassDescription                                 OPTIONAL  
                                //  mapPosition                        MapPosition                                            OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_4576 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008926\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].: " << int(*_ext_flag_4576);
                            }
                            
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_10119;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id.push_back(_tmp_10119);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008927\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Velocity3dWithConfidence _tmp_10120;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity.push_back(_tmp_10120);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008928\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Acceleration3dWithConfidence _tmp_10121;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration.push_back(_tmp_10121);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008929\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::EulerAnglesWithConfidence _tmp_10122;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles.push_back(_tmp_10122);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008930\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngularVelocityComponent _tmp_10123;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity.push_back(_tmp_10123);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008931\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrices _tmp_10124;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices.push_back(_tmp_10124);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008932\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_10125;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z.push_back(_tmp_10125);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008933\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_10126;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y.push_back(_tmp_10126);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008934\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_10127;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x.push_back(_tmp_10127);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008935\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::PerceivedObjectDeltaTimeMilliSecondSignedObjectAge _tmp_10128;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age.push_back(_tmp_10128);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008936\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectPerceptionQuality _tmp_10129;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality.push_back(_tmp_10129);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008937\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_10130;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list.push_back(_tmp_10130);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008938\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectClassDescription _tmp_10131;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification.push_back(_tmp_10131);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008939\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::MapPosition _tmp_10132;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position.push_back(_tmp_10132);
                            
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m008940\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position " << tools::green("present");
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id.size() != 0) {
                                // Field name: object_id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_10133 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_10133;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008941\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id[0].value) << 
                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id[0].value: " << ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id[0].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_id[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                            }
                            
                            // Field name: measurement_delta_time
                            // Real
                            // Float
                            // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                            uint16_t* _tmp_10134 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value = *_tmp_10134;
                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value += -2048;
                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value;
                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value /= 1000.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->debug() << "|\033[38;5;94m008942\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time: " <<
                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].measurement_delta_time.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: position
                                // CartesianPosition3dWithConfidence  SEQUENCE
                                    //  xCoordinate CartesianCoordinateWithConfidence     
                                    //  yCoordinate CartesianCoordinateWithConfidence     
                                    //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateWithConfidence _tmp_10135;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate.push_back(_tmp_10135);
                                
                                    if(debug)
                                        logger->debug() << "|\033[38;5;94m008943\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: x_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_10136 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value = *_tmp_10136;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008944\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_10137 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value = *_tmp_10137;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008945\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.x_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                // Field name: y_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_10138 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value = *_tmp_10138;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008946\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_10139 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value = *_tmp_10139;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008947\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.y_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        uint32_t* _tmp_10140 = (uint32_t*) buffer; buffer += 4;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value = *_tmp_10140;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value += -131072;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008948\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value: " <<
                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_10141 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value = *_tmp_10141;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008949\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence: " <<
                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].position.z_coordinate[0].confidence.value << " (" << __aux64__ << ")";
                                        }
                                }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity.size() != 0) {
                                // Field name: velocity
                                // Choice
                                   // #0  polarVelocity   VelocityPolarWithZ   
                                   // #1  cartesianVelocity   VelocityCartesian   
                                uint8_t _choice_311 = *(buffer++);
                                
                                if(_choice_311 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::VelocityPolarWithZ _tmp_10142;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity.push_back(_tmp_10142);
                                
                                        // VelocityPolarWithZ  SEQUENCE
                                            //  velocityMagnitude Speed                 
                                            //  velocityDirection CartesianAngle        
                                            //  zVelocity         VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_10143;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity.push_back(_tmp_10143);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008950\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: velocity_magnitude
                                            // Speed  SEQUENCE
                                                //  speedValue      SpeedValue          
                                                //  speedConfidence SpeedConfidence     
                                            
                                            // Field name: speed_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10144 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value = *_tmp_10144;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008951\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: speed_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_10145 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value = *_tmp_10145;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008952\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: velocity_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10146 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value = *_tmp_10146;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008953\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10147 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value = *_tmp_10147;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008954\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].velocity_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_10148 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value = *_tmp_10148;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008955\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_10149 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value = *_tmp_10149;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008956\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].polar_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_311 == 1)  // CHOICE Velocity3dWithConfidence  fieldName(cartesian_velocity)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::msg::VelocityCartesian _tmp_10150;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity.push_back(_tmp_10150);
                                
                                        // VelocityCartesian  SEQUENCE
                                            //  xVelocity  VelocityComponent     
                                            //  yVelocity  VelocityComponent     
                                            //  zVelocity  VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_10151;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity.push_back(_tmp_10151);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008957\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: x_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10152 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value = *_tmp_10152;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008958\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_10153 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value = *_tmp_10153;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008959\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].x_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_10154 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value = *_tmp_10154;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008960\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_10155 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value = *_tmp_10155;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008961\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].y_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_10156 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value = *_tmp_10156;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008962\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_10157 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value = *_tmp_10157;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008963\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_311) << ") selected in CHOICE Velocity3dWithConfidence in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].velocity[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration.size() != 0) {
                                // Field name: acceleration
                                // Choice
                                   // #0  polarAcceleration   AccelerationPolarWithZ   
                                   // #1  cartesianAcceleration   AccelerationCartesian   
                                uint8_t _choice_312 = *(buffer++);
                                
                                if(_choice_312 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::AccelerationPolarWithZ _tmp_10158;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration.push_back(_tmp_10158);
                                
                                        // AccelerationPolarWithZ  SEQUENCE
                                            //  accelerationMagnitude AccelerationMagnitude     
                                            //  accelerationDirection CartesianAngle            
                                            //  zAcceleration         AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_10159;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration.push_back(_tmp_10159);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008964\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: acceleration_magnitude
                                            // AccelerationMagnitude  SEQUENCE
                                                //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                //  accelerationConfidence     AccelerationConfidence         
                                            
                                            // Field name: acceleration_magnitude_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10160 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value = *_tmp_10160;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008965\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: acceleration_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10161 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value = *_tmp_10161;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008966\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: acceleration_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10162 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value = *_tmp_10162;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008967\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10163 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value = *_tmp_10163;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008968\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_10164 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value = *_tmp_10164;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008969\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_10165 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value = *_tmp_10165;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008970\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_312 == 1)  // CHOICE Acceleration3dWithConfidence  fieldName(cartesian_acceleration)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::msg::AccelerationCartesian _tmp_10166;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration.push_back(_tmp_10166);
                                
                                        // AccelerationCartesian  SEQUENCE
                                            //  xAcceleration AccelerationComponent     
                                            //  yAcceleration AccelerationComponent     
                                            //  zAcceleration AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_10167;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration.push_back(_tmp_10167);
                                        
                                            if(debug)
                                                logger->debug() << "|\033[38;5;94m008971\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: x_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10168 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value = *_tmp_10168;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008972\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10169 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value = *_tmp_10169;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008973\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10170 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value = *_tmp_10170;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008974\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10171 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value = *_tmp_10171;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008975\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_10172 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value = *_tmp_10172;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008976\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_10173 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value = *_tmp_10173;
                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008977\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_312) << ") selected in CHOICE Acceleration3dWithConfidence in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].acceleration[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles.size() != 0) {
                                // Field name: angles
                                    // EulerAnglesWithConfidence  SEQUENCE
                                        //  zAngle     CartesianAngle     
                                        //  yAngle     CartesianAngle   OPTIONAL  
                                        //  xAngle     CartesianAngle   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_10174;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle.push_back(_tmp_10174);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008978\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_10175;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle.push_back(_tmp_10175);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008979\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle " << tools::green("present");
                                    }
                                    
                                    // Field name: z_angle
                                        // CartesianAngle  SEQUENCE
                                            //  value      CartesianAngleValue     
                                            //  confidence AngleConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_10176 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value = *_tmp_10176;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008980\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value: " <<
                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                        uint8_t* _tmp_10177 = (uint8_t*) buffer++;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value = *_tmp_10177;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008981\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence: " <<
                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].z_angle.confidence.value << " (" << __aux64__ << ")";
                                        }
                                    
                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle.size() != 0) {
                                        // Field name: y_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10178 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value = *_tmp_10178;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008982\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10179 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value = *_tmp_10179;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008983\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].y_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle.size() != 0) {
                                        // Field name: x_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10180 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value = *_tmp_10180;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008984\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_10181 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value = *_tmp_10181;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008985\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].angles[0].x_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity.size() != 0) {
                                // Field name: z_angular_velocity
                                    // CartesianAngularVelocityComponent  SEQUENCE
                                        //  value      CartesianAngularVelocityComponentValue     
                                        //  confidence AngularSpeedConfidence                     
                                    
                                    // Field name: value
                                    // Integer
                                    // INT16  min(-255) max(256) span(512) datatype(Int16)
                                    uint16_t* _tmp_10182 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_10182;
                                    __aux64__ += -255;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].value.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008986\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].value.value) << 
                                                     " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].value.value: " << ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].value.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-255); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: confidence
                                    // Enumerated
                                    // INT32  min(0) max(7) span(8) datatype(Int32)
                                    uint8_t* _tmp_10183 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_10183;
                                    __aux64__ += 0;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].confidence.value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008987\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].confidence.value) << 
                                                     " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].z_angular_velocity[0].confidence.value);
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices.size() != 0) {
                                // Field name: lower_triangular_correlation_matrices
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4)
                                int16_t* _tmp_10184 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_10184;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_10184 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m008988\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0]. size: " << int(*_tmp_10184);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int d = 0; d < _if__tmp_10184; d++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrix seqof_d;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements.push_back(seqof_d);
                                
                                        // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                            //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                            //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                        
                                        // Field name: components_included_inthe_matrix
                                        // BitString
                                        // BIT_STRING  min(13) max(13) span(1)
                                        uint8_t* _ext_flag_4617 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008989\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.: " << int(*_ext_flag_4617);
                                        }
                                        
                                        uint8_t* _tmp_10185 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_10185 + 13;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m008990\033[0m| payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.value: " << __aux64__;
                                        
                                        int _if__tmp_10185 = __aux64__;
                                        for(int e = 0; e < _if__tmp_10185; e++) {
                                            uint8_t __c__;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.values[e] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.value' " << (__aux64__) << " is less than allowable (13); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].components_included_inthe_matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: matrix
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(13) span(13)
                                        int16_t* _tmp_10186 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_10186;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_10186 = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m008991\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix. size: " << int(*_tmp_10186);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int f = 0; f < _if__tmp_10186; f++) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::CorrelationColumn seqof_f;  // SEQUENCE_OF
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements.push_back(seqof_f);
                                        
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13)
                                            uint8_t* _ext_flag_4618 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008992\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].: " << int(*_ext_flag_4618);
                                            }
                                            
                                            int16_t* _tmp_10187 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_10187;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_10187 = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m008993\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f]. size: " << int(*_tmp_10187);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int g = 0; g < _if__tmp_10187; g++) {
                                                its_container_v3_etsi_its_cdd_msgs::msg::CorrelationCellValue seqof_g;  // INTEGER
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements.push_back(seqof_g);
                                            
                                                // Integer
                                                // INT8  min(-100) max(101) span(202) datatype(Int8)
                                                uint8_t* _tmp_10188 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_10188;
                                                __aux64__ += -100;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements[g].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m008994\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements[g].value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements[g].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements[g].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -100) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements[g].value' " << (__aux64__) << " is less than allowable (-100); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].lower_triangular_correlation_matrices[0].elements[d].matrix.elements[f].elements[g].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z.size() != 0) {
                                // Field name: object_dimension_z
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_10189 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value = *_tmp_10189;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008995\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_10190 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value = *_tmp_10190;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008996\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_z[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y.size() != 0) {
                                // Field name: object_dimension_y
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_10191 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value = *_tmp_10191;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008997\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_10192 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value = *_tmp_10192;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008998\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_y[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x.size() != 0) {
                                // Field name: object_dimension_x
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_10193 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value = *_tmp_10193;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m008999\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_10194 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value = *_tmp_10194;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009000\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_dimension_x[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age.size() != 0) {
                                // Field name: object_age
                                // Real
                                // Float
                                // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                uint16_t* _tmp_10195 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value = *_tmp_10195;
                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value /= 1000.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009001\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0]: " <<
                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_age[0].value << " (" << __aux64__ << ")";
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality.size() != 0) {
                                // Field name: object_perception_quality
                                // Integer
                                // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                uint8_t* _tmp_10196 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_10196;
                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009002\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality[0].value) << 
                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality[0].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].object_perception_quality[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list.size() != 0) {
                                // Field name: sensor_id_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(128) span(128)
                                uint8_t* _ext_flag_4626 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009003\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].: " << int(*_ext_flag_4626);
                                }
                                
                                int16_t* _tmp_10197 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_10197;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_10197 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009004\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0]. size: " << int(*_tmp_10197);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int h = 0; h < _if__tmp_10197; h++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B seqof_h;  // INTEGER
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements.push_back(seqof_h);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_10198 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_10198;
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements[h].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009005\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements[h].value) << 
                                                     " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements[h].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements[h].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements[h].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].sensor_id_list[0].elements[h].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification.size() != 0) {
                                // Field name: classification
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(8) span(8)
                                int16_t* _tmp_10199 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_10199;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_10199 = __aux64__;
                                
                                if(debug) {
                                    logger->debug() << "|\033[38;5;94m009006\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0]. size: " << int(*_tmp_10199);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int i = 0; i < _if__tmp_10199; i++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::ObjectClassWithConfidence seqof_i;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements.push_back(seqof_i);
                                
                                        // ObjectClassWithConfidence  SEQUENCE
                                            //  objectClass ObjectClass         
                                            //  confidence  ConfidenceLevel     
                                        
                                        // Field name: object_class
                                        // Choice
                                        uint8_t* _ext_flag_4627 = (uint8_t*)buffer++; // ext flag
                                        
                                           // #0  vehicleSubClass   TrafficParticipantType   
                                           // #1  vruSubClass   VruProfileAndSubprofile   
                                           // #2  groupSubClass   VruClusterInformation   
                                           // #3  otherSubClass   OtherSubClass   
                                        uint8_t _choice_313 = *(buffer++);
                                        
                                        if(*_ext_flag_4627)
                                            _choice_313 += 3 + 1; // Ext addition
                                        
                                        if(_choice_313 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::TrafficParticipantType _tmp_10200;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class.push_back(_tmp_10200);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_10201 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_10201;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009007\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else if(_choice_313 == 1)  // CHOICE ObjectClass  fieldName(vru_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::VruProfileAndSubprofile _tmp_10202;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class.push_back(_tmp_10202);
                                        
                                            // Choice
                                            uint8_t* _ext_flag_4628 = (uint8_t*)buffer++; // ext flag
                                            
                                               // #0  pedestrian   VruSubProfilePedestrian   
                                               // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist   
                                               // #2  motorcyclist   VruSubProfileMotorcyclist   
                                               // #3  animal   VruSubProfileAnimal   
                                            uint8_t _choice_314 = *(buffer++);
                                            
                                            if(*_ext_flag_4628)
                                                _choice_314 += 3 + 1; // Ext addition
                                            
                                            if(_choice_314 == 0) {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfilePedestrian _tmp_10203;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian.push_back(_tmp_10203);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_10204 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_10204;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009008\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].pedestrian[0].value);
                                                }
                                            }
                                            else if(_choice_314 == 1)  // CHOICE VruProfileAndSubprofile  fieldName(bicyclist_and_light_vru_vehicle)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileBicyclist _tmp_10205;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.push_back(_tmp_10205);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_10206 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_10206;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009009\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                }
                                            }
                                            else if(_choice_314 == 2)  // CHOICE VruProfileAndSubprofile  fieldName(motorcyclist)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileMotorcyclist _tmp_10207;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist.push_back(_tmp_10207);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_10208 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_10208;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009010\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                }
                                            }
                                            else if(_choice_314 == 3)  // CHOICE VruProfileAndSubprofile  fieldName(animal)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileAnimal _tmp_10209;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal.push_back(_tmp_10209);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_10210 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_10210;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009011\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal[0].value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.vru_sub_class[0].animal[0].value);
                                                }
                                            }
                                            else
                                            {
                                                uint16_t* _tmp_10211 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2 + int(*_tmp_10211);            // Ignoring opentype data
                                            }
                                        }
                                        else if(_choice_313 == 2)  // CHOICE ObjectClass  fieldName(group_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::VruClusterInformation _tmp_10212;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class.push_back(_tmp_10212);
                                        
                                                // VruClusterInformation  SEQUENCE
                                                    //  clusterId               Identifier1B         OPTIONAL  
                                                    //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                    //  clusterCardinalitySize  CardinalNumber1B       
                                                    //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_4633 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009012\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].: " << int(*_ext_flag_4633);
                                                }
                                                
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_10213;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id.push_back(_tmp_10213);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009013\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Shape _tmp_10214;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape.push_back(_tmp_10214);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009014\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::VruClusterProfiles _tmp_10215;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles.push_back(_tmp_10215);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009015\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                    // Field name: cluster_id
                                                    // Integer
                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                    uint8_t* _tmp_10216 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_10216;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009016\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                     " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                    // Field name: cluster_bounding_box_shape
                                                    // Choice
                                                    uint8_t* _ext_flag_4634 = (uint8_t*)buffer++; // ext flag
                                                    
                                                       // #0  rectangular   RectangularShape   
                                                       // #1  circular   CircularShape   
                                                       // #2  polygonal   PolygonalShape   
                                                       // #3  elliptical   EllipticalShape   
                                                       // #4  radial   RadialShape   
                                                       // #5  radialShapes   RadialShapes   
                                                    uint8_t _choice_315 = *(buffer++);
                                                    
                                                    if(*_ext_flag_4634)
                                                        _choice_315 += 5 + 1; // Ext addition
                                                    
                                                    if(_choice_315 == 0) {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_10217;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.push_back(_tmp_10217);
                                                    
                                                            // RectangularShape  SEQUENCE
                                                                //  centerPoint CartesianPosition3d   OPTIONAL  
                                                                //  semiLength  StandardLength12b       
                                                                //  semiBreadth StandardLength12b       
                                                                //  orientation Wgs84AngleValue       OPTIONAL  
                                                                //  height      StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10218;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.push_back(_tmp_10218);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009017\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_10219;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.push_back(_tmp_10219);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009018\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10220;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.push_back(_tmp_10220);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009019\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.size() != 0) {
                                                                // Field name: center_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10221;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_10221);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009020\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10222 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_10222;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009021\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10223 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_10223;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009022\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_10224 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_10224;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009023\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10225 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value = *_tmp_10225;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009024\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_breadth
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10226 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value = *_tmp_10226;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009025\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10227 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value = *_tmp_10227;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009026\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10228 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value = *_tmp_10228;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009027\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_315 == 1)  // CHOICE Shape  fieldName(circular)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_10229;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.push_back(_tmp_10229);
                                                    
                                                            // CircularShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  radius              StandardLength12b       
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10230;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.push_back(_tmp_10230);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009028\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10231;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.push_back(_tmp_10231);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009029\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10232;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10232);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009030\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10233 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_10233;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009031\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10234 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_10234;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009032\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_10235 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10235;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009033\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: radius
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10236 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value = *_tmp_10236;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009034\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10237 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value = *_tmp_10237;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009035\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_315 == 2)  // CHOICE Shape  fieldName(polygonal)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_10238;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.push_back(_tmp_10238);
                                                    
                                                            // PolygonalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                //  polygon             SequenceOfCartesianPosition3d     
                                                                //  height              StandardLength12b               OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10239;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_10239);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009036\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10240;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.push_back(_tmp_10240);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009037\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10241;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10241);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009038\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10242 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_10242;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009039\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10243 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_10243;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009040\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_10244 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10244;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009041\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: polygon
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_4650 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009042\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_4650);
                                                            }
                                                            
                                                            int16_t* _tmp_10245 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_10245;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_10245 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009043\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon. size: " << int(*_tmp_10245);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int j = 0; j < _if__tmp_10245; j++) {
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_j;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.push_back(seqof_j);
                                                            
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10246;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate.push_back(_tmp_10246);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009044\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10247 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value = *_tmp_10247;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009045\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10248 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value = *_tmp_10248;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009046\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_10249 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value = *_tmp_10249;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009047\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[j].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10250 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value = *_tmp_10250;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009048\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_315 == 3)  // CHOICE Shape  fieldName(elliptical)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_10251;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.push_back(_tmp_10251);
                                                    
                                                            // EllipticalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  semiMajorAxisLength StandardLength12b       
                                                                //  semiMinorAxisLength StandardLength12b       
                                                                //  orientation         Wgs84AngleValue       OPTIONAL  
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10252;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_10252);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009049\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_10253;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.push_back(_tmp_10253);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009050\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_10254;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.push_back(_tmp_10254);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009051\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10255;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10255);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009052\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10256 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_10256;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009053\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10257 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_10257;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009054\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_10258 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10258;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009055\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_major_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10259 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_10259;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009056\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_minor_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10260 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_10260;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009057\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10261 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value = *_tmp_10261;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009058\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10262 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value = *_tmp_10262;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009059\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_315 == 4)  // CHOICE Shape  fieldName(radial)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_10263;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.push_back(_tmp_10263);
                                                    
                                                            // RadialShape  SEQUENCE
                                                                //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                                                //  range                                 StandardLength12b       
                                                                //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                                                //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                                                //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                                                //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_10264;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.push_back(_tmp_10264);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009060\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10265;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_10265);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009061\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10266;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_10266);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009062\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_10267;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_10267);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009063\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10268 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_10268;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009064\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_10269 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_10269;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009065\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_10270 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_10270;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009066\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: range
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10271 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value = *_tmp_10271;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009067\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_start
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10272 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_10272;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009068\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_end
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_10273 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_10273;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009069\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                // Field name: vertical_opening_angle_start
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10274 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_10274;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009070\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                // Field name: vertical_opening_angle_end
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_10275 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_10275;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009071\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_315 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_10276;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.push_back(_tmp_10276);
                                                    
                                                            // RadialShapes  SEQUENCE
                                                                //  refPointId       Identifier1B                 
                                                                //  xCoordinate      CartesianCoordinateSmall     
                                                                //  yCoordinate      CartesianCoordinateSmall     
                                                                //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                //  radialShapesList RadialShapesList             
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_10277;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_10277);
                                                            
                                                                if(debug)
                                                                    logger->debug() << "|\033[38;5;94m009072\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                                            }
                                                            
                                                            // Field name: ref_point_id
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_10278 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_10278;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009073\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                             " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            // Field name: x_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_10279 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_10279;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009074\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: y_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_10280 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_10280;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009075\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                // Field name: z_coordinate
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                uint16_t* _tmp_10281 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_10281;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                                                __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->debug() << "|\033[38;5;94m009076\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            // Field name: radial_shapes_list
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_4673 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009077\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_4673);
                                                            }
                                                            
                                                            int16_t* _tmp_10282 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_10282;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_10282 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->debug() << "|\033[38;5;94m009078\033[0m| SequenceOf ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(*_tmp_10282);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int k = 0; k < _if__tmp_10282; k++) {
                                                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_k;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_k);
                                                            
                                                                    // RadialShapeDetails  SEQUENCE
                                                                        //  range                       StandardLength12b       
                                                                        //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                        //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                        //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                        //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10283;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start.push_back(_tmp_10283);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009079\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_10284;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end.push_back(_tmp_10284);
                                                                    
                                                                        if(debug)
                                                                            logger->debug() << "|\033[38;5;94m009080\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: range
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_10285 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value = *_tmp_10285;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009081\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].range.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_start
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_10286 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value = *_tmp_10286;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009082\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_end
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_10287 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value = *_tmp_10287;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value;
                                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->debug() << "|\033[38;5;94m009083\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end: " <<
                                                                                     ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start.size() != 0) {
                                                                        // Field name: vertical_opening_angle_start
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_10288 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value = *_tmp_10288;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009084\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end.size() != 0) {
                                                                        // Field name: vertical_opening_angle_end
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_10289 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value = *_tmp_10289;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value;
                                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->debug() << "|\033[38;5;94m009085\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[k].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                    }
                                                    else
                                                    {
                                                        uint16_t* _tmp_10290 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2 + int(*_tmp_10290);            // Ignoring opentype data
                                                    }
                                                }
                                                
                                                // Field name: cluster_cardinality_size
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_10291 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_10291;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_cardinality_size.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009086\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                    // Field name: cluster_profiles
                                                    // BitString
                                                    // BIT_STRING  min(4) max(4) span(1)
                                                    uint8_t* _tmp_10292 = (uint8_t*)buffer;
                                                    __aux64__ = *_tmp_10292 + 4;
                                                    buffer += 1;
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009087\033[0m| payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles[0].value: " << __aux64__;
                                                    
                                                    int _if__tmp_10292 = __aux64__;
                                                    for(int l = 0; l < _if__tmp_10292; l++) {
                                                        uint8_t __c__;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles[0].values.push_back(__c__);
                                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles[0].values[l] = (*__b__ == 1);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " is less than allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                if(*_ext_flag_4633) { // from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0]. 
                                                    uint8_t* _tmp_10293 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_122[*_tmp_10293];
                                                    
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009088\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.group_sub_class[0].: " << static_cast<unsigned int>(*_tmp_10293);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_10293; i++)
                                                        _array_122[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_10293; i++) {
                                                        uint16_t* _tmp_10294 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_10294; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                        }
                                        else if(_choice_313 == 3)  // CHOICE ObjectClass  fieldName(other_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::OtherSubClass _tmp_10295;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class.push_back(_tmp_10295);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_10296 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_10296;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009089\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].object_class.other_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else
                                        {
                                            uint16_t* _tmp_10297 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2 + int(*_tmp_10297);            // Ignoring opentype data
                                        }
                                        
                                        // Field name: confidence
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_10298 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_10298;
                                        __aux64__ += 1;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].confidence.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009090\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].confidence.value) << 
                                                         " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].confidence.value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].classification[0].elements[i].confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position.size() != 0) {
                                // Field name: map_position
                                    // MapPosition  SEQUENCE
                                        //  mapReference             MapReference               OPTIONAL  
                                        //  laneId                   Identifier1B               OPTIONAL  
                                        //  connectionId             Identifier1B               OPTIONAL  
                                        //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_4679 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].
                                    
                                    if(debug) {
                                        logger->debug() << "|\033[38;5;94m009091\033[0m| Reading ext flag from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].: " << int(*_ext_flag_4679);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::MapReference _tmp_10299;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference.push_back(_tmp_10299);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009092\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_10300;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id.push_back(_tmp_10300);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009093\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_10301;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id.push_back(_tmp_10301);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009094\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::LongitudinalLanePosition _tmp_10302;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position.push_back(_tmp_10302);
                                    
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009095\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference.size() != 0) {
                                        // Field name: map_reference
                                        // Choice
                                           // #0  roadsegment   RoadSegmentReferenceId   
                                           // #1  intersection   IntersectionReferenceId   
                                        uint8_t _choice_316 = *(buffer++);
                                        
                                        if(_choice_316 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_10303;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment.push_back(_tmp_10303);
                                        
                                                // RoadSegmentReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_10304;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region.push_back(_tmp_10304);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009096\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_10305 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_10305;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009097\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_10306 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_10306;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009098\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else if(_choice_316 == 1)  // CHOICE MapReference  fieldName(intersection)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_10307;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection.push_back(_tmp_10307);
                                        
                                                // IntersectionReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_10308;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region.push_back(_tmp_10308);
                                                
                                                    if(debug)
                                                        logger->debug() << "|\033[38;5;94m009099\033[0m| ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_10309 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_10309;
                                                    ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->debug() << "|\033[38;5;94m009100\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_10310 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_10310;
                                                ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->debug() << "|\033[38;5;94m009101\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                 " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_316) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].map_reference[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id.size() != 0) {
                                        // Field name: lane_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_10311 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_10311;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009102\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id[0].value) << 
                                                         " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id.size() != 0) {
                                        // Field name: connection_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_10312 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_10312;
                                        ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->debug() << "|\033[38;5;94m009103\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id[0].value) << 
                                                         " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position.size() != 0) {
                                        // Field name: longitudinal_lane_position
                                            // LongitudinalLanePosition  SEQUENCE
                                                //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                            
                                            // Field name: longitudinal_lane_position_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10313 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_10313;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009104\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: longitudinal_lane_position_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_10314 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_10314;
                                            __aux64__ = ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                            ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                logger->warning() << "Error: Value in 'payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->debug() << "|\033[38;5;94m009105\033[0m| " << tools::getTypeName(ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                             ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    if(*_ext_flag_4679) { // from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0]. 
                                        uint8_t* _tmp_10315 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_123[*_tmp_10315];
                                        
                                        if(debug)
                                            logger->debug() << "|\033[38;5;94m009106\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].map_position[0].: " << static_cast<unsigned int>(*_tmp_10315);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_10315; i++)
                                            _array_123[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_10315; i++) {
                                            uint16_t* _tmp_10316 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_10316; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                            if(*_ext_flag_4576) { // from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c]. 
                                uint8_t* _tmp_10317 = (uint8_t*) buffer++;  // number of extensions
                                bool _array_124[*_tmp_10317];
                                
                                if(debug)
                                    logger->debug() << "|\033[38;5;94m009107\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].perceived_object_container[0].perceived_objects.elements[c].: " << static_cast<unsigned int>(*_tmp_10317);
                                
                                // Extensions bytemap
                                for(int i = 0; i < *_tmp_10317; i++)
                                    _array_124[i] = (*buffer++) != 0;
                                
                                // Discarding unknown OpenType containers
                                for(int i = 0; i < *_tmp_10317; i++) {
                                    uint16_t* _tmp_10318 = (uint16_t*)buffer;  // OpenType length
                                    buffer += 2;
                                
                                    if(debug) {
                                    }
                                
                                    for(int i = 0; i < *_tmp_10318; i++)
                                        buffer++;
                                }
                                
                            }
                    }
                    if(*_ext_flag_4574) { // from ros->payload.cpm_containers.elements[s].perceived_object_container[0]. 
                        uint8_t* _tmp_10319 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_125[*_tmp_10319];
                        
                        if(debug)
                            logger->debug() << "|\033[38;5;94m009108\033[0m| Reading number of exts from ros->payload.cpm_containers.elements[s].perceived_object_container[0].: " << static_cast<unsigned int>(*_tmp_10319);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_10319; i++)
                            _array_125[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_10319; i++) {
                            uint16_t* _tmp_10320 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_10320; i++)
                                buffer++;
                        }
                        
                    }
            }
            else
            {
                logger->warning() << "Wrong option (" << static_cast<int>(_choice_307) << ") selected in CHOICE WrappedCpmContainer in 'payload.cpm_containers.elements[s]'; message dropped.";
                return false;
            }
        }
        if(*_ext_flag_4450) { // from ros->payload. 
            uint8_t* _tmp_10321 = (uint8_t*) buffer++;  // number of extensions
            bool _array_126[*_tmp_10321];
            
            if(debug)
                logger->debug() << "|\033[38;5;94m009109\033[0m| Reading number of exts from ros->payload.: " << static_cast<unsigned int>(*_tmp_10321);
            
            // Extensions bytemap
            for(int i = 0; i < *_tmp_10321; i++)
                _array_126[i] = (*buffer++) != 0;
            
            // Discarding unknown OpenType containers
            for(int i = 0; i < *_tmp_10321; i++) {
                uint16_t* _tmp_10322 = (uint16_t*)buffer;  // OpenType length
                buffer += 2;
            
                if(debug) {
                }
            
                for(int i = 0; i < *_tmp_10322; i++)
                    buffer++;
            }
            
        }
	
	        return true;
        }
    }
}